if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

 /**
  * React v15.4.2
  */
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.React = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
},{}],2:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(24);

var invariant = _dereq_(28);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? "development" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
},{"24":24,"28":28}],3:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(30);

var ReactChildren = _dereq_(4);
var ReactComponent = _dereq_(6);
var ReactPureComponent = _dereq_(17);
var ReactClass = _dereq_(5);
var ReactDOMFactories = _dereq_(9);
var ReactElement = _dereq_(10);
var ReactPropTypes = _dereq_(15);
var ReactVersion = _dereq_(19);

var onlyChild = _dereq_(23);
var warning = _dereq_(29);

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if ("development" !== 'production') {
  var ReactElementValidator = _dereq_(12);
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if ("development" !== 'production') {
  var warned = false;
  __spread = function () {
    "development" !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,
  PureComponent: ReactPureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

module.exports = React;
},{"10":10,"12":12,"15":15,"17":17,"19":19,"23":23,"29":29,"30":30,"4":4,"5":5,"6":6,"9":9}],4:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var PooledClass = _dereq_(2);
var ReactElement = _dereq_(10);

var emptyFunction = _dereq_(26);
var traverseAllChildren = _dereq_(25);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
},{"10":10,"2":2,"25":25,"26":26}],5:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(24),
    _assign = _dereq_(30);

var ReactComponent = _dereq_(6);
var ReactElement = _dereq_(10);
var ReactPropTypeLocationNames = _dereq_(14);
var ReactNoopUpdateQueue = _dereq_(13);

var emptyObject = _dereq_(27);
var invariant = _dereq_(28);
var warning = _dereq_(29);

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

/**
 * Policies that describe methods in `ReactClassInterface`.
 */


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or host components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: 'DEFINE_MANY',

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: 'DEFINE_MANY',

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: 'DEFINE_MANY',

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: 'DEFINE_MANY',

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: 'DEFINE_MANY',

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: 'DEFINE_MANY_MERGED',

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: 'DEFINE_MANY_MERGED',

  /**
   * @return {object}
   * @optional
   */
  getChildContext: 'DEFINE_MANY_MERGED',

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: 'DEFINE_ONCE',

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: 'DEFINE_MANY',

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: 'DEFINE_MANY',

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: 'DEFINE_MANY',

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: 'DEFINE_ONCE',

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: 'DEFINE_MANY',

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: 'OVERRIDE_BASE'

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, childContextTypes, 'childContext');
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, contextTypes, 'context');
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if ("development" !== 'production') {
      validateTypeDef(Constructor, propTypes, 'prop');
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      "development" !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === 'OVERRIDE_BASE') ? "development" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? "development" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if ("development" !== 'production') {
      var typeofSpec = typeof spec;
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      "development" !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ? "development" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? "development" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? "development" !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === 'DEFINE_MANY_MERGED') {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === 'DEFINE_MANY') {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if ("development" !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? "development" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? "development" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? "development" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? "development" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if ("development" !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        "development" !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        "development" !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if ("development" !== 'production') {
        "development" !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if ("development" !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "development" !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if ("development" !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? "development" !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      "development" !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
},{"10":10,"13":13,"14":14,"24":24,"27":27,"28":28,"29":29,"30":30,"6":6}],6:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(24);

var ReactNoopUpdateQueue = _dereq_(13);

var canDefineProperty = _dereq_(20);
var emptyObject = _dereq_(27);
var invariant = _dereq_(28);
var warning = _dereq_(29);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? "development" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if ("development" !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          "development" !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
},{"13":13,"20":20,"24":24,"27":27,"28":28,"29":29}],7:[function(_dereq_,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(24);

var ReactCurrentOwner = _dereq_(8);

var invariant = _dereq_(28);
var warning = _dereq_(29);

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty)
  // Strip regex characters so we can use it for regex
  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  // Remove hasOwnProperty from the template to make it generic
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  "development" !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? "development" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? "development" !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? "development" !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? "development" !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? "development" !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? "development" !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

module.exports = ReactComponentTreeHook;
},{"24":24,"28":28,"29":29,"8":8}],8:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;
},{}],9:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactElement = _dereq_(10);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if ("development" !== 'production') {
  var ReactElementValidator = _dereq_(12);
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
},{"10":10,"12":12}],10:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(30);

var ReactCurrentOwner = _dereq_(8);

var warning = _dereq_(29);
var canDefineProperty = _dereq_(20);
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = _dereq_(11);

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if ("development" !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if ("development" !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      "development" !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      "development" !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if ("development" !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if ("development" !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if ("development" !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
},{"11":11,"20":20,"29":29,"30":30,"8":8}],11:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
},{}],12:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactCurrentOwner = _dereq_(8);
var ReactComponentTreeHook = _dereq_(7);
var ReactElement = _dereq_(10);

var checkReactTypeSpec = _dereq_(21);

var canDefineProperty = _dereq_(20);
var getIteratorFn = _dereq_(22);
var warning = _dereq_(29);

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  "development" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    "development" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
        info += getDeclarationErrorAddendum();
        "development" !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if ("development" !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            "development" !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
},{"10":10,"20":20,"21":21,"22":22,"29":29,"7":7,"8":8}],13:[function(_dereq_,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var warning = _dereq_(29);

function warnNoop(publicInstance, callerName) {
  if ("development" !== 'production') {
    var constructor = publicInstance.constructor;
    "development" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
},{"29":29}],14:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if ("development" !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
},{}],15:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactElement = _dereq_(10);
var ReactPropTypeLocationNames = _dereq_(14);
var ReactPropTypesSecret = _dereq_(16);

var emptyFunction = _dereq_(26);
var getIteratorFn = _dereq_(22);
var warning = _dereq_(29);

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),
  symbol: createPrimitiveTypeChecker('symbol'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: createElementTypeChecker(),
  instanceOf: createInstanceTypeChecker,
  node: createNodeChecker(),
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
/*eslint-disable no-self-compare*/
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}
/*eslint-enable no-self-compare*/

/**
 * We use an Error-like object for backward compatibility as people may call
 * PropTypes directly and inspect their output. However we don't use real
 * Errors anymore. We don't inspect their stack anyway, and creating them
 * is prohibitively expensive if they are created too often, such as what
 * happens in oneOfType() for any type before the one that matched.
 */
function PropTypeError(message) {
  this.message = message;
  this.stack = '';
}
// Make `instanceof Error` still work for returned errors.
PropTypeError.prototype = Error.prototype;

function createChainableTypeChecker(validate) {
  if ("development" !== 'production') {
    var manualPropTypeCallCache = {};
  }
  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if ("development" !== 'production') {
      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
        var cacheKey = componentName + ':' + propName;
        if (!manualPropTypeCallCache[cacheKey]) {
          "development" !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
          manualPropTypeCallCache[cacheKey] = true;
        }
      }
    }
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        if (props[propName] === null) {
          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
        }
        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName, secret) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    if (!ReactElement.isValidElement(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
    "development" !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
    "development" !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

function isSymbol(propType, propValue) {
  // Native Symbol.
  if (propType === 'symbol') {
    return true;
  }

  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
  if (propValue['@@toStringTag'] === 'Symbol') {
    return true;
  }

  // Fallback for non-spec compliant Symbols which are polyfilled.
  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
    return true;
  }

  return false;
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  if (isSymbol(propType, propValue)) {
    return 'symbol';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

// Returns class name of the object, if any.
function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;
},{"10":10,"14":14,"16":16,"22":22,"26":26,"29":29}],16:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
},{}],17:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(30);

var ReactComponent = _dereq_(6);
var ReactNoopUpdateQueue = _dereq_(13);

var emptyObject = _dereq_(27);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = ReactPureComponent;
},{"13":13,"27":27,"30":30,"6":6}],18:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(30);

var React = _dereq_(3);

// `version` will be added here by the React module.
var ReactUMDEntry = _assign({
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentOwner: _dereq_(8)
  }
}, React);

if ("development" !== 'production') {
  _assign(ReactUMDEntry.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    // ReactComponentTreeHook should not be included in production.
    ReactComponentTreeHook: _dereq_(7)
  });
}

module.exports = ReactUMDEntry;
},{"3":3,"30":30,"7":7,"8":8}],19:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

module.exports = '15.4.2';
},{}],20:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var canDefineProperty = false;
if ("development" !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
},{}],21:[function(_dereq_,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(24);

var ReactPropTypeLocationNames = _dereq_(14);
var ReactPropTypesSecret = _dereq_(16);

var invariant = _dereq_(28);
var warning = _dereq_(29);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = _dereq_(7);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      "development" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if ("development" !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = _dereq_(7);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        "development" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,undefined)
},{"14":14,"16":16,"24":24,"28":28,"29":29,"7":7}],22:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],23:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
'use strict';

var _prodInvariant = _dereq_(24);

var ReactElement = _dereq_(10);

var invariant = _dereq_(28);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? "development" !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
},{"10":10,"24":24,"28":28}],24:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
},{}],25:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(24);

var ReactCurrentOwner = _dereq_(8);
var REACT_ELEMENT_TYPE = _dereq_(11);

var getIteratorFn = _dereq_(22);
var invariant = _dereq_(28);
var KeyEscapeUtils = _dereq_(1);
var warning = _dereq_(29);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if ("development" !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          "development" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if ("development" !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? "development" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
},{"1":1,"11":11,"22":22,"24":24,"28":28,"29":29,"8":8}],26:[function(_dereq_,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],27:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if ("development" !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
},{}],28:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if ("development" !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
},{}],29:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = _dereq_(26);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("development" !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return; // Ignore CompositeComponent proptype check.
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
},{"26":26}],30:[function(_dereq_,module,exports){
'use strict';
/* eslint-disable no-unused-vars */
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (e) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (Object.getOwnPropertySymbols) {
			symbols = Object.getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}]},{},[18])(18)
});
 /**
  * ReactDOM v15.4.2
  */

;(function(f) {
  // CommonJS
  if (typeof exports === "object" && typeof module !== "undefined") {
    module.exports = f(require('react'));

  // RequireJS
  } else if (typeof define === "function" && define.amd) {
    define(['react'], f);

  // <script>
  } else {
    var g;
    if (typeof window !== "undefined") {
      g = window;
    } else if (typeof global !== "undefined") {
      g = global;
    } else if (typeof self !== "undefined") {
      g = self;
    } else {
      // works providing we're not in "use strict";
      // needed for Java 8 Nashorn
      // see https://github.com/facebook/react/issues/3037
      g = this;
    }
    g.ReactDOM = f(g.React);
  }
})(function(React) {
  return (function(f){return f()})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;
},{}],2:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentTree = _dereq_(34);

var focusNode = _dereq_(144);

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;
},{"144":144,"34":34}],3:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = _dereq_(20);
var ExecutionEnvironment = _dereq_(136);
var FallbackCompositionState = _dereq_(21);
var SyntheticCompositionEvent = _dereq_(89);
var SyntheticInputEvent = _dereq_(93);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;
},{"136":136,"20":20,"21":21,"89":89,"93":93}],4:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;
},{}],5:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = _dereq_(4);
var ExecutionEnvironment = _dereq_(136);
var ReactInstrumentation = _dereq_(64);

var camelizeStyleName = _dereq_(138);
var dangerousStyleValue = _dereq_(106);
var hyphenateStyleName = _dereq_(149);
var memoizeStringOnly = _dereq_(153);
var warning = _dereq_(157);

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if ("development" !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    "development" !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    "development" !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    "development" !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    "development" !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if ("development" !== 'production') {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("development" !== 'production') {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;
},{"106":106,"136":136,"138":138,"149":149,"153":153,"157":157,"4":4,"64":64}],6:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = _dereq_(25);

var invariant = _dereq_(150);

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? "development" !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
},{"125":125,"150":150,"25":25}],7:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = _dereq_(17);
var EventPropagators = _dereq_(20);
var ExecutionEnvironment = _dereq_(136);
var ReactDOMComponentTree = _dereq_(34);
var ReactUpdates = _dereq_(82);
var SyntheticEvent = _dereq_(91);

var getEventTarget = _dereq_(114);
var isEventSupported = _dereq_(122);
var isTextInputElement = _dereq_(123);

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function () {
    return activeElementValueProp.get.call(this);
  },
  set: function (val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === 'topInput') {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === 'topClick') {
    return targetInst;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }
  }

};

module.exports = ChangeEventPlugin;
},{"114":114,"122":122,"123":123,"136":136,"17":17,"20":20,"34":34,"82":82,"91":91}],8:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMLazyTree = _dereq_(9);
var Danger = _dereq_(13);
var ReactDOMComponentTree = _dereq_(34);
var ReactInstrumentation = _dereq_(64);

var createMicrosoftUnsafeLocalFunction = _dereq_(105);
var setInnerHTML = _dereq_(127);
var setTextContent = _dereq_(128);

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if ("development" !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if ("development" !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: { toIndex: update.toIndex, content: update.content.toString() }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if ("development" !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;
},{"105":105,"127":127,"128":128,"13":13,"34":34,"64":64,"9":9}],9:[function(_dereq_,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = _dereq_(10);
var setInnerHTML = _dereq_(127);

var createMicrosoftUnsafeLocalFunction = _dereq_(105);
var setTextContent = _dereq_(128);

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;
},{"10":10,"105":105,"127":127,"128":128}],10:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;
},{}],11:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? "development" !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? "development" !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if ("development" !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if ("development" !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: "development" !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
},{"125":125,"150":150}],12:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = _dereq_(11);
var ReactDOMComponentTree = _dereq_(34);
var ReactInstrumentation = _dereq_(64);

var quoteAttributeValueForBrowser = _dereq_(124);
var warning = _dereq_(157);

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  "development" !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if ("development" !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if ("development" !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }

};

module.exports = DOMPropertyOperations;
},{"11":11,"124":124,"157":157,"34":34,"64":64}],13:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var DOMLazyTree = _dereq_(9);
var ExecutionEnvironment = _dereq_(136);

var createNodesFromMarkup = _dereq_(141);
var emptyFunction = _dereq_(142);
var invariant = _dereq_(150);

var Danger = {

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;
},{"125":125,"136":136,"141":141,"142":142,"150":150,"9":9}],14:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;
},{}],15:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = _dereq_(20);
var ReactDOMComponentTree = _dereq_(34);
var SyntheticMouseEvent = _dereq_(95);

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;
},{"20":20,"34":34,"95":95}],16:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = {
  topAbort: null,
  topAnimationEnd: null,
  topAnimationIteration: null,
  topAnimationStart: null,
  topBlur: null,
  topCanPlay: null,
  topCanPlayThrough: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topDurationChange: null,
  topEmptied: null,
  topEncrypted: null,
  topEnded: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topInvalid: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topLoadedData: null,
  topLoadedMetadata: null,
  topLoadStart: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topPause: null,
  topPlay: null,
  topPlaying: null,
  topProgress: null,
  topRateChange: null,
  topReset: null,
  topScroll: null,
  topSeeked: null,
  topSeeking: null,
  topSelectionChange: null,
  topStalled: null,
  topSubmit: null,
  topSuspend: null,
  topTextInput: null,
  topTimeUpdate: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topTransitionEnd: null,
  topVolumeChange: null,
  topWaiting: null,
  topWheel: null
};

var EventConstants = {
  topLevelTypes: topLevelTypes
};

module.exports = EventConstants;
},{}],17:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var EventPluginRegistry = _dereq_(18);
var EventPluginUtils = _dereq_(19);
var ReactErrorUtils = _dereq_(55);

var accumulateInto = _dereq_(102);
var forEachAccumulated = _dereq_(110);
var invariant = _dereq_(150);

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? "development" !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? "development" !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }

};

module.exports = EventPluginHub;
},{"102":102,"110":110,"125":125,"150":150,"18":18,"19":19,"55":55}],18:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? "development" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? "development" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if ("development" !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: "development" !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if ("development" !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;
},{"125":125,"150":150}],19:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var ReactErrorUtils = _dereq_(55);

var invariant = _dereq_(150);
var warning = _dereq_(157);

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if ("development" !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    "development" !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("development" !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? "development" !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
},{"125":125,"150":150,"157":157,"55":55}],20:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = _dereq_(17);
var EventPluginUtils = _dereq_(19);

var accumulateInto = _dereq_(102);
var forEachAccumulated = _dereq_(110);
var warning = _dereq_(157);

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
},{"102":102,"110":110,"157":157,"17":17,"19":19}],21:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var PooledClass = _dereq_(25);

var getTextContentAccessor = _dereq_(119);

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
},{"119":119,"158":158,"25":25}],22:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = _dereq_(11);

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {}
};

module.exports = HTMLDOMPropertyConfig;
},{"11":11}],23:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;
},{}],24:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var React = _dereq_(134);
var ReactPropTypesSecret = _dereq_(73);

var invariant = _dereq_(150);
var warning = _dereq_(157);

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: React.PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        "development" !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
},{"125":125,"134":134,"150":150,"157":157,"73":73}],25:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? "development" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
},{"125":125,"150":150}],26:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var EventPluginRegistry = _dereq_(18);
var ReactEventEmitterMixin = _dereq_(56);
var ViewportMetrics = _dereq_(101);

var getVendorPrefixedEventName = _dereq_(120);
var isEventSupported = _dereq_(122);

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;
},{"101":101,"120":120,"122":122,"158":158,"18":18,"56":56}],27:[function(_dereq_,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactReconciler = _dereq_(75);

var instantiateReactComponent = _dereq_(121);
var KeyEscapeUtils = _dereq_(23);
var shouldUpdateReactComponent = _dereq_(129);
var traverseAllChildren = _dereq_(130);
var warning = _dereq_(157);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = _dereq_(132);
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if ("development" !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = _dereq_(132);
    }
    if (!keyUnique) {
      "development" !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
  ) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if ("development" !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
  ) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
}).call(this,undefined)
},{"121":121,"129":129,"130":130,"132":132,"157":157,"23":23,"75":75}],28:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = _dereq_(8);
var ReactDOMIDOperations = _dereq_(38);

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

};

module.exports = ReactComponentBrowserEnvironment;
},{"38":38,"8":8}],29:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? "development" !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;
},{"125":125,"150":150}],30:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

var React = _dereq_(134);
var ReactComponentEnvironment = _dereq_(29);
var ReactCurrentOwner = _dereq_(133);
var ReactErrorUtils = _dereq_(55);
var ReactInstanceMap = _dereq_(63);
var ReactInstrumentation = _dereq_(64);
var ReactNodeTypes = _dereq_(69);
var ReactReconciler = _dereq_(75);

if ("development" !== 'production') {
  var checkReactTypeSpec = _dereq_(104);
}

var emptyObject = _dereq_(143);
var invariant = _dereq_(150);
var shallowEqual = _dereq_(156);
var shouldUpdateReactComponent = _dereq_(129);
var warning = _dereq_(157);

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    "development" !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if ("development" !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? "development" !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if ("development" !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        "development" !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      "development" !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if ("development" !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      "development" !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      "development" !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? "development" !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if ("development" !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if ("development" !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if ("development" !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if ("development" !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if ("development" !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if ("development" !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if ("development" !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if ("development" !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? "development" !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if ("development" !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? "development" !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if ("development" !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? "development" !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if ("development" !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if ("development" !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if ("development" !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if ("development" !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if ("development" !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if ("development" !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if ("development" !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if ("development" !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? "development" !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? "development" !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if ("development" !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      "development" !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

module.exports = ReactCompositeComponent;
},{"104":104,"125":125,"129":129,"133":133,"134":134,"143":143,"150":150,"156":156,"157":157,"158":158,"29":29,"55":55,"63":63,"64":64,"69":69,"75":75}],31:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = _dereq_(34);
var ReactDefaultInjection = _dereq_(52);
var ReactMount = _dereq_(67);
var ReactReconciler = _dereq_(75);
var ReactUpdates = _dereq_(82);
var ReactVersion = _dereq_(83);

var findDOMNode = _dereq_(108);
var getHostComponentFromComposite = _dereq_(115);
var renderSubtreeIntoContainer = _dereq_(126);
var warning = _dereq_(157);

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if ("development" !== 'production') {
  var ExecutionEnvironment = _dereq_(136);
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    "development" !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    "development" !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        "development" !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if ("development" !== 'production') {
  var ReactInstrumentation = _dereq_(64);
  var ReactDOMUnknownPropertyHook = _dereq_(49);
  var ReactDOMNullInputValuePropHook = _dereq_(41);
  var ReactDOMInvalidARIAHook = _dereq_(40);

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;
},{"108":108,"115":115,"126":126,"136":136,"157":157,"34":34,"40":40,"41":41,"49":49,"52":52,"64":64,"67":67,"75":75,"82":82,"83":83}],32:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* global hasOwnProperty:true */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

var AutoFocusUtils = _dereq_(2);
var CSSPropertyOperations = _dereq_(5);
var DOMLazyTree = _dereq_(9);
var DOMNamespaces = _dereq_(10);
var DOMProperty = _dereq_(11);
var DOMPropertyOperations = _dereq_(12);
var EventPluginHub = _dereq_(17);
var EventPluginRegistry = _dereq_(18);
var ReactBrowserEventEmitter = _dereq_(26);
var ReactDOMComponentFlags = _dereq_(33);
var ReactDOMComponentTree = _dereq_(34);
var ReactDOMInput = _dereq_(39);
var ReactDOMOption = _dereq_(42);
var ReactDOMSelect = _dereq_(43);
var ReactDOMTextarea = _dereq_(46);
var ReactInstrumentation = _dereq_(64);
var ReactMultiChild = _dereq_(68);
var ReactServerRenderingTransaction = _dereq_(77);

var emptyFunction = _dereq_(142);
var escapeTextContentForBrowser = _dereq_(107);
var invariant = _dereq_(150);
var isEventSupported = _dereq_(122);
var shallowEqual = _dereq_(156);
var validateDOMNesting = _dereq_(131);
var warning = _dereq_(157);

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  "development" !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? "development" !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? "development" !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? "development" !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if ("development" !== 'production') {
    "development" !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    "development" !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    "development" !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? "development" !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if ("development" !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    "development" !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if ("development" !== 'production') {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? "development" !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? "development" !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? "development" !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if ("development" !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if ("development" !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if ("development" !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if ("development" !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if ("development" !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if ("development" !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if ("development" !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if ("development" !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if ("development" !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? "development" !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if ("development" !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }

};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
},{"10":10,"107":107,"11":11,"12":12,"122":122,"125":125,"131":131,"142":142,"150":150,"156":156,"157":157,"158":158,"17":17,"18":18,"2":2,"26":26,"33":33,"34":34,"39":39,"42":42,"43":43,"46":46,"5":5,"64":64,"68":68,"77":77,"9":9}],33:[function(_dereq_,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;
},{}],34:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var DOMProperty = _dereq_(11);
var ReactDOMComponentFlags = _dereq_(33);

var invariant = _dereq_(150);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? "development" !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? "development" !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
},{"11":11,"125":125,"150":150,"33":33}],35:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var validateDOMNesting = _dereq_(131);

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if ("development" !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
},{"131":131}],36:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var DOMLazyTree = _dereq_(9);
var ReactDOMComponentTree = _dereq_(34);

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;
},{"158":158,"34":34,"9":9}],37:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;
},{}],38:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMChildrenOperations = _dereq_(8);
var ReactDOMComponentTree = _dereq_(34);

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;
},{"34":34,"8":8}],39:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

var DOMPropertyOperations = _dereq_(12);
var LinkedValueUtils = _dereq_(24);
var ReactDOMComponentTree = _dereq_(34);
var ReactUpdates = _dereq_(82);

var invariant = _dereq_(150);
var warning = _dereq_(157);

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if ("development" !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        "development" !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        "development" !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        "development" !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        "development" !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };

    if ("development" !== 'production') {
      inst._wrapperState.controlled = isControlled(props);
    }
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if ("development" !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        "development" !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        "development" !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {

      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? "development" !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
},{"12":12,"125":125,"150":150,"157":157,"158":158,"24":24,"34":34,"82":82}],40:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = _dereq_(11);
var ReactComponentTreeHook = _dereq_(132);

var warning = _dereq_(157);

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      "development" !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    "development" !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    "development" !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function (debugID, element) {
    if ("development" !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function (debugID, element) {
    if ("development" !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;
},{"11":11,"132":132,"157":157}],41:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactComponentTreeHook = _dereq_(132);

var warning = _dereq_(157);

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    "development" !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;
},{"132":132,"157":157}],42:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var React = _dereq_(134);
var ReactDOMComponentTree = _dereq_(34);
var ReactDOMSelect = _dereq_(43);

var warning = _dereq_(157);
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      "development" !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("development" !== 'production') {
      "development" !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }

};

module.exports = ReactDOMOption;
},{"134":134,"157":157,"158":158,"34":34,"43":43}],43:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var LinkedValueUtils = _dereq_(24);
var ReactDOMComponentTree = _dereq_(34);
var ReactUpdates = _dereq_(82);

var warning = _dereq_(157);

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    "development" !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      "development" !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      "development" !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if ("development" !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      "development" !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
},{"157":157,"158":158,"24":24,"34":34,"82":82}],44:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = _dereq_(136);

var getNodeForCharacterOffset = _dereq_(118);
var getTextContentAccessor = _dereq_(119);

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;
},{"118":118,"119":119,"136":136}],45:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

var DOMChildrenOperations = _dereq_(8);
var DOMLazyTree = _dereq_(9);
var ReactDOMComponentTree = _dereq_(34);

var escapeTextContentForBrowser = _dereq_(107);
var invariant = _dereq_(150);
var validateDOMNesting = _dereq_(131);

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if ("development" !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? "development" !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

module.exports = ReactDOMTextComponent;
},{"107":107,"125":125,"131":131,"150":150,"158":158,"34":34,"8":8,"9":9}],46:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

var LinkedValueUtils = _dereq_(24);
var ReactDOMComponentTree = _dereq_(34);
var ReactUpdates = _dereq_(82);

var invariant = _dereq_(150);
var warning = _dereq_(157);

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? "development" !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if ("development" !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        "development" !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        "development" !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if ("development" !== 'production') {
          "development" !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? "development" !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? "development" !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
},{"125":125,"150":150,"157":157,"158":158,"24":24,"34":34,"82":82}],47:[function(_dereq_,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? "development" !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? "development" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? "development" !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? "development" !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
},{"125":125,"150":150}],48:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var React = _dereq_(134);
var ReactDOM = _dereq_(31);

var ReactDOMUMDEntry = ReactDOM;

if ("development" !== 'production') {
  ReactDOMUMDEntry.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {
    // ReactPerf and ReactTestUtils currently only work with the DOM renderer
    // so we expose them from here, but only in DEV mode.
    ReactPerf: _dereq_(71),
    ReactTestUtils: _dereq_(80)
  };
}

// Inject ReactDOM into React for the addons UMD build that depends on ReactDOM (TransitionGroup).
// We can remove this after we deprecate and remove the addons UMD build.
if (React.addons) {
  React.__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMUMDEntry;
}

module.exports = ReactDOMUMDEntry;
},{"134":134,"31":31,"71":71,"80":80}],49:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = _dereq_(11);
var EventPluginRegistry = _dereq_(18);
var ReactComponentTreeHook = _dereq_(132);

var warning = _dereq_(157);

if ("development" !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      "development" !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      "development" !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    "development" !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    "development" !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;
},{"11":11,"132":132,"157":157,"18":18}],50:[function(_dereq_,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactInvalidSetStateWarningHook = _dereq_(65);
var ReactHostOperationHistoryHook = _dereq_(60);
var ReactComponentTreeHook = _dereq_(132);
var ExecutionEnvironment = _dereq_(136);

var performanceNow = _dereq_(155);
var warning = _dereq_(157);

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    "development" !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    "development" !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    "development" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    "development" !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure =
// $FlowFixMe https://github.com/facebook/flow/issues/2345
typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  performance.clearMeasures(measurementName);
}

var ReactDebugTool = {
  addHook: function (hook) {
    hooks.push(hook);
  },
  removeHook: function (hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function (debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
},{"132":132,"136":136,"155":155,"157":157,"60":60,"65":65}],51:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var ReactUpdates = _dereq_(82);
var Transaction = _dereq_(100);

var emptyFunction = _dereq_(142);

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
},{"100":100,"142":142,"158":158,"82":82}],52:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ARIADOMPropertyConfig = _dereq_(1);
var BeforeInputEventPlugin = _dereq_(3);
var ChangeEventPlugin = _dereq_(7);
var DefaultEventPluginOrder = _dereq_(14);
var EnterLeaveEventPlugin = _dereq_(15);
var HTMLDOMPropertyConfig = _dereq_(22);
var ReactComponentBrowserEnvironment = _dereq_(28);
var ReactDOMComponent = _dereq_(32);
var ReactDOMComponentTree = _dereq_(34);
var ReactDOMEmptyComponent = _dereq_(36);
var ReactDOMTreeTraversal = _dereq_(47);
var ReactDOMTextComponent = _dereq_(45);
var ReactDefaultBatchingStrategy = _dereq_(51);
var ReactEventListener = _dereq_(57);
var ReactInjection = _dereq_(61);
var ReactReconcileTransaction = _dereq_(74);
var SVGDOMPropertyConfig = _dereq_(84);
var SelectEventPlugin = _dereq_(85);
var SimpleEventPlugin = _dereq_(86);

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};
},{"1":1,"14":14,"15":15,"22":22,"28":28,"3":3,"32":32,"34":34,"36":36,"45":45,"47":47,"51":51,"57":57,"61":61,"7":7,"74":74,"84":84,"85":85,"86":86}],53:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;
},{}],54:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
},{}],55:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if ("development" !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      // $FlowFixMe https://github.com/facebook/flow/issues/2336
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
},{}],56:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPluginHub = _dereq_(17);

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
},{"17":17}],57:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var EventListener = _dereq_(135);
var ExecutionEnvironment = _dereq_(136);
var PooledClass = _dereq_(25);
var ReactDOMComponentTree = _dereq_(34);
var ReactUpdates = _dereq_(82);

var getEventTarget = _dereq_(114);
var getUnboundedScrollPosition = _dereq_(147);

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;
},{"114":114,"135":135,"136":136,"147":147,"158":158,"25":25,"34":34,"82":82}],58:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
},{}],59:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? "development" !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
},{"125":125,"150":150}],60:[function(_dereq_,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function (operation) {
    history.push(operation);
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;
},{}],61:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var DOMProperty = _dereq_(11);
var EventPluginHub = _dereq_(17);
var EventPluginUtils = _dereq_(19);
var ReactComponentEnvironment = _dereq_(29);
var ReactEmptyComponent = _dereq_(54);
var ReactBrowserEventEmitter = _dereq_(26);
var ReactHostComponent = _dereq_(59);
var ReactUpdates = _dereq_(82);

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;
},{"11":11,"17":17,"19":19,"26":26,"29":29,"54":54,"59":59,"82":82}],62:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactDOMSelection = _dereq_(44);

var containsNode = _dereq_(139);
var focusNode = _dereq_(144);
var getActiveElement = _dereq_(145);

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;
},{"139":139,"144":144,"145":145,"44":44}],63:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;
},{}],64:[function(_dereq_,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if ("development" !== 'production') {
  var ReactDebugTool = _dereq_(50);
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
},{"50":50}],65:[function(_dereq_,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var warning = _dereq_(157);

if ("development" !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    "development" !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
},{"157":157}],66:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var adler32 = _dereq_(103);

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;
},{"103":103}],67:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var DOMLazyTree = _dereq_(9);
var DOMProperty = _dereq_(11);
var React = _dereq_(134);
var ReactBrowserEventEmitter = _dereq_(26);
var ReactCurrentOwner = _dereq_(133);
var ReactDOMComponentTree = _dereq_(34);
var ReactDOMContainerInfo = _dereq_(35);
var ReactDOMFeatureFlags = _dereq_(37);
var ReactFeatureFlags = _dereq_(58);
var ReactInstanceMap = _dereq_(63);
var ReactInstrumentation = _dereq_(64);
var ReactMarkupChecksum = _dereq_(66);
var ReactReconciler = _dereq_(75);
var ReactUpdateQueue = _dereq_(81);
var ReactUpdates = _dereq_(82);

var emptyObject = _dereq_(143);
var instantiateReactComponent = _dereq_(121);
var invariant = _dereq_(150);
var setInnerHTML = _dereq_(127);
var shouldUpdateReactComponent = _dereq_(129);
var warning = _dereq_(157);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if ("development" !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if ("development" !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? "development" !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? "development" !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    "development" !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            "development" !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if ("development" !== 'production') {
      "development" !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if ("development" !== 'production') {
        "development" !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? "development" !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if ("development" !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? "development" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if ("development" !== 'production') {
          "development" !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? "development" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if ("development" !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;
},{"11":11,"121":121,"125":125,"127":127,"129":129,"133":133,"134":134,"143":143,"150":150,"157":157,"26":26,"34":34,"35":35,"37":37,"58":58,"63":63,"64":64,"66":66,"75":75,"81":81,"82":82,"9":9}],68:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var ReactComponentEnvironment = _dereq_(29);
var ReactInstanceMap = _dereq_(63);
var ReactInstrumentation = _dereq_(64);

var ReactCurrentOwner = _dereq_(133);
var ReactReconciler = _dereq_(75);
var ReactChildReconciler = _dereq_(27);

var emptyFunction = _dereq_(142);
var flattenChildren = _dereq_(109);
var invariant = _dereq_(150);

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if ("development" !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if ("development" !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if ("development" !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if ("development" !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if ("development" !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? "development" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? "development" !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if ("development" !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;
},{"109":109,"125":125,"133":133,"142":142,"150":150,"27":27,"29":29,"63":63,"64":64,"75":75}],69:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

var React = _dereq_(134);

var invariant = _dereq_(150);

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
    !false ? "development" !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
},{"125":125,"134":134,"150":150}],70:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ? "development" !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ? "development" !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;
},{"125":125,"150":150}],71:[function(_dereq_,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _assign = _dereq_(158);

var _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var ReactDebugTool = _dereq_(50);
var warning = _dereq_(157);
var alreadyWarned = false;

function roundFloat(val) {
  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;

  var n = Math.pow(10, base);
  return Math.floor(val * n) / n;
}

// Flow type definition of console.table is too strict right now, see
// https://github.com/facebook/flow/pull/2353 for updates
function consoleTable(table) {
  console.table(table);
}

function warnInProduction() {
  if (alreadyWarned) {
    return;
  }
  alreadyWarned = true;
  if (typeof console !== 'undefined') {
    console.error('ReactPerf is not supported in the production builds of React. ' + 'To collect measurements, please use the development build of React instead.');
  }
}

function getLastMeasurements() {
  if (!("development" !== 'production')) {
    warnInProduction();
    return [];
  }

  return ReactDebugTool.getFlushHistory();
}

function getExclusive() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!("development" !== 'production')) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
    var displayName = treeSnapshot[instanceID].displayName;

    var key = displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        counts: {},
        durations: {},
        totalDuration: 0
      };
    }
    if (!stats.durations[timerType]) {
      stats.durations[timerType] = 0;
    }
    if (!stats.counts[timerType]) {
      stats.counts[timerType] = 0;
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot;

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      updateAggregatedStats(treeSnapshot, instanceID, timerType, function (stats) {
        stats.totalDuration += duration;
        stats.durations[timerType] += duration;
        stats.counts[timerType]++;
      });
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return _extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.totalDuration - a.totalDuration;
  });
}

function getInclusive() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!("development" !== 'production')) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
    var _treeSnapshot$instanc = treeSnapshot[instanceID],
        displayName = _treeSnapshot$instanc.displayName,
        ownerID = _treeSnapshot$instanc.ownerID;

    var owner = treeSnapshot[ownerID];
    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        inclusiveRenderDuration: 0,
        renderCount: 0
      };
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  var isCompositeByID = {};
  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements;

    measurements.forEach(function (measurement) {
      var instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      isCompositeByID[instanceID] = true;
    });
  });

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot;

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
        stats.renderCount++;
      });
      var nextParentID = instanceID;
      while (nextParentID) {
        // As we traverse parents, only count inclusive time towards composites.
        // We know something is a composite if its render() was called.
        if (isCompositeByID[nextParentID]) {
          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
            stats.inclusiveRenderDuration += duration;
          });
        }
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return _extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
  });
}

function getWasted() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!("development" !== 'production')) {
    warnInProduction();
    return [];
  }

  var aggregatedStats = {};
  var affectedIDs = {};

  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
    var _treeSnapshot$instanc2 = treeSnapshot[instanceID],
        displayName = _treeSnapshot$instanc2.displayName,
        ownerID = _treeSnapshot$instanc2.ownerID;

    var owner = treeSnapshot[ownerID];
    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
    var stats = aggregatedStats[key];
    if (!stats) {
      affectedIDs[key] = {};
      stats = aggregatedStats[key] = {
        key: key,
        instanceCount: 0,
        inclusiveRenderDuration: 0,
        renderCount: 0
      };
    }
    affectedIDs[key][instanceID] = true;
    applyUpdate(stats);
  }

  flushHistory.forEach(function (flush) {
    var measurements = flush.measurements,
        treeSnapshot = flush.treeSnapshot,
        operations = flush.operations;

    var isDefinitelyNotWastedByID = {};

    // Find host components associated with an operation in this batch.
    // Mark all components in their parent tree as definitely not wasted.
    operations.forEach(function (operation) {
      var instanceID = operation.instanceID;

      var nextParentID = instanceID;
      while (nextParentID) {
        isDefinitelyNotWastedByID[nextParentID] = true;
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });

    // Find composite components that rendered in this batch.
    // These are potential candidates for being wasted renders.
    var renderedCompositeIDs = {};
    measurements.forEach(function (measurement) {
      var instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }
      renderedCompositeIDs[instanceID] = true;
    });

    measurements.forEach(function (measurement) {
      var duration = measurement.duration,
          instanceID = measurement.instanceID,
          timerType = measurement.timerType;

      if (timerType !== 'render') {
        return;
      }

      // If there was a DOM update below this component, or it has just been
      // mounted, its render() is not considered wasted.
      var updateCount = treeSnapshot[instanceID].updateCount;

      if (isDefinitelyNotWastedByID[instanceID] || updateCount === 0) {
        return;
      }

      // We consider this render() wasted.
      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
        stats.renderCount++;
      });

      var nextParentID = instanceID;
      while (nextParentID) {
        // Any parents rendered during this batch are considered wasted
        // unless we previously marked them as dirty.
        var isWasted = renderedCompositeIDs[nextParentID] && !isDefinitelyNotWastedByID[nextParentID];
        if (isWasted) {
          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
            stats.inclusiveRenderDuration += duration;
          });
        }
        nextParentID = treeSnapshot[nextParentID].parentID;
      }
    });
  });

  return Object.keys(aggregatedStats).map(function (key) {
    return _extends({}, aggregatedStats[key], {
      instanceCount: Object.keys(affectedIDs[key]).length
    });
  }).sort(function (a, b) {
    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
  });
}

function getOperations() {
  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();

  if (!("development" !== 'production')) {
    warnInProduction();
    return [];
  }

  var stats = [];
  flushHistory.forEach(function (flush, flushIndex) {
    var operations = flush.operations,
        treeSnapshot = flush.treeSnapshot;

    operations.forEach(function (operation) {
      var instanceID = operation.instanceID,
          type = operation.type,
          payload = operation.payload;
      var _treeSnapshot$instanc3 = treeSnapshot[instanceID],
          displayName = _treeSnapshot$instanc3.displayName,
          ownerID = _treeSnapshot$instanc3.ownerID;

      var owner = treeSnapshot[ownerID];
      var key = (owner ? owner.displayName + ' > ' : '') + displayName;

      stats.push({
        flushIndex: flushIndex,
        instanceID: instanceID,
        key: key,
        type: type,
        ownerID: ownerID,
        payload: payload
      });
    });
  });
  return stats;
}

function printExclusive(flushHistory) {
  if (!("development" !== 'production')) {
    warnInProduction();
    return;
  }

  var stats = getExclusive(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        totalDuration = item.totalDuration;

    var renderCount = item.counts.render || 0;
    var renderDuration = item.durations.render || 0;
    return {
      'Component': key,
      'Total time (ms)': roundFloat(totalDuration),
      'Instance count': instanceCount,
      'Total render time (ms)': roundFloat(renderDuration),
      'Average render time (ms)': renderCount ? roundFloat(renderDuration / renderCount) : undefined,
      'Render count': renderCount,
      'Total lifecycle time (ms)': roundFloat(totalDuration - renderDuration)
    };
  });
  consoleTable(table);
}

function printInclusive(flushHistory) {
  if (!("development" !== 'production')) {
    warnInProduction();
    return;
  }

  var stats = getInclusive(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        inclusiveRenderDuration = item.inclusiveRenderDuration,
        renderCount = item.renderCount;

    return {
      'Owner > Component': key,
      'Inclusive render time (ms)': roundFloat(inclusiveRenderDuration),
      'Instance count': instanceCount,
      'Render count': renderCount
    };
  });
  consoleTable(table);
}

function printWasted(flushHistory) {
  if (!("development" !== 'production')) {
    warnInProduction();
    return;
  }

  var stats = getWasted(flushHistory);
  var table = stats.map(function (item) {
    var key = item.key,
        instanceCount = item.instanceCount,
        inclusiveRenderDuration = item.inclusiveRenderDuration,
        renderCount = item.renderCount;

    return {
      'Owner > Component': key,
      'Inclusive wasted time (ms)': roundFloat(inclusiveRenderDuration),
      'Instance count': instanceCount,
      'Render count': renderCount
    };
  });
  consoleTable(table);
}

function printOperations(flushHistory) {
  if (!("development" !== 'production')) {
    warnInProduction();
    return;
  }

  var stats = getOperations(flushHistory);
  var table = stats.map(function (stat) {
    return {
      'Owner > Node': stat.key,
      'Operation': stat.type,
      'Payload': typeof stat.payload === 'object' ? JSON.stringify(stat.payload) : stat.payload,
      'Flush index': stat.flushIndex,
      'Owner Component ID': stat.ownerID,
      'DOM Component ID': stat.instanceID
    };
  });
  consoleTable(table);
}

var warnedAboutPrintDOM = false;
function printDOM(measurements) {
  "development" !== 'production' ? warning(warnedAboutPrintDOM, '`ReactPerf.printDOM(...)` is deprecated. Use ' + '`ReactPerf.printOperations(...)` instead.') : void 0;
  warnedAboutPrintDOM = true;
  return printOperations(measurements);
}

var warnedAboutGetMeasurementsSummaryMap = false;
function getMeasurementsSummaryMap(measurements) {
  "development" !== 'production' ? warning(warnedAboutGetMeasurementsSummaryMap, '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' + '`ReactPerf.getWasted(...)` instead.') : void 0;
  warnedAboutGetMeasurementsSummaryMap = true;
  return getWasted(measurements);
}

function start() {
  if (!("development" !== 'production')) {
    warnInProduction();
    return;
  }

  ReactDebugTool.beginProfiling();
}

function stop() {
  if (!("development" !== 'production')) {
    warnInProduction();
    return;
  }

  ReactDebugTool.endProfiling();
}

function isRunning() {
  if (!("development" !== 'production')) {
    warnInProduction();
    return false;
  }

  return ReactDebugTool.isProfiling();
}

var ReactPerfAnalysis = {
  getLastMeasurements: getLastMeasurements,
  getExclusive: getExclusive,
  getInclusive: getInclusive,
  getWasted: getWasted,
  getOperations: getOperations,
  printExclusive: printExclusive,
  printInclusive: printInclusive,
  printWasted: printWasted,
  printOperations: printOperations,
  start: start,
  stop: stop,
  isRunning: isRunning,
  // Deprecated:
  printDOM: printDOM,
  getMeasurementsSummaryMap: getMeasurementsSummaryMap
};

module.exports = ReactPerfAnalysis;
},{"157":157,"158":158,"50":50}],72:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypeLocationNames = {};

if ("development" !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
},{}],73:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
},{}],74:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var CallbackQueue = _dereq_(6);
var PooledClass = _dereq_(25);
var ReactBrowserEventEmitter = _dereq_(26);
var ReactInputSelection = _dereq_(62);
var ReactInstrumentation = _dereq_(64);
var Transaction = _dereq_(100);
var ReactUpdateQueue = _dereq_(81);

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if ("development" !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
},{"100":100,"158":158,"25":25,"26":26,"6":6,"62":62,"64":64,"81":81}],75:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactRef = _dereq_(76);
var ReactInstrumentation = _dereq_(64);

var warning = _dereq_(157);

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
  ) {
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      "development" !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if ("development" !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }

};

module.exports = ReactReconciler;
},{"157":157,"64":64,"76":76}],76:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var ReactOwner = _dereq_(70);

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
},{"70":70}],77:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var PooledClass = _dereq_(25);
var Transaction = _dereq_(100);
var ReactInstrumentation = _dereq_(64);
var ReactServerUpdateQueue = _dereq_(78);

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if ("development" !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
},{"100":100,"158":158,"25":25,"64":64,"78":78}],78:[function(_dereq_,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = _dereq_(81);

var warning = _dereq_(157);

function warnNoop(publicInstance, callerName) {
  if ("development" !== 'production') {
    var constructor = publicInstance.constructor;
    "development" !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
},{"157":157,"81":81}],79:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var React = _dereq_(134);
var ReactDefaultInjection = _dereq_(52);
var ReactCompositeComponent = _dereq_(30);
var ReactReconciler = _dereq_(75);
var ReactUpdates = _dereq_(82);

var emptyObject = _dereq_(143);
var getNextDebugID = _dereq_(117);
var invariant = _dereq_(150);

var NoopInternalComponent = function () {
  function NoopInternalComponent(element) {
    _classCallCheck(this, NoopInternalComponent);

    this._renderedOutput = element;
    this._currentElement = element;

    if ("development" !== 'production') {
      this._debugID = getNextDebugID();
    }
  }

  NoopInternalComponent.prototype.mountComponent = function mountComponent() {};

  NoopInternalComponent.prototype.receiveComponent = function receiveComponent(element) {
    this._renderedOutput = element;
    this._currentElement = element;
  };

  NoopInternalComponent.prototype.unmountComponent = function unmountComponent() {};

  NoopInternalComponent.prototype.getHostNode = function getHostNode() {
    return undefined;
  };

  NoopInternalComponent.prototype.getPublicInstance = function getPublicInstance() {
    return null;
  };

  return NoopInternalComponent;
}();

var ShallowComponentWrapper = function (element) {
  // TODO: Consolidate with instantiateReactComponent
  if ("development" !== 'production') {
    this._debugID = getNextDebugID();
  }

  this.construct(element);
};
_assign(ShallowComponentWrapper.prototype, ReactCompositeComponent, {
  _constructComponent: ReactCompositeComponent._constructComponentWithoutOwner,
  _instantiateReactComponent: function (element) {
    return new NoopInternalComponent(element);
  },
  _replaceNodeWithMarkup: function () {},
  _renderValidatedComponent: ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext
});

function _batchedRender(renderer, element, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
  renderer._render(element, transaction, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

var ReactShallowRenderer = function () {
  function ReactShallowRenderer() {
    _classCallCheck(this, ReactShallowRenderer);

    this._instance = null;
  }

  ReactShallowRenderer.prototype.getMountedInstance = function getMountedInstance() {
    return this._instance ? this._instance._instance : null;
  };

  ReactShallowRenderer.prototype.render = function render(element, context) {
    // Ensure we've done the default injections. This might not be true in the
    // case of a simple test that only requires React and the TestUtils in
    // conjunction with an inline-requires transform.
    ReactDefaultInjection.inject();

    !React.isValidElement(element) ? "development" !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Invalid component element.%s', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : _prodInvariant('12', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : void 0;
    !(typeof element.type !== 'string') ? "development" !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Shallow rendering works only with custom components, not primitives (%s). Instead of calling `.render(el)` and inspecting the rendered output, look at `el.props` directly instead.', element.type) : _prodInvariant('13', element.type) : void 0;

    if (!context) {
      context = emptyObject;
    }
    ReactUpdates.batchedUpdates(_batchedRender, this, element, context);

    return this.getRenderOutput();
  };

  ReactShallowRenderer.prototype.getRenderOutput = function getRenderOutput() {
    return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;
  };

  ReactShallowRenderer.prototype.unmount = function unmount() {
    if (this._instance) {
      ReactReconciler.unmountComponent(this._instance, false);
    }
  };

  ReactShallowRenderer.prototype._render = function _render(element, transaction, context) {
    if (this._instance) {
      ReactReconciler.receiveComponent(this._instance, element, transaction, context);
    } else {
      var instance = new ShallowComponentWrapper(element);
      ReactReconciler.mountComponent(instance, transaction, null, null, context, 0);
      this._instance = instance;
    }
  };

  return ReactShallowRenderer;
}();

module.exports = ReactShallowRenderer;
},{"117":117,"125":125,"134":134,"143":143,"150":150,"158":158,"30":30,"52":52,"75":75,"82":82}],80:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

var EventConstants = _dereq_(16);
var EventPluginHub = _dereq_(17);
var EventPluginRegistry = _dereq_(18);
var EventPropagators = _dereq_(20);
var React = _dereq_(134);
var ReactDOM = _dereq_(31);
var ReactDOMComponentTree = _dereq_(34);
var ReactBrowserEventEmitter = _dereq_(26);
var ReactInstanceMap = _dereq_(63);
var ReactUpdates = _dereq_(82);
var SyntheticEvent = _dereq_(91);
var ReactShallowRenderer = _dereq_(79);

var findDOMNode = _dereq_(108);
var invariant = _dereq_(150);

var topLevelTypes = EventConstants.topLevelTypes;

function Event(suffix) {}

/**
 * @class ReactTestUtils
 */

function findAllInRenderedTreeInternal(inst, test) {
  if (!inst || !inst.getPublicInstance) {
    return [];
  }
  var publicInst = inst.getPublicInstance();
  var ret = test(publicInst) ? [publicInst] : [];
  var currentElement = inst._currentElement;
  if (ReactTestUtils.isDOMComponent(publicInst)) {
    var renderedChildren = inst._renderedChildren;
    var key;
    for (key in renderedChildren) {
      if (!renderedChildren.hasOwnProperty(key)) {
        continue;
      }
      ret = ret.concat(findAllInRenderedTreeInternal(renderedChildren[key], test));
    }
  } else if (React.isValidElement(currentElement) && typeof currentElement.type === 'function') {
    ret = ret.concat(findAllInRenderedTreeInternal(inst._renderedComponent, test));
  }
  return ret;
}

/**
 * Utilities for making it easy to test React components.
 *
 * See https://facebook.github.io/react/docs/test-utils.html
 *
 * Todo: Support the entire DOM.scry query syntax. For now, these simple
 * utilities will suffice for testing purposes.
 * @lends ReactTestUtils
 */
var ReactTestUtils = {
  renderIntoDocument: function (element) {
    var div = document.createElement('div');
    // None of our tests actually require attaching the container to the
    // DOM, and doing so creates a mess that we rely on test isolation to
    // clean up, so we're going to stop honoring the name of this method
    // (and probably rename it eventually) if no problems arise.
    // document.documentElement.appendChild(div);
    return ReactDOM.render(element, div);
  },

  isElement: function (element) {
    return React.isValidElement(element);
  },

  isElementOfType: function (inst, convenienceConstructor) {
    return React.isValidElement(inst) && inst.type === convenienceConstructor;
  },

  isDOMComponent: function (inst) {
    return !!(inst && inst.nodeType === 1 && inst.tagName);
  },

  isDOMComponentElement: function (inst) {
    return !!(inst && React.isValidElement(inst) && !!inst.tagName);
  },

  isCompositeComponent: function (inst) {
    if (ReactTestUtils.isDOMComponent(inst)) {
      // Accessing inst.setState warns; just return false as that'll be what
      // this returns when we have DOM nodes as refs directly
      return false;
    }
    return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';
  },

  isCompositeComponentWithType: function (inst, type) {
    if (!ReactTestUtils.isCompositeComponent(inst)) {
      return false;
    }
    var internalInstance = ReactInstanceMap.get(inst);
    var constructor = internalInstance._currentElement.type;

    return constructor === type;
  },

  isCompositeComponentElement: function (inst) {
    if (!React.isValidElement(inst)) {
      return false;
    }
    // We check the prototype of the type that will get mounted, not the
    // instance itself. This is a future proof way of duck typing.
    var prototype = inst.type.prototype;
    return typeof prototype.render === 'function' && typeof prototype.setState === 'function';
  },

  isCompositeComponentElementWithType: function (inst, type) {
    var internalInstance = ReactInstanceMap.get(inst);
    var constructor = internalInstance._currentElement.type;

    return !!(ReactTestUtils.isCompositeComponentElement(inst) && constructor === type);
  },

  getRenderedChildOfCompositeComponent: function (inst) {
    if (!ReactTestUtils.isCompositeComponent(inst)) {
      return null;
    }
    var internalInstance = ReactInstanceMap.get(inst);
    return internalInstance._renderedComponent.getPublicInstance();
  },

  findAllInRenderedTree: function (inst, test) {
    if (!inst) {
      return [];
    }
    !ReactTestUtils.isCompositeComponent(inst) ? "development" !== 'production' ? invariant(false, 'findAllInRenderedTree(...): instance must be a composite component') : _prodInvariant('10') : void 0;
    return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);
  },

  /**
   * Finds all instance of components in the rendered tree that are DOM
   * components with the class name matching `className`.
   * @return {array} an array of all the matches.
   */
  scryRenderedDOMComponentsWithClass: function (root, classNames) {
    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
      if (ReactTestUtils.isDOMComponent(inst)) {
        var className = inst.className;
        if (typeof className !== 'string') {
          // SVG, probably.
          className = inst.getAttribute('class') || '';
        }
        var classList = className.split(/\s+/);

        if (!Array.isArray(classNames)) {
          !(classNames !== undefined) ? "development" !== 'production' ? invariant(false, 'TestUtils.scryRenderedDOMComponentsWithClass expects a className as a second argument.') : _prodInvariant('11') : void 0;
          classNames = classNames.split(/\s+/);
        }
        return classNames.every(function (name) {
          return classList.indexOf(name) !== -1;
        });
      }
      return false;
    });
  },

  /**
   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactDOMComponent} The one match.
   */
  findRenderedDOMComponentWithClass: function (root, className) {
    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
    if (all.length !== 1) {
      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for class:' + className);
    }
    return all[0];
  },

  /**
   * Finds all instance of components in the rendered tree that are DOM
   * components with the tag name matching `tagName`.
   * @return {array} an array of all the matches.
   */
  scryRenderedDOMComponentsWithTag: function (root, tagName) {
    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
      return ReactTestUtils.isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();
    });
  },

  /**
   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactDOMComponent} The one match.
   */
  findRenderedDOMComponentWithTag: function (root, tagName) {
    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
    if (all.length !== 1) {
      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for tag:' + tagName);
    }
    return all[0];
  },

  /**
   * Finds all instances of components with type equal to `componentType`.
   * @return {array} an array of all the matches.
   */
  scryRenderedComponentsWithType: function (root, componentType) {
    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);
    });
  },

  /**
   * Same as `scryRenderedComponentsWithType` but expects there to be one result
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactComponent} The one match.
   */
  findRenderedComponentWithType: function (root, componentType) {
    var all = ReactTestUtils.scryRenderedComponentsWithType(root, componentType);
    if (all.length !== 1) {
      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for componentType:' + componentType);
    }
    return all[0];
  },

  /**
   * Pass a mocked component module to this method to augment it with
   * useful methods that allow it to be used as a dummy React component.
   * Instead of rendering as usual, the component will become a simple
   * <div> containing any provided children.
   *
   * @param {object} module the mock function object exported from a
   *                        module that defines the component to be mocked
   * @param {?string} mockTagName optional dummy root tag name to return
   *                              from render method (overrides
   *                              module.mockTagName if provided)
   * @return {object} the ReactTestUtils object (for chaining)
   */
  mockComponent: function (module, mockTagName) {
    mockTagName = mockTagName || module.mockTagName || 'div';

    module.prototype.render.mockImplementation(function () {
      return React.createElement(mockTagName, null, this.props.children);
    });

    return this;
  },

  /**
   * Simulates a top level event being dispatched from a raw event that occurred
   * on an `Element` node.
   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`
   * @param {!Element} node The dom to simulate an event occurring on.
   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
   */
  simulateNativeEventOnNode: function (topLevelType, node, fakeNativeEvent) {
    fakeNativeEvent.target = node;
    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(topLevelType, fakeNativeEvent);
  },

  /**
   * Simulates a top level event being dispatched from a raw event that occurred
   * on the `ReactDOMComponent` `comp`.
   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.
   * @param {!ReactDOMComponent} comp
   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
   */
  simulateNativeEventOnDOMComponent: function (topLevelType, comp, fakeNativeEvent) {
    ReactTestUtils.simulateNativeEventOnNode(topLevelType, findDOMNode(comp), fakeNativeEvent);
  },

  nativeTouchData: function (x, y) {
    return {
      touches: [{ pageX: x, pageY: y }]
    };
  },

  createRenderer: function () {
    return new ReactShallowRenderer();
  },

  Simulate: null,
  SimulateNative: {}
};

/**
 * Exports:
 *
 * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`
 * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`
 * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`
 * - ... (All keys from event plugin `eventTypes` objects)
 */
function makeSimulator(eventType) {
  return function (domComponentOrNode, eventData) {
    var node;
    !!React.isValidElement(domComponentOrNode) ? "development" !== 'production' ? invariant(false, 'TestUtils.Simulate expects a component instance and not a ReactElement.TestUtils.Simulate will not work if you are using shallow rendering.') : _prodInvariant('14') : void 0;
    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
      node = findDOMNode(domComponentOrNode);
    } else if (domComponentOrNode.tagName) {
      node = domComponentOrNode;
    }

    var dispatchConfig = EventPluginRegistry.eventNameDispatchConfigs[eventType];

    var fakeNativeEvent = new Event();
    fakeNativeEvent.target = node;
    fakeNativeEvent.type = eventType.toLowerCase();

    // We don't use SyntheticEvent.getPooled in order to not have to worry about
    // properly destroying any properties assigned from `eventData` upon release
    var event = new SyntheticEvent(dispatchConfig, ReactDOMComponentTree.getInstanceFromNode(node), fakeNativeEvent, node);
    // Since we aren't using pooling, always persist the event. This will make
    // sure it's marked and won't warn when setting additional properties.
    event.persist();
    _assign(event, eventData);

    if (dispatchConfig.phasedRegistrationNames) {
      EventPropagators.accumulateTwoPhaseDispatches(event);
    } else {
      EventPropagators.accumulateDirectDispatches(event);
    }

    ReactUpdates.batchedUpdates(function () {
      EventPluginHub.enqueueEvents(event);
      EventPluginHub.processEventQueue(true);
    });
  };
}

function buildSimulators() {
  ReactTestUtils.Simulate = {};

  var eventType;
  for (eventType in EventPluginRegistry.eventNameDispatchConfigs) {
    /**
     * @param {!Element|ReactDOMComponent} domComponentOrNode
     * @param {?object} eventData Fake event data to use in SyntheticEvent.
     */
    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);
  }
}

// Rebuild ReactTestUtils.Simulate whenever event plugins are injected
var oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function () {
  oldInjectEventPluginOrder.apply(this, arguments);
  buildSimulators();
};
var oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function () {
  oldInjectEventPlugins.apply(this, arguments);
  buildSimulators();
};

buildSimulators();

/**
 * Exports:
 *
 * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`
 * - ... (All keys from `EventConstants.topLevelTypes`)
 *
 * Note: Top level event types are a subset of the entire set of handler types
 * (which include a broader set of "synthetic" events). For example, onDragDone
 * is a synthetic event. Except when testing an event plugin or React's event
 * handling code specifically, you probably want to use ReactTestUtils.Simulate
 * to dispatch synthetic events.
 */

function makeNativeSimulator(eventType) {
  return function (domComponentOrNode, nativeEventData) {
    var fakeNativeEvent = new Event(eventType);
    _assign(fakeNativeEvent, nativeEventData);
    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
      ReactTestUtils.simulateNativeEventOnDOMComponent(eventType, domComponentOrNode, fakeNativeEvent);
    } else if (domComponentOrNode.tagName) {
      // Will allow on actual dom nodes.
      ReactTestUtils.simulateNativeEventOnNode(eventType, domComponentOrNode, fakeNativeEvent);
    }
  };
}

Object.keys(topLevelTypes).forEach(function (eventType) {
  // Event type is stored as 'topClick' - we transform that to 'click'
  var convenienceName = eventType.indexOf('top') === 0 ? eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
  /**
   * @param {!Element|ReactDOMComponent} domComponentOrNode
   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.
   */
  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(eventType);
});

module.exports = ReactTestUtils;
},{"108":108,"125":125,"134":134,"150":150,"158":158,"16":16,"17":17,"18":18,"20":20,"26":26,"31":31,"34":34,"63":63,"79":79,"82":82,"91":91}],81:[function(_dereq_,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var ReactCurrentOwner = _dereq_(133);
var ReactInstanceMap = _dereq_(63);
var ReactInstrumentation = _dereq_(64);
var ReactUpdates = _dereq_(82);

var invariant = _dereq_(150);
var warning = _dereq_(157);

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if ("development" !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      "development" !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if ("development" !== 'production') {
    "development" !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if ("development" !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        "development" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if ("development" !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      "development" !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? "development" !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }

};

module.exports = ReactUpdateQueue;
},{"125":125,"133":133,"150":150,"157":157,"63":63,"64":64,"82":82}],82:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

var CallbackQueue = _dereq_(6);
var PooledClass = _dereq_(25);
var ReactFeatureFlags = _dereq_(58);
var ReactReconciler = _dereq_(75);
var Transaction = _dereq_(100);

var invariant = _dereq_(150);

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? "development" !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? "development" !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
},{"100":100,"125":125,"150":150,"158":158,"25":25,"58":58,"6":6,"75":75}],83:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

module.exports = '15.4.2';
},{}],84:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;
},{}],85:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var EventPropagators = _dereq_(20);
var ExecutionEnvironment = _dereq_(136);
var ReactDOMComponentTree = _dereq_(34);
var ReactInputSelection = _dereq_(62);
var SyntheticEvent = _dereq_(91);

var getActiveElement = _dereq_(145);
var isTextInputElement = _dereq_(123);
var shallowEqual = _dereq_(156);

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;
},{"123":123,"136":136,"145":145,"156":156,"20":20,"34":34,"62":62,"91":91}],86:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

var EventListener = _dereq_(135);
var EventPropagators = _dereq_(20);
var ReactDOMComponentTree = _dereq_(34);
var SyntheticAnimationEvent = _dereq_(87);
var SyntheticClipboardEvent = _dereq_(88);
var SyntheticEvent = _dereq_(91);
var SyntheticFocusEvent = _dereq_(92);
var SyntheticKeyboardEvent = _dereq_(94);
var SyntheticMouseEvent = _dereq_(95);
var SyntheticDragEvent = _dereq_(90);
var SyntheticTouchEvent = _dereq_(96);
var SyntheticTransitionEvent = _dereq_(97);
var SyntheticUIEvent = _dereq_(98);
var SyntheticWheelEvent = _dereq_(99);

var emptyFunction = _dereq_(142);
var getEventCharCode = _dereq_(111);
var invariant = _dereq_(150);

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? "development" !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }

};

module.exports = SimpleEventPlugin;
},{"111":111,"125":125,"135":135,"142":142,"150":150,"20":20,"34":34,"87":87,"88":88,"90":90,"91":91,"92":92,"94":94,"95":95,"96":96,"97":97,"98":98,"99":99}],87:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = _dereq_(91);

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;
},{"91":91}],88:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = _dereq_(91);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
},{"91":91}],89:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = _dereq_(91);

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;
},{"91":91}],90:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = _dereq_(95);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;
},{"95":95}],91:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var PooledClass = _dereq_(25);

var emptyFunction = _dereq_(142);
var warning = _dereq_(157);

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if ("development" !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if ("development" !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      // eslint-disable-line valid-typeof
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // eslint-disable-line valid-typeof
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if ("development" !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if ("development" !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if ("development" !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              "development" !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    "development" !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
},{"142":142,"157":157,"158":158,"25":25}],92:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = _dereq_(98);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;
},{"98":98}],93:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = _dereq_(91);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;
},{"91":91}],94:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = _dereq_(98);

var getEventCharCode = _dereq_(111);
var getEventKey = _dereq_(112);
var getEventModifierState = _dereq_(113);

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
},{"111":111,"112":112,"113":113,"98":98}],95:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = _dereq_(98);
var ViewportMetrics = _dereq_(101);

var getEventModifierState = _dereq_(113);

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;
},{"101":101,"113":113,"98":98}],96:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticUIEvent = _dereq_(98);

var getEventModifierState = _dereq_(113);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;
},{"113":113,"98":98}],97:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = _dereq_(91);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;
},{"91":91}],98:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticEvent = _dereq_(91);

var getEventTarget = _dereq_(114);

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;
},{"114":114,"91":91}],99:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var SyntheticMouseEvent = _dereq_(95);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;
},{"95":95}],100:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ? "development" !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? "development" !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
},{"125":125,"150":150}],101:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;
},{}],102:[function(_dereq_,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var _prodInvariant = _dereq_(125);

var invariant = _dereq_(150);

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? "development" !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
},{"125":125,"150":150}],103:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;
},{}],104:[function(_dereq_,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var ReactPropTypeLocationNames = _dereq_(72);
var ReactPropTypesSecret = _dereq_(73);

var invariant = _dereq_(150);
var warning = _dereq_(157);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = _dereq_(132);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      "development" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if ("development" !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = _dereq_(132);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        "development" !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
}).call(this,undefined)
},{"125":125,"132":132,"150":150,"157":157,"72":72,"73":73}],105:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;
},{}],106:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var CSSProperty = _dereq_(4);
var warning = _dereq_(157);

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if ("development" !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          "development" !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
},{"157":157,"4":4}],107:[function(_dereq_,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

'use strict';

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html


/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;
},{}],108:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var ReactCurrentOwner = _dereq_(133);
var ReactDOMComponentTree = _dereq_(34);
var ReactInstanceMap = _dereq_(63);

var getHostComponentFromComposite = _dereq_(115);
var invariant = _dereq_(150);
var warning = _dereq_(157);

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if ("development" !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      "development" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? "development" !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
    !false ? "development" !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
},{"115":115,"125":125,"133":133,"150":150,"157":157,"34":34,"63":63}],109:[function(_dereq_,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var KeyEscapeUtils = _dereq_(23);
var traverseAllChildren = _dereq_(130);
var warning = _dereq_(157);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && "development" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = _dereq_(132);
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if ("development" !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = _dereq_(132);
      }
      if (!keyUnique) {
        "development" !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if ("development" !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
}).call(this,undefined)
},{"130":130,"132":132,"157":157,"23":23}],110:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;
},{}],111:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;
},{}],112:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var getEventCharCode = _dereq_(111);

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;
},{"111":111}],113:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;
},{}],114:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;
},{}],115:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactNodeTypes = _dereq_(69);

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;
},{"69":69}],116:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],117:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;
},{}],118:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;
},{}],119:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = _dereq_(136);

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;
},{"136":136}],120:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = _dereq_(136);

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;
},{"136":136}],121:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125),
    _assign = _dereq_(158);

var ReactCompositeComponent = _dereq_(30);
var ReactEmptyComponent = _dereq_(54);
var ReactHostComponent = _dereq_(59);

var getNextDebugID = _dereq_(117);
var invariant = _dereq_(150);
var warning = _dereq_(157);

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};
_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if ("development" !== 'production') {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
      !false ? "development" !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
    !false ? "development" !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if ("development" !== 'production') {
    "development" !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if ("development" !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if ("development" !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;
},{"117":117,"125":125,"150":150,"157":157,"158":158,"30":30,"54":54,"59":59}],122:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = _dereq_(136);

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;
},{"136":136}],123:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;
},{}],124:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var escapeTextContentForBrowser = _dereq_(107);

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;
},{"107":107}],125:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;
},{}],126:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ReactMount = _dereq_(67);

module.exports = ReactMount.renderSubtreeIntoContainer;
},{"67":67}],127:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = _dereq_(136);
var DOMNamespaces = _dereq_(10);

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = _dereq_(105);

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;
},{"10":10,"105":105,"136":136}],128:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var ExecutionEnvironment = _dereq_(136);
var escapeTextContentForBrowser = _dereq_(107);
var setInnerHTML = _dereq_(127);

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;
},{"107":107,"127":127,"136":136}],129:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
},{}],130:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _prodInvariant = _dereq_(125);

var ReactCurrentOwner = _dereq_(133);
var REACT_ELEMENT_TYPE = _dereq_(53);

var getIteratorFn = _dereq_(116);
var invariant = _dereq_(150);
var KeyEscapeUtils = _dereq_(23);
var warning = _dereq_(157);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if ("development" !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          "development" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if ("development" !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? "development" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
},{"116":116,"125":125,"133":133,"150":150,"157":157,"23":23,"53":53}],131:[function(_dereq_,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var _assign = _dereq_(158);

var emptyFunction = _dereq_(142);
var warning = _dereq_(157);

var validateDOMNesting = emptyFunction;

if ("development" !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':

      case 'pre':
      case 'listing':

      case 'table':

      case 'hr':

      case 'xmp':

      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      "development" !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        "development" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        "development" !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
},{"142":142,"157":157,"158":158}],132:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals React */

'use strict';

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = ReactInternals.ReactComponentTreeHook;
},{}],133:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals React */

'use strict';

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = ReactInternals.ReactCurrentOwner;
},{}],134:[function(_dereq_,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals React */

'use strict';

module.exports = React;
},{}],135:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = _dereq_(142);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if ("development" !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
},{"142":142}],136:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
},{}],137:[function(_dereq_,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
},{}],138:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = _dereq_(137);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
},{"137":137}],139:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = _dereq_(152);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
},{"152":152}],140:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = _dereq_(150);

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? "development" !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? "development" !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? "development" !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? "development" !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
},{"150":150}],141:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = _dereq_(136);

var createArrayFromMixed = _dereq_(140);
var getMarkupWrap = _dereq_(146);
var invariant = _dereq_(150);

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? "development" !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? "development" !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
},{"136":136,"140":140,"146":146,"150":150}],142:[function(_dereq_,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],143:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if ("development" !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
},{}],144:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;
},{}],145:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 */
function getActiveElement() /*?DOMElement*/{
  if (typeof document === 'undefined') {
    return null;
  }
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;
},{}],146:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = _dereq_(136);

var invariant = _dereq_(150);

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? "development" !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
},{"136":136,"150":150}],147:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;
},{}],148:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
},{}],149:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = _dereq_(148);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
},{"148":148}],150:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if ("development" !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
},{}],151:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
},{}],152:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = _dereq_(151);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
},{"151":151}],153:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;
},{}],154:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var ExecutionEnvironment = _dereq_(136);

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
},{"136":136}],155:[function(_dereq_,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = _dereq_(154);

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
},{"154":154}],156:[function(_dereq_,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
},{}],157:[function(_dereq_,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = _dereq_(142);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("development" !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return; // Ignore CompositeComponent proptype check.
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
},{"142":142}],158:[function(_dereq_,module,exports){
'use strict';
/* eslint-disable no-unused-vars */
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (e) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (Object.getOwnPropertySymbols) {
			symbols = Object.getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}]},{},[48])(48)
});
});

/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		// register as 'classnames', consistent with npm package name
		define('classnames', [], function () {
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());

(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.AutosizeInput = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var React = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);

var sizerStyle = { position: 'absolute', top: 0, left: 0, visibility: 'hidden', height: 0, overflow: 'scroll', whiteSpace: 'pre' };

var AutosizeInput = React.createClass({
	displayName: 'AutosizeInput',

	propTypes: {
		className: React.PropTypes.string, // className for the outer element
		defaultValue: React.PropTypes.any, // default field value
		inputClassName: React.PropTypes.string, // className for the input element
		inputStyle: React.PropTypes.object, // css styles for the input element
		minWidth: React.PropTypes.oneOfType([// minimum width for input element
		React.PropTypes.number, React.PropTypes.string]),
		onChange: React.PropTypes.func, // onChange handler: function(newValue) {}
		placeholder: React.PropTypes.string, // placeholder text
		placeholderIsMinWidth: React.PropTypes.bool, // don't collapse size to less than the placeholder
		style: React.PropTypes.object, // css styles for the outer element
		value: React.PropTypes.any },
	// field value
	getDefaultProps: function getDefaultProps() {
		return {
			minWidth: 1
		};
	},
	getInitialState: function getInitialState() {
		return {
			inputWidth: this.props.minWidth
		};
	},
	componentDidMount: function componentDidMount() {
		this.copyInputStyles();
		this.updateInputWidth();
	},
	componentDidUpdate: function componentDidUpdate() {
		this.updateInputWidth();
	},
	copyInputStyles: function copyInputStyles() {
		if (!this.isMounted() || !window.getComputedStyle) {
			return;
		}
		var inputStyle = window.getComputedStyle(this.refs.input);
		if (!inputStyle) {
			return;
		}
		var widthNode = this.refs.sizer;
		widthNode.style.fontSize = inputStyle.fontSize;
		widthNode.style.fontFamily = inputStyle.fontFamily;
		widthNode.style.fontWeight = inputStyle.fontWeight;
		widthNode.style.fontStyle = inputStyle.fontStyle;
		widthNode.style.letterSpacing = inputStyle.letterSpacing;
		if (this.props.placeholder) {
			var placeholderNode = this.refs.placeholderSizer;
			placeholderNode.style.fontSize = inputStyle.fontSize;
			placeholderNode.style.fontFamily = inputStyle.fontFamily;
			placeholderNode.style.fontWeight = inputStyle.fontWeight;
			placeholderNode.style.fontStyle = inputStyle.fontStyle;
			placeholderNode.style.letterSpacing = inputStyle.letterSpacing;
		}
	},
	updateInputWidth: function updateInputWidth() {
		if (!this.isMounted() || typeof this.refs.sizer.scrollWidth === 'undefined') {
			return;
		}
		var newInputWidth = undefined;
		if (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {
			newInputWidth = Math.max(this.refs.sizer.scrollWidth, this.refs.placeholderSizer.scrollWidth) + 2;
		} else {
			newInputWidth = this.refs.sizer.scrollWidth + 2;
		}
		if (newInputWidth < this.props.minWidth) {
			newInputWidth = this.props.minWidth;
		}
		if (newInputWidth !== this.state.inputWidth) {
			this.setState({
				inputWidth: newInputWidth
			});
		}
	},
	getInput: function getInput() {
		return this.refs.input;
	},
	focus: function focus() {
		this.refs.input.focus();
	},
	blur: function blur() {
		this.refs.input.blur();
	},
	select: function select() {
		this.refs.input.select();
	},
	render: function render() {
		var sizerValue = this.props.defaultValue || this.props.value || '';
		var wrapperStyle = this.props.style || {};
		if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';
		var inputStyle = _extends({}, this.props.inputStyle);
		inputStyle.width = this.state.inputWidth + 'px';
		inputStyle.boxSizing = 'content-box';
		var inputProps = _extends({}, this.props);
		inputProps.className = this.props.inputClassName;
		inputProps.style = inputStyle;
		// ensure props meant for `AutosizeInput` don't end up on the `input`
		delete inputProps.inputClassName;
		delete inputProps.inputStyle;
		delete inputProps.minWidth;
		delete inputProps.placeholderIsMinWidth;
		return React.createElement(
			'div',
			{ className: this.props.className, style: wrapperStyle },
			React.createElement('input', _extends({}, inputProps, { ref: 'input' })),
			React.createElement(
				'div',
				{ ref: 'sizer', style: sizerStyle },
				sizerValue
			),
			this.props.placeholder ? React.createElement(
				'div',
				{ ref: 'placeholderSizer', style: sizerStyle },
				this.props.placeholder
			) : null
		);
	}
});

module.exports = AutosizeInput;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}]},{},[1])(1)
});
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Select = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);

var _react2 = _interopRequireDefault(_react);

var _Select = require('./Select');

var _Select2 = _interopRequireDefault(_Select);

var _utilsStripDiacritics = require('./utils/stripDiacritics');

var _utilsStripDiacritics2 = _interopRequireDefault(_utilsStripDiacritics);

var requestId = 0;

function initCache(cache) {
	if (cache && typeof cache !== 'object') {
		cache = {};
	}
	return cache ? cache : null;
}

function updateCache(cache, input, data) {
	if (!cache) return;
	cache[input] = data;
}

function getFromCache(cache, input) {
	if (!cache) return;
	for (var i = input.length; i >= 0; --i) {
		var cacheKey = input.slice(0, i);
		if (cache[cacheKey] && (input === cacheKey || cache[cacheKey].complete)) {
			return cache[cacheKey];
		}
	}
}

function thenPromise(promise, callback) {
	if (!promise || typeof promise.then !== 'function') return;
	return promise.then(function (data) {
		callback(null, data);
	}, function (err) {
		callback(err);
	});
}

var stringOrNode = _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]);

var Async = _react2['default'].createClass({
	displayName: 'Async',

	propTypes: {
		cache: _react2['default'].PropTypes.any, // object to use to cache results, can be null to disable cache
		ignoreAccents: _react2['default'].PropTypes.bool, // whether to strip diacritics when filtering (shared with Select)
		ignoreCase: _react2['default'].PropTypes.bool, // whether to perform case-insensitive filtering (shared with Select)
		isLoading: _react2['default'].PropTypes.bool, // overrides the isLoading state when set to true
		loadOptions: _react2['default'].PropTypes.func.isRequired, // function to call to load options asynchronously
		loadingPlaceholder: _react2['default'].PropTypes.string, // replaces the placeholder while options are loading
		minimumInput: _react2['default'].PropTypes.number, // the minimum number of characters that trigger loadOptions
		noResultsText: stringOrNode, // placeholder displayed when there are no matching search results (shared with Select)
		onInputChange: _react2['default'].PropTypes.func, // onInputChange handler: function (inputValue) {}
		placeholder: stringOrNode, // field placeholder, displayed when there's no value (shared with Select)
		searchPromptText: stringOrNode, // label to prompt for search input
		searchingText: _react2['default'].PropTypes.string },
	// message to display while options are loading
	getDefaultProps: function getDefaultProps() {
		return {
			cache: true,
			ignoreAccents: true,
			ignoreCase: true,
			loadingPlaceholder: 'Loading...',
			minimumInput: 0,
			searchingText: 'Searching...',
			searchPromptText: 'Type to search'
		};
	},
	getInitialState: function getInitialState() {
		return {
			cache: initCache(this.props.cache),
			isLoading: false,
			options: []
		};
	},
	componentWillMount: function componentWillMount() {
		this._lastInput = '';
	},
	componentDidMount: function componentDidMount() {
		this.loadOptions('');
	},
	componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		if (nextProps.cache !== this.props.cache) {
			this.setState({
				cache: initCache(nextProps.cache)
			});
		}
	},
	focus: function focus() {
		this.select.focus();
	},
	resetState: function resetState() {
		this._currentRequestId = -1;
		this.setState({
			isLoading: false,
			options: []
		});
	},
	getResponseHandler: function getResponseHandler(input) {
		var _this = this;

		var _requestId = this._currentRequestId = requestId++;
		return function (err, data) {
			if (err) throw err;
			if (!_this.isMounted()) return;
			updateCache(_this.state.cache, input, data);
			if (_requestId !== _this._currentRequestId) return;
			_this.setState({
				isLoading: false,
				options: data && data.options || []
			});
		};
	},
	loadOptions: function loadOptions(input) {
		if (this.props.onInputChange) {
			var nextState = this.props.onInputChange(input);
			// Note: != used deliberately here to catch undefined and null
			if (nextState != null) {
				input = '' + nextState;
			}
		}
		if (this.props.ignoreAccents) input = (0, _utilsStripDiacritics2['default'])(input);
		if (this.props.ignoreCase) input = input.toLowerCase();

		this._lastInput = input;
		if (input.length < this.props.minimumInput) {
			return this.resetState();
		}
		var cacheResult = getFromCache(this.state.cache, input);
		if (cacheResult) {
			return this.setState({
				options: cacheResult.options
			});
		}
		this.setState({
			isLoading: true
		});
		var responseHandler = this.getResponseHandler(input);
		var inputPromise = thenPromise(this.props.loadOptions(input, responseHandler), responseHandler);
		return inputPromise ? inputPromise.then(function () {
			return input;
		}) : input;
	},
	render: function render() {
		var _this2 = this;

		var noResultsText = this.props.noResultsText;
		var _state = this.state;
		var isLoading = _state.isLoading;
		var options = _state.options;

		if (this.props.isLoading) isLoading = true;
		var placeholder = isLoading ? this.props.loadingPlaceholder : this.props.placeholder;
		if (isLoading) {
			noResultsText = this.props.searchingText;
		} else if (!options.length && this._lastInput.length < this.props.minimumInput) {
			noResultsText = this.props.searchPromptText;
		}
		return _react2['default'].createElement(_Select2['default'], _extends({}, this.props, {
			ref: function (ref) {
				return _this2.select = ref;
			},
			isLoading: isLoading,
			noResultsText: noResultsText,
			onInputChange: this.loadOptions,
			options: options,
			placeholder: placeholder
		}));
	}
});

module.exports = Async;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./Select":4,"./utils/stripDiacritics":8}],2:[function(require,module,exports){
(function (global){
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var _react = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);

var _react2 = _interopRequireDefault(_react);

var _Select = require('./Select');

var _Select2 = _interopRequireDefault(_Select);

var _utilsDefaultFilterOptions = require('./utils/defaultFilterOptions');

var _utilsDefaultFilterOptions2 = _interopRequireDefault(_utilsDefaultFilterOptions);

var _utilsDefaultMenuRenderer = require('./utils/defaultMenuRenderer');

var _utilsDefaultMenuRenderer2 = _interopRequireDefault(_utilsDefaultMenuRenderer);

var Creatable = _react2['default'].createClass({
	displayName: 'CreatableSelect',

	propTypes: {
		// See Select.propTypes.filterOptions
		filterOptions: _react2['default'].PropTypes.any,

		// Searches for any matching option within the set of options.
		// This function prevents duplicate options from being created.
		// ({ option: Object, options: Array, labelKey: string, valueKey: string }): boolean
		isOptionUnique: _react2['default'].PropTypes.func,

		// Determines if the current input text represents a valid option.
		// ({ label: string }): boolean
		isValidNewOption: _react2['default'].PropTypes.func,

		// See Select.propTypes.menuRenderer
		menuRenderer: _react2['default'].PropTypes.any,

		// Factory to create new option.
		// ({ label: string, labelKey: string, valueKey: string }): Object
		newOptionCreator: _react2['default'].PropTypes.func,

		// Creates prompt/placeholder option text.
		// (filterText: string): string
		promptTextCreator: _react2['default'].PropTypes.func,

		// Decides if a keyDown event (eg its `keyCode`) should result in the creation of a new option.
		shouldKeyDownEventCreateNewOption: _react2['default'].PropTypes.func
	},

	// Default prop methods
	statics: {
		isOptionUnique: isOptionUnique,
		isValidNewOption: isValidNewOption,
		newOptionCreator: newOptionCreator,
		promptTextCreator: promptTextCreator,
		shouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption
	},

	getDefaultProps: function getDefaultProps() {
		return {
			filterOptions: _utilsDefaultFilterOptions2['default'],
			isOptionUnique: isOptionUnique,
			isValidNewOption: isValidNewOption,
			menuRenderer: _utilsDefaultMenuRenderer2['default'],
			newOptionCreator: newOptionCreator,
			promptTextCreator: promptTextCreator,
			shouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption
		};
	},

	createNewOption: function createNewOption() {
		var _props = this.props;
		var isValidNewOption = _props.isValidNewOption;
		var newOptionCreator = _props.newOptionCreator;
		var shouldKeyDownEventCreateNewOption = _props.shouldKeyDownEventCreateNewOption;
		var _select$props = this.select.props;
		var labelKey = _select$props.labelKey;
		var options = _select$props.options;
		var valueKey = _select$props.valueKey;

		var inputValue = this.select.getInputValue();

		if (isValidNewOption({ label: inputValue })) {
			var option = newOptionCreator({ label: inputValue, labelKey: labelKey, valueKey: valueKey });
			var _isOptionUnique = this.isOptionUnique({ option: option });

			// Don't add the same option twice.
			if (_isOptionUnique) {
				options.unshift(option);

				this.select.selectValue(option);
			}
		}
	},

	filterOptions: function filterOptions() {
		var _props2 = this.props;
		var filterOptions = _props2.filterOptions;
		var isValidNewOption = _props2.isValidNewOption;
		var promptTextCreator = _props2.promptTextCreator;

		var filteredOptions = filterOptions.apply(undefined, arguments);

		var inputValue = this.select ? this.select.getInputValue() : '';

		if (isValidNewOption({ label: inputValue })) {
			var _newOptionCreator = this.props.newOptionCreator;
			var _select$props2 = this.select.props;
			var labelKey = _select$props2.labelKey;
			var options = _select$props2.options;
			var valueKey = _select$props2.valueKey;

			var option = _newOptionCreator({ label: inputValue, labelKey: labelKey, valueKey: valueKey });

			// TRICKY Compare to all options (not just filtered options) in case option has already been selected).
			// For multi-selects, this would remove it from the filtered list.
			var _isOptionUnique2 = this.isOptionUnique({ option: option, options: options });

			if (_isOptionUnique2) {
				var _prompt = promptTextCreator(inputValue);

				this._createPlaceholderOption = _newOptionCreator({ label: _prompt, labelKey: labelKey, valueKey: valueKey });

				filteredOptions.unshift(this._createPlaceholderOption);
			}
		}

		return filteredOptions;
	},

	isOptionUnique: function isOptionUnique(_ref) {
		var option = _ref.option;
		var options = _ref.options;

		if (!this.select) {
			return false;
		}

		var isOptionUnique = this.props.isOptionUnique;
		var _select$props3 = this.select.props;
		var labelKey = _select$props3.labelKey;
		var valueKey = _select$props3.valueKey;

		options = options || this.select.filterOptions();

		return isOptionUnique({
			labelKey: labelKey,
			option: option,
			options: options,
			valueKey: valueKey
		});
	},

	menuRenderer: function menuRenderer(params) {
		var menuRenderer = this.props.menuRenderer;

		return menuRenderer(_extends({}, params, {
			onSelect: this.onOptionSelect
		}));
	},

	onInputKeyDown: function onInputKeyDown(event) {
		var shouldKeyDownEventCreateNewOption = this.props.shouldKeyDownEventCreateNewOption;

		var focusedOption = this.select.getFocusedOption();

		if (focusedOption && focusedOption === this._createPlaceholderOption && shouldKeyDownEventCreateNewOption({ keyCode: event.keyCode })) {
			this.createNewOption();

			// Prevent decorated Select from doing anything additional with this keyDown event
			event.preventDefault();
		}
	},

	onOptionSelect: function onOptionSelect(option, event) {
		if (option === this._createPlaceholderOption) {
			this.createNewOption();
		} else {
			this.select.selectValue(option);
		}
	},

	render: function render() {
		var _this = this;

		var _props3 = this.props;
		var newOptionCreator = _props3.newOptionCreator;
		var shouldKeyDownEventCreateNewOption = _props3.shouldKeyDownEventCreateNewOption;

		var restProps = _objectWithoutProperties(_props3, ['newOptionCreator', 'shouldKeyDownEventCreateNewOption']);

		return _react2['default'].createElement(_Select2['default'], _extends({}, restProps, {
			allowCreate: true,
			filterOptions: this.filterOptions,
			menuRenderer: this.menuRenderer,
			onInputKeyDown: this.onInputKeyDown,
			ref: function (ref) {
				return _this.select = ref;
			}
		}));
	}
});

function isOptionUnique(_ref2) {
	var option = _ref2.option;
	var options = _ref2.options;
	var labelKey = _ref2.labelKey;
	var valueKey = _ref2.valueKey;

	return options.filter(function (existingOption) {
		return existingOption[labelKey] === option[labelKey] || existingOption[valueKey] === option[valueKey];
	}).length === 0;
};

function isValidNewOption(_ref3) {
	var label = _ref3.label;

	return !!label;
};

function newOptionCreator(_ref4) {
	var label = _ref4.label;
	var labelKey = _ref4.labelKey;
	var valueKey = _ref4.valueKey;

	var option = {};
	option[valueKey] = label;
	option[labelKey] = label;
	option.className = 'Select-create-option-placeholder';
	return option;
};

function promptTextCreator(label) {
	return 'Create option "' + label + '"';
}

function shouldKeyDownEventCreateNewOption(_ref5) {
	var keyCode = _ref5.keyCode;

	switch (keyCode) {
		case 9: // TAB
		case 13: // ENTER
		case 188:
			// COMMA
			return true;
	}

	return false;
};

module.exports = Creatable;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./Select":4,"./utils/defaultFilterOptions":6,"./utils/defaultMenuRenderer":7}],3:[function(require,module,exports){
(function (global){
'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);

var _react2 = _interopRequireDefault(_react);

var _classnames = (typeof window !== "undefined" ? window['classNames'] : typeof global !== "undefined" ? global['classNames'] : null);

var _classnames2 = _interopRequireDefault(_classnames);

var Option = _react2['default'].createClass({
	displayName: 'Option',

	propTypes: {
		children: _react2['default'].PropTypes.node,
		className: _react2['default'].PropTypes.string, // className (based on mouse position)
		instancePrefix: _react2['default'].PropTypes.string.isRequired, // unique prefix for the ids (used for aria)
		isDisabled: _react2['default'].PropTypes.bool, // the option is disabled
		isFocused: _react2['default'].PropTypes.bool, // the option is focused
		isSelected: _react2['default'].PropTypes.bool, // the option is selected
		onFocus: _react2['default'].PropTypes.func, // method to handle mouseEnter on option element
		onSelect: _react2['default'].PropTypes.func, // method to handle click on option element
		onUnfocus: _react2['default'].PropTypes.func, // method to handle mouseLeave on option element
		option: _react2['default'].PropTypes.object.isRequired, // object that is base for that option
		optionIndex: _react2['default'].PropTypes.number },
	// index of the option, used to generate unique ids for aria
	blockEvent: function blockEvent(event) {
		event.preventDefault();
		event.stopPropagation();
		if (event.target.tagName !== 'A' || !('href' in event.target)) {
			return;
		}
		if (event.target.target) {
			window.open(event.target.href, event.target.target);
		} else {
			window.location.href = event.target.href;
		}
	},

	handleMouseDown: function handleMouseDown(event) {
		event.preventDefault();
		event.stopPropagation();
		this.props.onSelect(this.props.option, event);
	},

	handleMouseEnter: function handleMouseEnter(event) {
		this.onFocus(event);
	},

	handleMouseMove: function handleMouseMove(event) {
		this.onFocus(event);
	},

	handleTouchEnd: function handleTouchEnd(event) {
		// Check if the view is being dragged, In this case
		// we don't want to fire the click event (because the user only wants to scroll)
		if (this.dragging) return;

		this.handleMouseDown(event);
	},

	handleTouchMove: function handleTouchMove(event) {
		// Set a flag that the view is being dragged
		this.dragging = true;
	},

	handleTouchStart: function handleTouchStart(event) {
		// Set a flag that the view is not being dragged
		this.dragging = false;
	},

	onFocus: function onFocus(event) {
		if (!this.props.isFocused) {
			this.props.onFocus(this.props.option, event);
		}
	},
	render: function render() {
		var _props = this.props;
		var option = _props.option;
		var instancePrefix = _props.instancePrefix;
		var optionIndex = _props.optionIndex;

		var className = (0, _classnames2['default'])(this.props.className, option.className);

		return option.disabled ? _react2['default'].createElement(
			'div',
			{ className: className,
				onMouseDown: this.blockEvent,
				onClick: this.blockEvent },
			this.props.children
		) : _react2['default'].createElement(
			'div',
			{ className: className,
				style: option.style,
				role: 'option',
				onMouseDown: this.handleMouseDown,
				onMouseEnter: this.handleMouseEnter,
				onMouseMove: this.handleMouseMove,
				onTouchStart: this.handleTouchStart,
				onTouchMove: this.handleTouchMove,
				onTouchEnd: this.handleTouchEnd,
				id: instancePrefix + '-option-' + optionIndex,
				title: option.title },
			this.props.children
		);
	}
});

module.exports = Option;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],4:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _react = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);

var _react2 = _interopRequireDefault(_react);

var _reactDom = (typeof window !== "undefined" ? window['ReactDOM'] : typeof global !== "undefined" ? global['ReactDOM'] : null);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactInputAutosize = (typeof window !== "undefined" ? window['AutosizeInput'] : typeof global !== "undefined" ? global['AutosizeInput'] : null);

var _reactInputAutosize2 = _interopRequireDefault(_reactInputAutosize);

var _classnames = (typeof window !== "undefined" ? window['classNames'] : typeof global !== "undefined" ? global['classNames'] : null);

var _classnames2 = _interopRequireDefault(_classnames);

var _utilsDefaultFilterOptions = require('./utils/defaultFilterOptions');

var _utilsDefaultFilterOptions2 = _interopRequireDefault(_utilsDefaultFilterOptions);

var _utilsDefaultMenuRenderer = require('./utils/defaultMenuRenderer');

var _utilsDefaultMenuRenderer2 = _interopRequireDefault(_utilsDefaultMenuRenderer);

var _Async = require('./Async');

var _Async2 = _interopRequireDefault(_Async);

var _Creatable = require('./Creatable');

var _Creatable2 = _interopRequireDefault(_Creatable);

var _Option = require('./Option');

var _Option2 = _interopRequireDefault(_Option);

var _Value = require('./Value');

var _Value2 = _interopRequireDefault(_Value);

function stringifyValue(value) {
	if (typeof value === 'string') {
		return value;
	} else if (typeof value === 'object') {
		return JSON.stringify(value);
	} else if (value || value === 0) {
		return String(value);
	} else {
		return '';
	}
}

var stringOrNode = _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.node]);

var instanceId = 1;

var Select = _react2['default'].createClass({

	displayName: 'Select',

	propTypes: {
		addLabelText: _react2['default'].PropTypes.string, // placeholder displayed when you want to add a label on a multi-value input
		'aria-label': _react2['default'].PropTypes.string, // Aria label (for assistive tech)
		'aria-labelledby': _react2['default'].PropTypes.string, // HTML ID of an element that should be used as the label (for assistive tech)
		autoBlur: _react2['default'].PropTypes.bool, // automatically blur the component when an option is selected
		autofocus: _react2['default'].PropTypes.bool, // autofocus the component on mount
		autosize: _react2['default'].PropTypes.bool, // whether to enable autosizing or not
		backspaceRemoves: _react2['default'].PropTypes.bool, // whether backspace removes an item if there is no text input
		backspaceToRemoveMessage: _react2['default'].PropTypes.string, // Message to use for screenreaders to press backspace to remove the current item -
		// {label} is replaced with the item label
		className: _react2['default'].PropTypes.string, // className for the outer element
		clearAllText: stringOrNode, // title for the "clear" control when multi: true
		clearValueText: stringOrNode, // title for the "clear" control
		clearable: _react2['default'].PropTypes.bool, // should it be possible to reset value
		delimiter: _react2['default'].PropTypes.string, // delimiter to use to join multiple values for the hidden field value
		disabled: _react2['default'].PropTypes.bool, // whether the Select is disabled or not
		escapeClearsValue: _react2['default'].PropTypes.bool, // whether escape clears the value when the menu is closed
		filterOption: _react2['default'].PropTypes.func, // method to filter a single option (option, filterString)
		filterOptions: _react2['default'].PropTypes.any, // boolean to enable default filtering or function to filter the options array ([options], filterString, [values])
		ignoreAccents: _react2['default'].PropTypes.bool, // whether to strip diacritics when filtering
		ignoreCase: _react2['default'].PropTypes.bool, // whether to perform case-insensitive filtering
		inputProps: _react2['default'].PropTypes.object, // custom attributes for the Input
		inputRenderer: _react2['default'].PropTypes.func, // returns a custom input component
		instanceId: _react2['default'].PropTypes.string, // set the components instanceId
		isLoading: _react2['default'].PropTypes.bool, // whether the Select is loading externally or not (such as options being loaded)
		joinValues: _react2['default'].PropTypes.bool, // joins multiple values into a single form field with the delimiter (legacy mode)
		labelKey: _react2['default'].PropTypes.string, // path of the label value in option objects
		matchPos: _react2['default'].PropTypes.string, // (any|start) match the start or entire string when filtering
		matchProp: _react2['default'].PropTypes.string, // (any|label|value) which option property to filter on
		menuBuffer: _react2['default'].PropTypes.number, // optional buffer (in px) between the bottom of the viewport and the bottom of the menu
		menuContainerStyle: _react2['default'].PropTypes.object, // optional style to apply to the menu container
		menuRenderer: _react2['default'].PropTypes.func, // renders a custom menu with options
		menuStyle: _react2['default'].PropTypes.object, // optional style to apply to the menu
		multi: _react2['default'].PropTypes.bool, // multi-value input
		name: _react2['default'].PropTypes.string, // generates a hidden <input /> tag with this field name for html forms
		noResultsText: stringOrNode, // placeholder displayed when there are no matching search results
		onBlur: _react2['default'].PropTypes.func, // onBlur handler: function (event) {}
		onBlurResetsInput: _react2['default'].PropTypes.bool, // whether input is cleared on blur
		onChange: _react2['default'].PropTypes.func, // onChange handler: function (newValue) {}
		onClose: _react2['default'].PropTypes.func, // fires when the menu is closed
		onCloseResetsInput: _react2['default'].PropTypes.bool, // whether input is cleared when menu is closed through the arrow
		onFocus: _react2['default'].PropTypes.func, // onFocus handler: function (event) {}
		onInputChange: _react2['default'].PropTypes.func, // onInputChange handler: function (inputValue) {}
		onInputKeyDown: _react2['default'].PropTypes.func, // input keyDown handler: function (event) {}
		onMenuScrollToBottom: _react2['default'].PropTypes.func, // fires when the menu is scrolled to the bottom; can be used to paginate options
		onOpen: _react2['default'].PropTypes.func, // fires when the menu is opened
		onValueClick: _react2['default'].PropTypes.func, // onClick handler for value labels: function (value, event) {}
		openAfterFocus: _react2['default'].PropTypes.bool, // boolean to enable opening dropdown when focused
		openOnFocus: _react2['default'].PropTypes.bool, // always open options menu on focus
		optionClassName: _react2['default'].PropTypes.string, // additional class(es) to apply to the <Option /> elements
		optionComponent: _react2['default'].PropTypes.func, // option component to render in dropdown
		optionRenderer: _react2['default'].PropTypes.func, // optionRenderer: function (option) {}
		options: _react2['default'].PropTypes.array, // array of options
		pageSize: _react2['default'].PropTypes.number, // number of entries to page when using page up/down keys
		placeholder: stringOrNode, // field placeholder, displayed when there's no value
		required: _react2['default'].PropTypes.bool, // applies HTML5 required attribute when needed
		resetValue: _react2['default'].PropTypes.any, // value to use when you clear the control
		scrollMenuIntoView: _react2['default'].PropTypes.bool, // boolean to enable the viewport to shift so that the full menu fully visible when engaged
		searchable: _react2['default'].PropTypes.bool, // whether to enable searching feature or not
		simpleValue: _react2['default'].PropTypes.bool, // pass the value to onChange as a simple value (legacy pre 1.0 mode), defaults to false
		style: _react2['default'].PropTypes.object, // optional style to apply to the control
		tabIndex: _react2['default'].PropTypes.string, // optional tab index of the control
		tabSelectsValue: _react2['default'].PropTypes.bool, // whether to treat tabbing out while focused to be value selection
		value: _react2['default'].PropTypes.any, // initial field value
		valueComponent: _react2['default'].PropTypes.func, // value component to render
		valueKey: _react2['default'].PropTypes.string, // path of the label value in option objects
		valueRenderer: _react2['default'].PropTypes.func, // valueRenderer: function (option) {}
		wrapperStyle: _react2['default'].PropTypes.object },

	// optional style to apply to the component wrapper
	statics: { Async: _Async2['default'], Creatable: _Creatable2['default'] },

	getDefaultProps: function getDefaultProps() {
		return {
			addLabelText: 'Add "{label}"?',
			autosize: true,
			backspaceRemoves: true,
			backspaceToRemoveMessage: 'Press backspace to remove {label}',
			clearable: true,
			clearAllText: 'Clear all',
			clearValueText: 'Clear value',
			delimiter: ',',
			disabled: false,
			escapeClearsValue: true,
			filterOptions: _utilsDefaultFilterOptions2['default'],
			ignoreAccents: true,
			ignoreCase: true,
			inputProps: {},
			isLoading: false,
			joinValues: false,
			labelKey: 'label',
			matchPos: 'any',
			matchProp: 'any',
			menuBuffer: 0,
			menuRenderer: _utilsDefaultMenuRenderer2['default'],
			multi: false,
			noResultsText: 'No results found',
			onBlurResetsInput: true,
			onCloseResetsInput: true,
			openAfterFocus: false,
			optionComponent: _Option2['default'],
			pageSize: 5,
			placeholder: 'Select...',
			required: false,
			scrollMenuIntoView: true,
			searchable: true,
			simpleValue: false,
			tabSelectsValue: true,
			valueComponent: _Value2['default'],
			valueKey: 'value'
		};
	},

	getInitialState: function getInitialState() {
		return {
			inputValue: '',
			isFocused: false,
			isOpen: false,
			isPseudoFocused: false,
			required: false
		};
	},

	componentWillMount: function componentWillMount() {
		this._instancePrefix = 'react-select-' + (this.props.instanceId || ++instanceId) + '-';
		var valueArray = this.getValueArray(this.props.value);

		if (this.props.required) {
			this.setState({
				required: this.handleRequired(valueArray[0], this.props.multi)
			});
		}
	},

	componentDidMount: function componentDidMount() {
		if (this.props.autofocus) {
			this.focus();
		}
	},

	componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		var valueArray = this.getValueArray(nextProps.value, nextProps);

		if (nextProps.required) {
			this.setState({
				required: this.handleRequired(valueArray[0], nextProps.multi)
			});
		}
	},

	componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
		if (nextState.isOpen !== this.state.isOpen) {
			this.toggleTouchOutsideEvent(nextState.isOpen);
			var handler = nextState.isOpen ? nextProps.onOpen : nextProps.onClose;
			handler && handler();
		}
	},

	componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
		// focus to the selected option
		if (this.menu && this.focused && this.state.isOpen && !this.hasScrolledToOption) {
			var focusedOptionNode = _reactDom2['default'].findDOMNode(this.focused);
			var menuNode = _reactDom2['default'].findDOMNode(this.menu);
			menuNode.scrollTop = focusedOptionNode.offsetTop;
			this.hasScrolledToOption = true;
		} else if (!this.state.isOpen) {
			this.hasScrolledToOption = false;
		}

		if (this._scrollToFocusedOptionOnUpdate && this.focused && this.menu) {
			this._scrollToFocusedOptionOnUpdate = false;
			var focusedDOM = _reactDom2['default'].findDOMNode(this.focused);
			var menuDOM = _reactDom2['default'].findDOMNode(this.menu);
			var focusedRect = focusedDOM.getBoundingClientRect();
			var menuRect = menuDOM.getBoundingClientRect();
			if (focusedRect.bottom > menuRect.bottom || focusedRect.top < menuRect.top) {
				menuDOM.scrollTop = focusedDOM.offsetTop + focusedDOM.clientHeight - menuDOM.offsetHeight;
			}
		}
		if (this.props.scrollMenuIntoView && this.menuContainer) {
			var menuContainerRect = this.menuContainer.getBoundingClientRect();
			if (window.innerHeight < menuContainerRect.bottom + this.props.menuBuffer) {
				window.scrollBy(0, menuContainerRect.bottom + this.props.menuBuffer - window.innerHeight);
			}
		}
		if (prevProps.disabled !== this.props.disabled) {
			this.setState({ isFocused: false }); // eslint-disable-line react/no-did-update-set-state
			this.closeMenu();
		}
	},

	componentWillUnmount: function componentWillUnmount() {
		document.removeEventListener('touchstart', this.handleTouchOutside);
	},

	toggleTouchOutsideEvent: function toggleTouchOutsideEvent(enabled) {
		if (enabled) {
			document.addEventListener('touchstart', this.handleTouchOutside);
		} else {
			document.removeEventListener('touchstart', this.handleTouchOutside);
		}
	},

	handleTouchOutside: function handleTouchOutside(event) {
		// handle touch outside on ios to dismiss menu
		if (this.wrapper && !this.wrapper.contains(event.target)) {
			this.closeMenu();
		}
	},

	focus: function focus() {
		if (!this.input) return;
		this.input.focus();

		if (this.props.openAfterFocus) {
			this.setState({
				isOpen: true
			});
		}
	},

	blurInput: function blurInput() {
		if (!this.input) return;
		this.input.blur();
	},

	handleTouchMove: function handleTouchMove(event) {
		// Set a flag that the view is being dragged
		this.dragging = true;
	},

	handleTouchStart: function handleTouchStart(event) {
		// Set a flag that the view is not being dragged
		this.dragging = false;
	},

	handleTouchEnd: function handleTouchEnd(event) {
		// Check if the view is being dragged, In this case
		// we don't want to fire the click event (because the user only wants to scroll)
		if (this.dragging) return;

		// Fire the mouse events
		this.handleMouseDown(event);
	},

	handleTouchEndClearValue: function handleTouchEndClearValue(event) {
		// Check if the view is being dragged, In this case
		// we don't want to fire the click event (because the user only wants to scroll)
		if (this.dragging) return;

		// Clear the value
		this.clearValue(event);
	},

	handleMouseDown: function handleMouseDown(event) {
		// if the event was triggered by a mousedown and not the primary
		// button, or if the component is disabled, ignore it.
		if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
			return;
		}

		if (event.target.tagName === 'INPUT') {
			return;
		}

		// prevent default event handlers
		event.stopPropagation();
		event.preventDefault();

		// for the non-searchable select, toggle the menu
		if (!this.props.searchable) {
			this.focus();
			return this.setState({
				isOpen: !this.state.isOpen
			});
		}

		if (this.state.isFocused) {
			// On iOS, we can get into a state where we think the input is focused but it isn't really,
			// since iOS ignores programmatic calls to input.focus() that weren't triggered by a click event.
			// Call focus() again here to be safe.
			this.focus();

			var input = this.input;
			if (typeof input.getInput === 'function') {
				// Get the actual DOM input if the ref is an <Input /> component
				input = input.getInput();
			}

			// clears the value so that the cursor will be at the end of input when the component re-renders
			input.value = '';

			// if the input is focused, ensure the menu is open
			this.setState({
				isOpen: true,
				isPseudoFocused: false
			});
		} else {
			// otherwise, focus the input and open the menu
			this._openAfterFocus = true;
			this.focus();
		}
	},

	handleMouseDownOnArrow: function handleMouseDownOnArrow(event) {
		// if the event was triggered by a mousedown and not the primary
		// button, or if the component is disabled, ignore it.
		if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
			return;
		}
		// If the menu isn't open, let the event bubble to the main handleMouseDown
		if (!this.state.isOpen) {
			return;
		}
		// prevent default event handlers
		event.stopPropagation();
		event.preventDefault();
		// close the menu
		this.closeMenu();
	},

	handleMouseDownOnMenu: function handleMouseDownOnMenu(event) {
		// if the event was triggered by a mousedown and not the primary
		// button, or if the component is disabled, ignore it.
		if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
			return;
		}
		event.stopPropagation();
		event.preventDefault();

		this._openAfterFocus = true;
		this.focus();
	},

	closeMenu: function closeMenu() {
		if (this.props.onCloseResetsInput) {
			this.setState({
				isOpen: false,
				isPseudoFocused: this.state.isFocused && !this.props.multi,
				inputValue: ''
			});
		} else {
			this.setState({
				isOpen: false,
				isPseudoFocused: this.state.isFocused && !this.props.multi,
				inputValue: this.state.inputValue
			});
		}
		this.hasScrolledToOption = false;
	},

	handleInputFocus: function handleInputFocus(event) {
		var isOpen = this.state.isOpen || this._openAfterFocus || this.props.openOnFocus;
		if (this.props.onFocus) {
			this.props.onFocus(event);
		}
		this.setState({
			isFocused: true,
			isOpen: isOpen
		});
		this._openAfterFocus = false;
	},

	handleInputBlur: function handleInputBlur(event) {
		// The check for menu.contains(activeElement) is necessary to prevent IE11's scrollbar from closing the menu in certain contexts.
		if (this.menu && (this.menu === document.activeElement || this.menu.contains(document.activeElement))) {
			this.focus();
			return;
		}

		if (this.props.onBlur) {
			this.props.onBlur(event);
		}
		var onBlurredState = {
			isFocused: false,
			isOpen: false,
			isPseudoFocused: false
		};
		if (this.props.onBlurResetsInput) {
			onBlurredState.inputValue = '';
		}
		this.setState(onBlurredState);
	},

	handleInputChange: function handleInputChange(event) {
		var newInputValue = event.target.value;

		if (this.state.inputValue !== event.target.value && this.props.onInputChange) {
			var nextState = this.props.onInputChange(newInputValue);
			// Note: != used deliberately here to catch undefined and null
			if (nextState != null && typeof nextState !== 'object') {
				newInputValue = '' + nextState;
			}
		}

		this.setState({
			isOpen: true,
			isPseudoFocused: false,
			inputValue: newInputValue
		});
	},

	handleKeyDown: function handleKeyDown(event) {
		if (this.props.disabled) return;

		if (typeof this.props.onInputKeyDown === 'function') {
			this.props.onInputKeyDown(event);
			if (event.defaultPrevented) {
				return;
			}
		}

		switch (event.keyCode) {
			case 8:
				// backspace
				if (!this.state.inputValue && this.props.backspaceRemoves) {
					event.preventDefault();
					this.popValue();
				}
				return;
			case 9:
				// tab
				if (event.shiftKey || !this.state.isOpen || !this.props.tabSelectsValue) {
					return;
				}
				this.selectFocusedOption();
				return;
			case 13:
				// enter
				if (!this.state.isOpen) return;
				event.stopPropagation();
				this.selectFocusedOption();
				break;
			case 27:
				// escape
				if (this.state.isOpen) {
					this.closeMenu();
					event.stopPropagation();
				} else if (this.props.clearable && this.props.escapeClearsValue) {
					this.clearValue(event);
					event.stopPropagation();
				}
				break;
			case 38:
				// up
				this.focusPreviousOption();
				break;
			case 40:
				// down
				this.focusNextOption();
				break;
			case 33:
				// page up
				this.focusPageUpOption();
				break;
			case 34:
				// page down
				this.focusPageDownOption();
				break;
			case 35:
				// end key
				this.focusEndOption();
				break;
			case 36:
				// home key
				this.focusStartOption();
				break;
			default:
				return;
		}
		event.preventDefault();
	},

	handleValueClick: function handleValueClick(option, event) {
		if (!this.props.onValueClick) return;
		this.props.onValueClick(option, event);
	},

	handleMenuScroll: function handleMenuScroll(event) {
		if (!this.props.onMenuScrollToBottom) return;
		var target = event.target;

		if (target.scrollHeight > target.offsetHeight && !(target.scrollHeight - target.offsetHeight - target.scrollTop)) {
			this.props.onMenuScrollToBottom();
		}
	},

	handleRequired: function handleRequired(value, multi) {
		if (!value) return true;
		return multi ? value.length === 0 : Object.keys(value).length === 0;
	},

	getOptionLabel: function getOptionLabel(op) {
		return op[this.props.labelKey];
	},

	/**
  * Turns a value into an array from the given options
  * @param	{String|Number|Array}	value		- the value of the select input
  * @param	{Object}		nextProps	- optionally specify the nextProps so the returned array uses the latest configuration
  * @returns	{Array}	the value of the select represented in an array
  */
	getValueArray: function getValueArray(value, nextProps) {
		var _this = this;

		/** support optionally passing in the `nextProps` so `componentWillReceiveProps` updates will function as expected */
		var props = typeof nextProps === 'object' ? nextProps : this.props;
		if (props.multi) {
			if (typeof value === 'string') value = value.split(props.delimiter);
			if (!Array.isArray(value)) {
				if (value === null || value === undefined) return [];
				value = [value];
			}
			return value.map(function (value) {
				return _this.expandValue(value, props);
			}).filter(function (i) {
				return i;
			});
		}
		var expandedValue = this.expandValue(value, props);
		return expandedValue ? [expandedValue] : [];
	},

	/**
  * Retrieve a value from the given options and valueKey
  * @param	{String|Number|Array}	value	- the selected value(s)
  * @param	{Object}		props	- the Select component's props (or nextProps)
  */
	expandValue: function expandValue(value, props) {
		if (typeof value !== 'string' && typeof value !== 'number') return value;
		var options = props.options;
		var valueKey = props.valueKey;

		if (!options) return;
		for (var i = 0; i < options.length; i++) {
			if (options[i][valueKey] === value) return options[i];
		}
	},

	setValue: function setValue(value) {
		var _this2 = this;

		if (this.props.autoBlur) {
			this.blurInput();
		}
		if (!this.props.onChange) return;
		if (this.props.required) {
			var required = this.handleRequired(value, this.props.multi);
			this.setState({ required: required });
		}
		if (this.props.simpleValue && value) {
			value = this.props.multi ? value.map(function (i) {
				return i[_this2.props.valueKey];
			}).join(this.props.delimiter) : value[this.props.valueKey];
		}
		this.props.onChange(value);
	},

	selectValue: function selectValue(value) {
		var _this3 = this;

		//NOTE: update value in the callback to make sure the input value is empty so that there are no styling issues (Chrome had issue otherwise)
		this.hasScrolledToOption = false;
		if (this.props.multi) {
			this.setState({
				inputValue: '',
				focusedIndex: null
			}, function () {
				_this3.addValue(value);
			});
		} else {
			this.setState({
				isOpen: false,
				inputValue: '',
				isPseudoFocused: this.state.isFocused
			}, function () {
				_this3.setValue(value);
			});
		}
	},

	addValue: function addValue(value) {
		var valueArray = this.getValueArray(this.props.value);
		this.setValue(valueArray.concat(value));
	},

	popValue: function popValue() {
		var valueArray = this.getValueArray(this.props.value);
		if (!valueArray.length) return;
		if (valueArray[valueArray.length - 1].clearableValue === false) return;
		this.setValue(valueArray.slice(0, valueArray.length - 1));
	},

	removeValue: function removeValue(value) {
		var valueArray = this.getValueArray(this.props.value);
		this.setValue(valueArray.filter(function (i) {
			return i !== value;
		}));
		this.focus();
	},

	clearValue: function clearValue(event) {
		// if the event was triggered by a mousedown and not the primary
		// button, ignore it.
		if (event && event.type === 'mousedown' && event.button !== 0) {
			return;
		}
		event.stopPropagation();
		event.preventDefault();
		this.setValue(this.getResetValue());
		this.setState({
			isOpen: false,
			inputValue: ''
		}, this.focus);
	},

	getResetValue: function getResetValue() {
		if (this.props.resetValue !== undefined) {
			return this.props.resetValue;
		} else if (this.props.multi) {
			return [];
		} else {
			return null;
		}
	},

	focusOption: function focusOption(option) {
		this.setState({
			focusedOption: option
		});
	},

	focusNextOption: function focusNextOption() {
		this.focusAdjacentOption('next');
	},

	focusPreviousOption: function focusPreviousOption() {
		this.focusAdjacentOption('previous');
	},

	focusPageUpOption: function focusPageUpOption() {
		this.focusAdjacentOption('page_up');
	},

	focusPageDownOption: function focusPageDownOption() {
		this.focusAdjacentOption('page_down');
	},

	focusStartOption: function focusStartOption() {
		this.focusAdjacentOption('start');
	},

	focusEndOption: function focusEndOption() {
		this.focusAdjacentOption('end');
	},

	focusAdjacentOption: function focusAdjacentOption(dir) {
		var options = this._visibleOptions.map(function (option, index) {
			return { option: option, index: index };
		}).filter(function (option) {
			return !option.option.disabled;
		});
		this._scrollToFocusedOptionOnUpdate = true;
		if (!this.state.isOpen) {
			this.setState({
				isOpen: true,
				inputValue: '',
				focusedOption: this._focusedOption || options[dir === 'next' ? 0 : options.length - 1].option
			});
			return;
		}
		if (!options.length) return;
		var focusedIndex = -1;
		for (var i = 0; i < options.length; i++) {
			if (this._focusedOption === options[i].option) {
				focusedIndex = i;
				break;
			}
		}
		if (dir === 'next' && focusedIndex !== -1) {
			focusedIndex = (focusedIndex + 1) % options.length;
		} else if (dir === 'previous') {
			if (focusedIndex > 0) {
				focusedIndex = focusedIndex - 1;
			} else {
				focusedIndex = options.length - 1;
			}
		} else if (dir === 'start') {
			focusedIndex = 0;
		} else if (dir === 'end') {
			focusedIndex = options.length - 1;
		} else if (dir === 'page_up') {
			var potentialIndex = focusedIndex - this.props.pageSize;
			if (potentialIndex < 0) {
				focusedIndex = 0;
			} else {
				focusedIndex = potentialIndex;
			}
		} else if (dir === 'page_down') {
			var potentialIndex = focusedIndex + this.props.pageSize;
			if (potentialIndex > options.length - 1) {
				focusedIndex = options.length - 1;
			} else {
				focusedIndex = potentialIndex;
			}
		}

		if (focusedIndex === -1) {
			focusedIndex = 0;
		}

		this.setState({
			focusedIndex: options[focusedIndex].index,
			focusedOption: options[focusedIndex].option
		});
	},

	getFocusedOption: function getFocusedOption() {
		return this._focusedOption;
	},

	getInputValue: function getInputValue() {
		return this.state.inputValue;
	},

	selectFocusedOption: function selectFocusedOption() {
		if (this._focusedOption) {
			return this.selectValue(this._focusedOption);
		}
	},

	renderLoading: function renderLoading() {
		if (!this.props.isLoading) return;
		return _react2['default'].createElement(
			'span',
			{ className: 'Select-loading-zone', 'aria-hidden': 'true' },
			_react2['default'].createElement('span', { className: 'Select-loading' })
		);
	},

	renderValue: function renderValue(valueArray, isOpen) {
		var _this4 = this;

		var renderLabel = this.props.valueRenderer || this.getOptionLabel;
		var ValueComponent = this.props.valueComponent;
		if (!valueArray.length) {
			return !this.state.inputValue ? _react2['default'].createElement(
				'div',
				{ className: 'Select-placeholder' },
				this.props.placeholder
			) : null;
		}
		var onClick = this.props.onValueClick ? this.handleValueClick : null;
		if (this.props.multi) {
			return valueArray.map(function (value, i) {
				return _react2['default'].createElement(
					ValueComponent,
					{
						id: _this4._instancePrefix + '-value-' + i,
						instancePrefix: _this4._instancePrefix,
						disabled: _this4.props.disabled || value.clearableValue === false,
						key: 'value-' + i + '-' + value[_this4.props.valueKey],
						onClick: onClick,
						onRemove: _this4.removeValue,
						value: value
					},
					renderLabel(value, i),
					_react2['default'].createElement(
						'span',
						{ className: 'Select-aria-only' },
						' '
					)
				);
			});
		} else if (!this.state.inputValue) {
			if (isOpen) onClick = null;
			return _react2['default'].createElement(
				ValueComponent,
				{
					id: this._instancePrefix + '-value-item',
					disabled: this.props.disabled,
					instancePrefix: this._instancePrefix,
					onClick: onClick,
					value: valueArray[0]
				},
				renderLabel(valueArray[0])
			);
		}
	},

	renderInput: function renderInput(valueArray, focusedOptionIndex) {
		var _this5 = this;

		if (this.props.inputRenderer) {
			return this.props.inputRenderer();
		} else {
			var _classNames;

			var className = (0, _classnames2['default'])('Select-input', this.props.inputProps.className);
			var isOpen = !!this.state.isOpen;

			var ariaOwns = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, this._instancePrefix + '-list', isOpen), _defineProperty(_classNames, this._instancePrefix + '-backspace-remove-message', this.props.multi && !this.props.disabled && this.state.isFocused && !this.state.inputValue), _classNames));

			// TODO: Check how this project includes Object.assign()
			var inputProps = _extends({}, this.props.inputProps, {
				role: 'combobox',
				'aria-expanded': '' + isOpen,
				'aria-owns': ariaOwns,
				'aria-haspopup': '' + isOpen,
				'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',
				'aria-labelledby': this.props['aria-labelledby'],
				'aria-label': this.props['aria-label'],
				className: className,
				tabIndex: this.props.tabIndex,
				onBlur: this.handleInputBlur,
				onChange: this.handleInputChange,
				onFocus: this.handleInputFocus,
				ref: function ref(_ref) {
					return _this5.input = _ref;
				},
				required: this.state.required,
				value: this.state.inputValue
			});

			if (this.props.disabled || !this.props.searchable) {
				var _props$inputProps = this.props.inputProps;
				var inputClassName = _props$inputProps.inputClassName;

				var divProps = _objectWithoutProperties(_props$inputProps, ['inputClassName']);

				return _react2['default'].createElement('div', _extends({}, divProps, {
					role: 'combobox',
					'aria-expanded': isOpen,
					'aria-owns': isOpen ? this._instancePrefix + '-list' : this._instancePrefix + '-value',
					'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',
					className: className,
					tabIndex: this.props.tabIndex || 0,
					onBlur: this.handleInputBlur,
					onFocus: this.handleInputFocus,
					ref: function (ref) {
						return _this5.input = ref;
					},
					'aria-readonly': '' + !!this.props.disabled,
					style: { border: 0, width: 1, display: 'inline-block' } }));
			}

			if (this.props.autosize) {
				return _react2['default'].createElement(_reactInputAutosize2['default'], _extends({}, inputProps, { minWidth: '5px' }));
			}
			return _react2['default'].createElement(
				'div',
				{ className: className },
				_react2['default'].createElement('input', inputProps)
			);
		}
	},

	renderClear: function renderClear() {
		if (!this.props.clearable || !this.props.value || this.props.value === 0 || this.props.multi && !this.props.value.length || this.props.disabled || this.props.isLoading) return;
		return _react2['default'].createElement(
			'span',
			{ className: 'Select-clear-zone', title: this.props.multi ? this.props.clearAllText : this.props.clearValueText,
				'aria-label': this.props.multi ? this.props.clearAllText : this.props.clearValueText,
				onMouseDown: this.clearValue,
				onTouchStart: this.handleTouchStart,
				onTouchMove: this.handleTouchMove,
				onTouchEnd: this.handleTouchEndClearValue
			},
			_react2['default'].createElement('span', { className: 'Select-clear', dangerouslySetInnerHTML: { __html: '&times;' } })
		);
	},

	renderArrow: function renderArrow() {
		return _react2['default'].createElement(
			'span',
			{ className: 'Select-arrow-zone', onMouseDown: this.handleMouseDownOnArrow },
			_react2['default'].createElement('span', { className: 'Select-arrow', onMouseDown: this.handleMouseDownOnArrow })
		);
	},

	filterOptions: function filterOptions(excludeOptions) {
		var filterValue = this.state.inputValue;
		var options = this.props.options || [];
		if (this.props.filterOptions) {
			// Maintain backwards compatibility with boolean attribute
			var filterOptions = typeof this.props.filterOptions === 'function' ? this.props.filterOptions : _utilsDefaultFilterOptions2['default'];

			return filterOptions(options, filterValue, excludeOptions, {
				filterOption: this.props.filterOption,
				ignoreAccents: this.props.ignoreAccents,
				ignoreCase: this.props.ignoreCase,
				labelKey: this.props.labelKey,
				matchPos: this.props.matchPos,
				matchProp: this.props.matchProp,
				valueKey: this.props.valueKey
			});
		} else {
			return options;
		}
	},

	renderMenu: function renderMenu(options, valueArray, focusedOption) {
		if (options && options.length) {
			return this.props.menuRenderer({
				focusedOption: focusedOption,
				focusOption: this.focusOption,
				instancePrefix: this._instancePrefix,
				labelKey: this.props.labelKey,
				onFocus: this.focusOption,
				onSelect: this.selectValue,
				optionClassName: this.props.optionClassName,
				optionComponent: this.props.optionComponent,
				optionRenderer: this.props.optionRenderer || this.getOptionLabel,
				options: options,
				selectValue: this.selectValue,
				valueArray: valueArray,
				valueKey: this.props.valueKey
			});
		} else if (this.props.noResultsText) {
			return _react2['default'].createElement(
				'div',
				{ className: 'Select-noresults' },
				this.props.noResultsText
			);
		} else {
			return null;
		}
	},

	renderHiddenField: function renderHiddenField(valueArray) {
		var _this6 = this;

		if (!this.props.name) return;
		if (this.props.joinValues) {
			var value = valueArray.map(function (i) {
				return stringifyValue(i[_this6.props.valueKey]);
			}).join(this.props.delimiter);
			return _react2['default'].createElement('input', {
				type: 'hidden',
				ref: function (ref) {
					return _this6.value = ref;
				},
				name: this.props.name,
				value: value,
				disabled: this.props.disabled });
		}
		return valueArray.map(function (item, index) {
			return _react2['default'].createElement('input', { key: 'hidden.' + index,
				type: 'hidden',
				ref: 'value' + index,
				name: _this6.props.name,
				value: stringifyValue(item[_this6.props.valueKey]),
				disabled: _this6.props.disabled });
		});
	},

	getFocusableOptionIndex: function getFocusableOptionIndex(selectedOption) {
		var options = this._visibleOptions;
		if (!options.length) return null;

		var focusedOption = this.state.focusedOption || selectedOption;
		if (focusedOption && !focusedOption.disabled) {
			var focusedOptionIndex = options.indexOf(focusedOption);
			if (focusedOptionIndex !== -1) {
				return focusedOptionIndex;
			}
		}

		for (var i = 0; i < options.length; i++) {
			if (!options[i].disabled) return i;
		}
		return null;
	},

	renderOuter: function renderOuter(options, valueArray, focusedOption) {
		var _this7 = this;

		var menu = this.renderMenu(options, valueArray, focusedOption);
		if (!menu) {
			return null;
		}

		return _react2['default'].createElement(
			'div',
			{ ref: function (ref) {
					return _this7.menuContainer = ref;
				}, className: 'Select-menu-outer', style: this.props.menuContainerStyle },
			_react2['default'].createElement(
				'div',
				{ ref: function (ref) {
						return _this7.menu = ref;
					}, role: 'listbox', className: 'Select-menu', id: this._instancePrefix + '-list',
					style: this.props.menuStyle,
					onScroll: this.handleMenuScroll,
					onMouseDown: this.handleMouseDownOnMenu },
				menu
			)
		);
	},

	render: function render() {
		var _this8 = this;

		var valueArray = this.getValueArray(this.props.value);
		var options = this._visibleOptions = this.filterOptions(this.props.multi ? this.getValueArray(this.props.value) : null);
		var isOpen = this.state.isOpen;
		if (this.props.multi && !options.length && valueArray.length && !this.state.inputValue) isOpen = false;
		var focusedOptionIndex = this.getFocusableOptionIndex(valueArray[0]);

		var focusedOption = null;
		if (focusedOptionIndex !== null) {
			focusedOption = this._focusedOption = options[focusedOptionIndex];
		} else {
			focusedOption = this._focusedOption = null;
		}
		var className = (0, _classnames2['default'])('Select', this.props.className, {
			'Select--multi': this.props.multi,
			'Select--single': !this.props.multi,
			'is-disabled': this.props.disabled,
			'is-focused': this.state.isFocused,
			'is-loading': this.props.isLoading,
			'is-open': isOpen,
			'is-pseudo-focused': this.state.isPseudoFocused,
			'is-searchable': this.props.searchable,
			'has-value': valueArray.length
		});

		var removeMessage = null;
		if (this.props.multi && !this.props.disabled && valueArray.length && !this.state.inputValue && this.state.isFocused && this.props.backspaceRemoves) {
			removeMessage = _react2['default'].createElement(
				'span',
				{ id: this._instancePrefix + '-backspace-remove-message', className: 'Select-aria-only', 'aria-live': 'assertive' },
				this.props.backspaceToRemoveMessage.replace('{label}', valueArray[valueArray.length - 1][this.props.labelKey])
			);
		}

		return _react2['default'].createElement(
			'div',
			{ ref: function (ref) {
					return _this8.wrapper = ref;
				},
				className: className,
				style: this.props.wrapperStyle },
			this.renderHiddenField(valueArray),
			_react2['default'].createElement(
				'div',
				{ ref: function (ref) {
						return _this8.control = ref;
					},
					className: 'Select-control',
					style: this.props.style,
					onKeyDown: this.handleKeyDown,
					onMouseDown: this.handleMouseDown,
					onTouchEnd: this.handleTouchEnd,
					onTouchStart: this.handleTouchStart,
					onTouchMove: this.handleTouchMove
				},
				_react2['default'].createElement(
					'span',
					{ className: 'Select-multi-value-wrapper', id: this._instancePrefix + '-value' },
					this.renderValue(valueArray, isOpen),
					this.renderInput(valueArray, focusedOptionIndex)
				),
				removeMessage,
				this.renderLoading(),
				this.renderClear(),
				this.renderArrow()
			),
			isOpen ? this.renderOuter(options, !this.props.multi ? valueArray : null, focusedOption) : null
		);
	}

});

exports['default'] = Select;
module.exports = exports['default'];

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./Async":1,"./Creatable":2,"./Option":3,"./Value":5,"./utils/defaultFilterOptions":6,"./utils/defaultMenuRenderer":7}],5:[function(require,module,exports){
(function (global){
'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _react = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);

var _react2 = _interopRequireDefault(_react);

var _classnames = (typeof window !== "undefined" ? window['classNames'] : typeof global !== "undefined" ? global['classNames'] : null);

var _classnames2 = _interopRequireDefault(_classnames);

var Value = _react2['default'].createClass({

	displayName: 'Value',

	propTypes: {
		children: _react2['default'].PropTypes.node,
		disabled: _react2['default'].PropTypes.bool, // disabled prop passed to ReactSelect
		id: _react2['default'].PropTypes.string, // Unique id for the value - used for aria
		onClick: _react2['default'].PropTypes.func, // method to handle click on value label
		onRemove: _react2['default'].PropTypes.func, // method to handle removal of the value
		value: _react2['default'].PropTypes.object.isRequired },

	// the option object for this value
	handleMouseDown: function handleMouseDown(event) {
		if (event.type === 'mousedown' && event.button !== 0) {
			return;
		}
		if (this.props.onClick) {
			event.stopPropagation();
			this.props.onClick(this.props.value, event);
			return;
		}
		if (this.props.value.href) {
			event.stopPropagation();
		}
	},

	onRemove: function onRemove(event) {
		event.preventDefault();
		event.stopPropagation();
		this.props.onRemove(this.props.value);
	},

	handleTouchEndRemove: function handleTouchEndRemove(event) {
		// Check if the view is being dragged, In this case
		// we don't want to fire the click event (because the user only wants to scroll)
		if (this.dragging) return;

		// Fire the mouse events
		this.onRemove(event);
	},

	handleTouchMove: function handleTouchMove(event) {
		// Set a flag that the view is being dragged
		this.dragging = true;
	},

	handleTouchStart: function handleTouchStart(event) {
		// Set a flag that the view is not being dragged
		this.dragging = false;
	},

	renderRemoveIcon: function renderRemoveIcon() {
		if (this.props.disabled || !this.props.onRemove) return;
		return _react2['default'].createElement(
			'span',
			{ className: 'Select-value-icon',
				'aria-hidden': 'true',
				onMouseDown: this.onRemove,
				onTouchEnd: this.handleTouchEndRemove,
				onTouchStart: this.handleTouchStart,
				onTouchMove: this.handleTouchMove },
			'×'
		);
	},

	renderLabel: function renderLabel() {
		var className = 'Select-value-label';
		return this.props.onClick || this.props.value.href ? _react2['default'].createElement(
			'a',
			{ className: className, href: this.props.value.href, target: this.props.value.target, onMouseDown: this.handleMouseDown, onTouchEnd: this.handleMouseDown },
			this.props.children
		) : _react2['default'].createElement(
			'span',
			{ className: className, role: 'option', 'aria-selected': 'true', id: this.props.id },
			this.props.children
		);
	},

	render: function render() {
		return _react2['default'].createElement(
			'div',
			{ className: (0, _classnames2['default'])('Select-value', this.props.value.className),
				style: this.props.value.style,
				title: this.props.value.title
			},
			this.renderRemoveIcon(),
			this.renderLabel()
		);
	}

});

module.exports = Value;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],6:[function(require,module,exports){
'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _stripDiacritics = require('./stripDiacritics');

var _stripDiacritics2 = _interopRequireDefault(_stripDiacritics);

function filterOptions(options, filterValue, excludeOptions, props) {
	var _this = this;

	if (props.ignoreAccents) {
		filterValue = (0, _stripDiacritics2['default'])(filterValue);
	}

	if (props.ignoreCase) {
		filterValue = filterValue.toLowerCase();
	}

	if (excludeOptions) excludeOptions = excludeOptions.map(function (i) {
		return i[props.valueKey];
	});

	return options.filter(function (option) {
		if (excludeOptions && excludeOptions.indexOf(option[props.valueKey]) > -1) return false;
		if (props.filterOption) return props.filterOption.call(_this, option, filterValue);
		if (!filterValue) return true;
		var valueTest = String(option[props.valueKey]);
		var labelTest = String(option[props.labelKey]);
		if (props.ignoreAccents) {
			if (props.matchProp !== 'label') valueTest = (0, _stripDiacritics2['default'])(valueTest);
			if (props.matchProp !== 'value') labelTest = (0, _stripDiacritics2['default'])(labelTest);
		}
		if (props.ignoreCase) {
			if (props.matchProp !== 'label') valueTest = valueTest.toLowerCase();
			if (props.matchProp !== 'value') labelTest = labelTest.toLowerCase();
		}
		return props.matchPos === 'start' ? props.matchProp !== 'label' && valueTest.substr(0, filterValue.length) === filterValue || props.matchProp !== 'value' && labelTest.substr(0, filterValue.length) === filterValue : props.matchProp !== 'label' && valueTest.indexOf(filterValue) >= 0 || props.matchProp !== 'value' && labelTest.indexOf(filterValue) >= 0;
	});
}

module.exports = filterOptions;

},{"./stripDiacritics":8}],7:[function(require,module,exports){
(function (global){
'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _classnames = (typeof window !== "undefined" ? window['classNames'] : typeof global !== "undefined" ? global['classNames'] : null);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);

var _react2 = _interopRequireDefault(_react);

function menuRenderer(_ref) {
	var focusedOption = _ref.focusedOption;
	var instancePrefix = _ref.instancePrefix;
	var labelKey = _ref.labelKey;
	var onFocus = _ref.onFocus;
	var onSelect = _ref.onSelect;
	var optionClassName = _ref.optionClassName;
	var optionComponent = _ref.optionComponent;
	var optionRenderer = _ref.optionRenderer;
	var options = _ref.options;
	var valueArray = _ref.valueArray;
	var valueKey = _ref.valueKey;

	var Option = optionComponent;

	return options.map(function (option, i) {
		var isSelected = valueArray && valueArray.indexOf(option) > -1;
		var isFocused = option === focusedOption;
		var optionRef = isFocused ? 'focused' : null;
		var optionClass = (0, _classnames2['default'])(optionClassName, {
			'Select-option': true,
			'is-selected': isSelected,
			'is-focused': isFocused,
			'is-disabled': option.disabled
		});

		return _react2['default'].createElement(
			Option,
			{
				className: optionClass,
				instancePrefix: instancePrefix,
				isDisabled: option.disabled,
				isFocused: isFocused,
				isSelected: isSelected,
				key: 'option-' + i + '-' + option[valueKey],
				onFocus: onFocus,
				onSelect: onSelect,
				option: option,
				optionIndex: i,
				ref: optionRef
			},
			optionRenderer(option, i)
		);
	});
}

module.exports = menuRenderer;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],8:[function(require,module,exports){
'use strict';

var map = [{ 'base': 'A', 'letters': /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g }, { 'base': 'AA', 'letters': /[\uA732]/g }, { 'base': 'AE', 'letters': /[\u00C6\u01FC\u01E2]/g }, { 'base': 'AO', 'letters': /[\uA734]/g }, { 'base': 'AU', 'letters': /[\uA736]/g }, { 'base': 'AV', 'letters': /[\uA738\uA73A]/g }, { 'base': 'AY', 'letters': /[\uA73C]/g }, { 'base': 'B', 'letters': /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g }, { 'base': 'C', 'letters': /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g }, { 'base': 'D', 'letters': /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g }, { 'base': 'DZ', 'letters': /[\u01F1\u01C4]/g }, { 'base': 'Dz', 'letters': /[\u01F2\u01C5]/g }, { 'base': 'E', 'letters': /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g }, { 'base': 'F', 'letters': /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g }, { 'base': 'G', 'letters': /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g }, { 'base': 'H', 'letters': /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g }, { 'base': 'I', 'letters': /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g }, { 'base': 'J', 'letters': /[\u004A\u24BF\uFF2A\u0134\u0248]/g }, { 'base': 'K', 'letters': /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g }, { 'base': 'L', 'letters': /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g }, { 'base': 'LJ', 'letters': /[\u01C7]/g }, { 'base': 'Lj', 'letters': /[\u01C8]/g }, { 'base': 'M', 'letters': /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g }, { 'base': 'N', 'letters': /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g }, { 'base': 'NJ', 'letters': /[\u01CA]/g }, { 'base': 'Nj', 'letters': /[\u01CB]/g }, { 'base': 'O', 'letters': /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g }, { 'base': 'OI', 'letters': /[\u01A2]/g }, { 'base': 'OO', 'letters': /[\uA74E]/g }, { 'base': 'OU', 'letters': /[\u0222]/g }, { 'base': 'P', 'letters': /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g }, { 'base': 'Q', 'letters': /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g }, { 'base': 'R', 'letters': /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g }, { 'base': 'S', 'letters': /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g }, { 'base': 'T', 'letters': /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g }, { 'base': 'TZ', 'letters': /[\uA728]/g }, { 'base': 'U', 'letters': /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g }, { 'base': 'V', 'letters': /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g }, { 'base': 'VY', 'letters': /[\uA760]/g }, { 'base': 'W', 'letters': /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g }, { 'base': 'X', 'letters': /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g }, { 'base': 'Y', 'letters': /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g }, { 'base': 'Z', 'letters': /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g }, { 'base': 'a', 'letters': /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g }, { 'base': 'aa', 'letters': /[\uA733]/g }, { 'base': 'ae', 'letters': /[\u00E6\u01FD\u01E3]/g }, { 'base': 'ao', 'letters': /[\uA735]/g }, { 'base': 'au', 'letters': /[\uA737]/g }, { 'base': 'av', 'letters': /[\uA739\uA73B]/g }, { 'base': 'ay', 'letters': /[\uA73D]/g }, { 'base': 'b', 'letters': /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g }, { 'base': 'c', 'letters': /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g }, { 'base': 'd', 'letters': /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g }, { 'base': 'dz', 'letters': /[\u01F3\u01C6]/g }, { 'base': 'e', 'letters': /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g }, { 'base': 'f', 'letters': /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g }, { 'base': 'g', 'letters': /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g }, { 'base': 'h', 'letters': /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g }, { 'base': 'hv', 'letters': /[\u0195]/g }, { 'base': 'i', 'letters': /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g }, { 'base': 'j', 'letters': /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g }, { 'base': 'k', 'letters': /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g }, { 'base': 'l', 'letters': /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g }, { 'base': 'lj', 'letters': /[\u01C9]/g }, { 'base': 'm', 'letters': /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g }, { 'base': 'n', 'letters': /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g }, { 'base': 'nj', 'letters': /[\u01CC]/g }, { 'base': 'o', 'letters': /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g }, { 'base': 'oi', 'letters': /[\u01A3]/g }, { 'base': 'ou', 'letters': /[\u0223]/g }, { 'base': 'oo', 'letters': /[\uA74F]/g }, { 'base': 'p', 'letters': /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g }, { 'base': 'q', 'letters': /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g }, { 'base': 'r', 'letters': /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g }, { 'base': 's', 'letters': /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g }, { 'base': 't', 'letters': /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g }, { 'base': 'tz', 'letters': /[\uA729]/g }, { 'base': 'u', 'letters': /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g }, { 'base': 'v', 'letters': /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g }, { 'base': 'vy', 'letters': /[\uA761]/g }, { 'base': 'w', 'letters': /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g }, { 'base': 'x', 'letters': /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g }, { 'base': 'y', 'letters': /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g }, { 'base': 'z', 'letters': /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g }];

module.exports = function stripDiacritics(str) {
	for (var i = 0; i < map.length; i++) {
		str = str.replace(map[i].letters, map[i].base);
	}
	return str;
};

},{}]},{},[4])(4)
});
;(function() {
"use strict";

if (typeof window === 'undefined') return;

/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A component handler interface using the revealing module design pattern.
 * More details on this design pattern here:
 * https://github.com/jasonmayes/mdl-component-design-pattern
 *
 * @author Jason Mayes.
 */
/* exported componentHandler */

// Pre-defining the componentHandler interface, for closure documentation and
// static verification.
var componentHandler = {
  /**
   * Searches existing DOM for elements of our component type and upgrades them
   * if they have not already been upgraded.
   *
   * @param {string=} optJsClass the programatic name of the element class we
   * need to create a new instance of.
   * @param {string=} optCssClass the name of the CSS class elements of this
   * type will have.
   */
  upgradeDom: function(optJsClass, optCssClass) {},
  /**
   * Upgrades a specific element rather than all in the DOM.
   *
   * @param {!Element} element The element we wish to upgrade.
   * @param {string=} optJsClass Optional name of the class we want to upgrade
   * the element to.
   */
  upgradeElement: function(element, optJsClass) {},
  /**
   * Upgrades a specific list of elements rather than all in the DOM.
   *
   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements
   * The elements we wish to upgrade.
   */
  upgradeElements: function(elements) {},
  /**
   * Upgrades all registered components found in the current DOM. This is
   * automatically called on window load.
   */
  upgradeAllRegistered: function() {},
  /**
   * Allows user to be alerted to any upgrades that are performed for a given
   * component type
   *
   * @param {string} jsClass The class name of the MDL component we wish
   * to hook into for any upgrades performed.
   * @param {function(!HTMLElement)} callback The function to call upon an
   * upgrade. This function should expect 1 parameter - the HTMLElement which
   * got upgraded.
   */
  registerUpgradedCallback: function(jsClass, callback) {},
  /**
   * Registers a class for future use and attempts to upgrade existing DOM.
   *
   * @param {componentHandler.ComponentConfigPublic} config the registration configuration
   */
  register: function(config) {},
  /**
   * Downgrade either a given node, an array of nodes, or a NodeList.
   *
   * @param {!Node|!Array<!Node>|!NodeList} nodes
   */
  downgradeElements: function(nodes) {}
};

componentHandler = (function() {
  'use strict';

  /** @type {!Array<componentHandler.ComponentConfig>} */
  var registeredComponents_ = [];

  /** @type {!Array<componentHandler.Component>} */
  var createdComponents_ = [];

  var componentConfigProperty_ = 'mdlComponentConfigInternal_';

  /**
   * Searches registered components for a class we are interested in using.
   * Optionally replaces a match with passed object if specified.
   *
   * @param {string} name The name of a class we want to use.
   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.
   * @return {!Object|boolean}
   * @private
   */
  function findRegisteredClass_(name, optReplace) {
    for (var i = 0; i < registeredComponents_.length; i++) {
      if (registeredComponents_[i].className === name) {
        if (typeof optReplace !== 'undefined') {
          registeredComponents_[i] = optReplace;
        }
        return registeredComponents_[i];
      }
    }
    return false;
  }

  /**
   * Returns an array of the classNames of the upgraded classes on the element.
   *
   * @param {!Element} element The element to fetch data from.
   * @return {!Array<string>}
   * @private
   */
  function getUpgradedListOfElement_(element) {
    var dataUpgraded = element.getAttribute('data-upgraded');
    // Use `['']` as default value to conform the `,name,name...` style.
    return dataUpgraded === null ? [''] : dataUpgraded.split(',');
  }

  /**
   * Returns true if the given element has already been upgraded for the given
   * class.
   *
   * @param {!Element} element The element we want to check.
   * @param {string} jsClass The class to check for.
   * @returns {boolean}
   * @private
   */
  function isElementUpgraded_(element, jsClass) {
    var upgradedList = getUpgradedListOfElement_(element);
    return upgradedList.indexOf(jsClass) !== -1;
  }

  /**
   * Searches existing DOM for elements of our component type and upgrades them
   * if they have not already been upgraded.
   *
   * @param {string=} optJsClass the programatic name of the element class we
   * need to create a new instance of.
   * @param {string=} optCssClass the name of the CSS class elements of this
   * type will have.
   */
  function upgradeDomInternal(optJsClass, optCssClass) {
    if (typeof optJsClass === 'undefined' &&
        typeof optCssClass === 'undefined') {
      for (var i = 0; i < registeredComponents_.length; i++) {
        upgradeDomInternal(registeredComponents_[i].className,
            registeredComponents_[i].cssClass);
      }
    } else {
      var jsClass = /** @type {string} */ (optJsClass);
      if (typeof optCssClass === 'undefined') {
        var registeredClass = findRegisteredClass_(jsClass);
        if (registeredClass) {
          optCssClass = registeredClass.cssClass;
        }
      }

      var elements = document.querySelectorAll('.' + optCssClass);
      for (var n = 0; n < elements.length; n++) {
        upgradeElementInternal(elements[n], jsClass);
      }
    }
  }

  /**
   * Upgrades a specific element rather than all in the DOM.
   *
   * @param {!Element} element The element we wish to upgrade.
   * @param {string=} optJsClass Optional name of the class we want to upgrade
   * the element to.
   */
  function upgradeElementInternal(element, optJsClass) {
    // Verify argument type.
    if (!(typeof element === 'object' && element instanceof Element)) {
      throw new Error('Invalid argument provided to upgrade MDL element.');
    }
    var upgradedList = getUpgradedListOfElement_(element);
    var classesToUpgrade = [];
    // If jsClass is not provided scan the registered components to find the
    // ones matching the element's CSS classList.
    if (!optJsClass) {
      var classList = element.classList;
      registeredComponents_.forEach(function(component) {
        // Match CSS & Not to be upgraded & Not upgraded.
        if (classList.contains(component.cssClass) &&
            classesToUpgrade.indexOf(component) === -1 &&
            !isElementUpgraded_(element, component.className)) {
          classesToUpgrade.push(component);
        }
      });
    } else if (!isElementUpgraded_(element, optJsClass)) {
      classesToUpgrade.push(findRegisteredClass_(optJsClass));
    }

    // Upgrade the element for each classes.
    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {
      registeredClass = classesToUpgrade[i];
      if (registeredClass) {
        // Mark element as upgraded.
        upgradedList.push(registeredClass.className);
        element.setAttribute('data-upgraded', upgradedList.join(','));
        var instance = new registeredClass.classConstructor(element);
        instance[componentConfigProperty_] = registeredClass;
        createdComponents_.push(instance);
        // Call any callbacks the user has registered with this component type.
        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {
          registeredClass.callbacks[j](element);
        }

        if (registeredClass.widget) {
          // Assign per element instance for control over API
          element[registeredClass.className] = instance;
        }
      } else {
        throw new Error(
          'Unable to find a registered component for the given class.');
      }

      var ev;
      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {
        ev = new Event('mdl-componentupgraded', {
          'bubbles': true, 'cancelable': false
        });
      } else {
        ev = document.createEvent('Events');
        ev.initEvent('mdl-componentupgraded', true, true);
      }
      element.dispatchEvent(ev);
    }
  }

  /**
   * Upgrades a specific list of elements rather than all in the DOM.
   *
   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements
   * The elements we wish to upgrade.
   */
  function upgradeElementsInternal(elements) {
    if (!Array.isArray(elements)) {
      if (typeof elements.item === 'function') {
        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));
      } else {
        elements = [elements];
      }
    }
    for (var i = 0, n = elements.length, element; i < n; i++) {
      element = elements[i];
      if (element instanceof HTMLElement) {
        upgradeElementInternal(element);
        if (element.children.length > 0) {
          upgradeElementsInternal(element.children);
        }
      }
    }
  }

  /**
   * Registers a class for future use and attempts to upgrade existing DOM.
   *
   * @param {componentHandler.ComponentConfigPublic} config
   */
  function registerInternal(config) {
    // In order to support both Closure-compiled and uncompiled code accessing
    // this method, we need to allow for both the dot and array syntax for
    // property access. You'll therefore see the `foo.bar || foo['bar']`
    // pattern repeated across this method.
    var widgetMissing = (typeof config.widget === 'undefined' &&
        typeof config['widget'] === 'undefined');
    var widget = true;

    if (!widgetMissing) {
      widget = config.widget || config['widget'];
    }

    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({
      classConstructor: config.constructor || config['constructor'],
      className: config.classAsString || config['classAsString'],
      cssClass: config.cssClass || config['cssClass'],
      widget: widget,
      callbacks: []
    });

    registeredComponents_.forEach(function(item) {
      if (item.cssClass === newConfig.cssClass) {
        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);
      }
      if (item.className === newConfig.className) {
        throw new Error('The provided className has already been registered');
      }
    });

    if (config.constructor.prototype
        .hasOwnProperty(componentConfigProperty_)) {
      throw new Error(
          'MDL component classes must not have ' + componentConfigProperty_ +
          ' defined as a property.');
    }

    var found = findRegisteredClass_(config.classAsString, newConfig);

    if (!found) {
      registeredComponents_.push(newConfig);
    }
  }

  /**
   * Allows user to be alerted to any upgrades that are performed for a given
   * component type
   *
   * @param {string} jsClass The class name of the MDL component we wish
   * to hook into for any upgrades performed.
   * @param {function(!HTMLElement)} callback The function to call upon an
   * upgrade. This function should expect 1 parameter - the HTMLElement which
   * got upgraded.
   */
  function registerUpgradedCallbackInternal(jsClass, callback) {
    var regClass = findRegisteredClass_(jsClass);
    if (regClass) {
      regClass.callbacks.push(callback);
    }
  }

  /**
   * Upgrades all registered components found in the current DOM. This is
   * automatically called on window load.
   */
  function upgradeAllRegisteredInternal() {
    for (var n = 0; n < registeredComponents_.length; n++) {
      upgradeDomInternal(registeredComponents_[n].className);
    }
  }

  /**
   * Check the component for the downgrade method.
   * Execute if found.
   * Remove component from createdComponents list.
   *
   * @param {?componentHandler.Component} component
   */
  function deconstructComponentInternal(component) {
    if (component) {
      var componentIndex = createdComponents_.indexOf(component);
      createdComponents_.splice(componentIndex, 1);

      var upgrades = component.element_.getAttribute('data-upgraded').split(',');
      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);
      upgrades.splice(componentPlace, 1);
      component.element_.setAttribute('data-upgraded', upgrades.join(','));

      var ev;
      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {
        ev = new Event('mdl-componentdowngraded', {
          'bubbles': true, 'cancelable': false
        });
      } else {
        ev = document.createEvent('Events');
        ev.initEvent('mdl-componentdowngraded', true, true);
      }
    }
  }

  /**
   * Downgrade either a given node, an array of nodes, or a NodeList.
   *
   * @param {!Node|!Array<!Node>|!NodeList} nodes
   */
  function downgradeNodesInternal(nodes) {
    /**
     * Auxiliary function to downgrade a single node.
     * @param  {!Node} node the node to be downgraded
     */
    var downgradeNode = function(node) {
      createdComponents_.filter(function(item) {
        return item.element_ === node;
      }).forEach(deconstructComponentInternal);
    };
    if (nodes instanceof Array || nodes instanceof NodeList) {
      for (var n = 0; n < nodes.length; n++) {
        downgradeNode(nodes[n]);
      }
    } else if (nodes instanceof Node) {
      downgradeNode(nodes);
    } else {
      throw new Error('Invalid argument provided to downgrade MDL nodes.');
    }
  }

  // Now return the functions that should be made public with their publicly
  // facing names...
  return {
    upgradeDom: upgradeDomInternal,
    upgradeElement: upgradeElementInternal,
    upgradeElements: upgradeElementsInternal,
    upgradeAllRegistered: upgradeAllRegisteredInternal,
    registerUpgradedCallback: registerUpgradedCallbackInternal,
    register: registerInternal,
    downgradeElements: downgradeNodesInternal
  };
})();

/**
 * Describes the type of a registered component type managed by
 * componentHandler. Provided for benefit of the Closure compiler.
 *
 * @typedef {{
 *   constructor: Function,
 *   classAsString: string,
 *   cssClass: string,
 *   widget: (string|boolean|undefined)
 * }}
 */
componentHandler.ComponentConfigPublic;  // jshint ignore:line

/**
 * Describes the type of a registered component type managed by
 * componentHandler. Provided for benefit of the Closure compiler.
 *
 * @typedef {{
 *   constructor: !Function,
 *   className: string,
 *   cssClass: string,
 *   widget: (string|boolean),
 *   callbacks: !Array<function(!HTMLElement)>
 * }}
 */
componentHandler.ComponentConfig;  // jshint ignore:line

/**
 * Created component (i.e., upgraded element) type as managed by
 * componentHandler. Provided for benefit of the Closure compiler.
 *
 * @typedef {{
 *   element_: !HTMLElement,
 *   className: string,
 *   classAsString: string,
 *   cssClass: string,
 *   widget: string
 * }}
 */
componentHandler.Component;  // jshint ignore:line

// Export all symbols, for the benefit of Closure compiler.
// No effect on uncompiled code.
componentHandler['upgradeDom'] = componentHandler.upgradeDom;
componentHandler['upgradeElement'] = componentHandler.upgradeElement;
componentHandler['upgradeElements'] = componentHandler.upgradeElements;
componentHandler['upgradeAllRegistered'] =
    componentHandler.upgradeAllRegistered;
componentHandler['registerUpgradedCallback'] =
    componentHandler.registerUpgradedCallback;
componentHandler['register'] = componentHandler.register;
componentHandler['downgradeElements'] = componentHandler.downgradeElements;
window.componentHandler = componentHandler;
window['componentHandler'] = componentHandler;

window.addEventListener('load', function() {
  'use strict';

  /**
   * Performs a "Cutting the mustard" test. If the browser supports the features
   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL
   * components requiring JavaScript.
   */
  if ('classList' in document.createElement('div') &&
      'querySelector' in document &&
      'addEventListener' in window && Array.prototype.forEach) {
    document.documentElement.classList.add('mdl-js');
  } else {
    /**
     * Dummy function to avoid JS errors.
     */
    componentHandler.upgradeElement = function() {};
    /**
     * Dummy function to avoid JS errors.
     */
    componentHandler.register = function() {};
  }
});

// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js
// Adapted from https://gist.github.com/paulirish/1579671 which derived from
// http://paulirish.com/2011/requestanimationframe-for-smart-animating/
// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating
// requestAnimationFrame polyfill by Erik Möller.
// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon
// MIT license
if (!Date.now) {
    /**
   * Date.now polyfill.
   * @return {number} the current Date
   */
    Date.now = function () {
        return new Date().getTime();
    };
    Date['now'] = Date.now;
}
var vendors = [
    'webkit',
    'moz'
];
for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {
    var vp = vendors[i];
    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];
    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];
    window['requestAnimationFrame'] = window.requestAnimationFrame;
    window['cancelAnimationFrame'] = window.cancelAnimationFrame;
}
if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {
    var lastTime = 0;
    /**
   * requestAnimationFrame polyfill.
   * @param  {!Function} callback the callback function.
   */
    window.requestAnimationFrame = function (callback) {
        var now = Date.now();
        var nextTime = Math.max(lastTime + 16, now);
        return setTimeout(function () {
            callback(lastTime = nextTime);
        }, nextTime - now);
    };
    window.cancelAnimationFrame = clearTimeout;
    window['requestAnimationFrame'] = window.requestAnimationFrame;
    window['cancelAnimationFrame'] = window.cancelAnimationFrame;
}
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Button MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialButton = function MaterialButton(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialButton'] = MaterialButton;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialButton.prototype.Constant_ = {};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialButton.prototype.CssClasses_ = {
    RIPPLE_EFFECT: 'mdl-js-ripple-effect',
    RIPPLE_CONTAINER: 'mdl-button__ripple-container',
    RIPPLE: 'mdl-ripple'
};
/**
   * Handle blur of element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialButton.prototype.blurHandler_ = function (event) {
    if (event) {
        this.element_.blur();
    }
};
// Public methods.
/**
   * Disable button.
   *
   * @public
   */
MaterialButton.prototype.disable = function () {
    this.element_.disabled = true;
};
MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;
/**
   * Enable button.
   *
   * @public
   */
MaterialButton.prototype.enable = function () {
    this.element_.disabled = false;
};
MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;
/**
   * Initialize element.
   */
MaterialButton.prototype.init = function () {
    if (this.element_) {
        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            var rippleContainer = document.createElement('span');
            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            this.rippleElement_ = document.createElement('span');
            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);
            rippleContainer.appendChild(this.rippleElement_);
            this.boundRippleBlurHandler = this.blurHandler_.bind(this);
            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);
            this.element_.appendChild(rippleContainer);
        }
        this.boundButtonBlurHandler = this.blurHandler_.bind(this);
        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);
        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialButton,
    classAsString: 'MaterialButton',
    cssClass: 'mdl-js-button',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Checkbox MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialCheckbox = function MaterialCheckbox(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialCheckbox'] = MaterialCheckbox;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialCheckbox.prototype.CssClasses_ = {
    INPUT: 'mdl-checkbox__input',
    BOX_OUTLINE: 'mdl-checkbox__box-outline',
    FOCUS_HELPER: 'mdl-checkbox__focus-helper',
    TICK_OUTLINE: 'mdl-checkbox__tick-outline',
    RIPPLE_EFFECT: 'mdl-js-ripple-effect',
    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',
    RIPPLE_CENTER: 'mdl-ripple--center',
    RIPPLE: 'mdl-ripple',
    IS_FOCUSED: 'is-focused',
    IS_DISABLED: 'is-disabled',
    IS_CHECKED: 'is-checked',
    IS_UPGRADED: 'is-upgraded'
};
/**
   * Handle change of state.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialCheckbox.prototype.onChange_ = function (event) {
    this.updateClasses_();
};
/**
   * Handle focus of element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialCheckbox.prototype.onFocus_ = function (event) {
    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle lost focus of element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialCheckbox.prototype.onBlur_ = function (event) {
    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle mouseup.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialCheckbox.prototype.onMouseUp_ = function (event) {
    this.blur_();
};
/**
   * Handle class updates.
   *
   * @private
   */
MaterialCheckbox.prototype.updateClasses_ = function () {
    this.checkDisabled();
    this.checkToggleState();
};
/**
   * Add blur.
   *
   * @private
   */
MaterialCheckbox.prototype.blur_ = function () {
    // TODO: figure out why there's a focus event being fired after our blur,
    // so that we can avoid this hack.
    window.setTimeout(function () {
        this.inputElement_.blur();
    }.bind(this), this.Constant_.TINY_TIMEOUT);
};
// Public methods.
/**
   * Check the inputs toggle state and update display.
   *
   * @public
   */
MaterialCheckbox.prototype.checkToggleState = function () {
    if (this.inputElement_.checked) {
        this.element_.classList.add(this.CssClasses_.IS_CHECKED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);
    }
};
MaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;
/**
   * Check the inputs disabled state and update display.
   *
   * @public
   */
MaterialCheckbox.prototype.checkDisabled = function () {
    if (this.inputElement_.disabled) {
        this.element_.classList.add(this.CssClasses_.IS_DISABLED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
    }
};
MaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;
/**
   * Disable checkbox.
   *
   * @public
   */
MaterialCheckbox.prototype.disable = function () {
    this.inputElement_.disabled = true;
    this.updateClasses_();
};
MaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;
/**
   * Enable checkbox.
   *
   * @public
   */
MaterialCheckbox.prototype.enable = function () {
    this.inputElement_.disabled = false;
    this.updateClasses_();
};
MaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;
/**
   * Check checkbox.
   *
   * @public
   */
MaterialCheckbox.prototype.check = function () {
    this.inputElement_.checked = true;
    this.updateClasses_();
};
MaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;
/**
   * Uncheck checkbox.
   *
   * @public
   */
MaterialCheckbox.prototype.uncheck = function () {
    this.inputElement_.checked = false;
    this.updateClasses_();
};
MaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;
/**
   * Initialize element.
   */
MaterialCheckbox.prototype.init = function () {
    if (this.element_) {
        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);
        var boxOutline = document.createElement('span');
        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);
        var tickContainer = document.createElement('span');
        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);
        var tickOutline = document.createElement('span');
        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);
        boxOutline.appendChild(tickOutline);
        this.element_.appendChild(tickContainer);
        this.element_.appendChild(boxOutline);
        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            this.rippleContainerElement_ = document.createElement('span');
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);
            this.boundRippleMouseUp = this.onMouseUp_.bind(this);
            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);
            var ripple = document.createElement('span');
            ripple.classList.add(this.CssClasses_.RIPPLE);
            this.rippleContainerElement_.appendChild(ripple);
            this.element_.appendChild(this.rippleContainerElement_);
        }
        this.boundInputOnChange = this.onChange_.bind(this);
        this.boundInputOnFocus = this.onFocus_.bind(this);
        this.boundInputOnBlur = this.onBlur_.bind(this);
        this.boundElementMouseUp = this.onMouseUp_.bind(this);
        this.inputElement_.addEventListener('change', this.boundInputOnChange);
        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);
        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);
        this.element_.addEventListener('mouseup', this.boundElementMouseUp);
        this.updateClasses_();
        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialCheckbox,
    classAsString: 'MaterialCheckbox',
    cssClass: 'mdl-js-checkbox',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for icon toggle MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialIconToggle = function MaterialIconToggle(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialIconToggle'] = MaterialIconToggle;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialIconToggle.prototype.CssClasses_ = {
    INPUT: 'mdl-icon-toggle__input',
    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',
    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',
    RIPPLE_CENTER: 'mdl-ripple--center',
    RIPPLE: 'mdl-ripple',
    IS_FOCUSED: 'is-focused',
    IS_DISABLED: 'is-disabled',
    IS_CHECKED: 'is-checked'
};
/**
   * Handle change of state.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialIconToggle.prototype.onChange_ = function (event) {
    this.updateClasses_();
};
/**
   * Handle focus of element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialIconToggle.prototype.onFocus_ = function (event) {
    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle lost focus of element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialIconToggle.prototype.onBlur_ = function (event) {
    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle mouseup.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialIconToggle.prototype.onMouseUp_ = function (event) {
    this.blur_();
};
/**
   * Handle class updates.
   *
   * @private
   */
MaterialIconToggle.prototype.updateClasses_ = function () {
    this.checkDisabled();
    this.checkToggleState();
};
/**
   * Add blur.
   *
   * @private
   */
MaterialIconToggle.prototype.blur_ = function () {
    // TODO: figure out why there's a focus event being fired after our blur,
    // so that we can avoid this hack.
    window.setTimeout(function () {
        this.inputElement_.blur();
    }.bind(this), this.Constant_.TINY_TIMEOUT);
};
// Public methods.
/**
   * Check the inputs toggle state and update display.
   *
   * @public
   */
MaterialIconToggle.prototype.checkToggleState = function () {
    if (this.inputElement_.checked) {
        this.element_.classList.add(this.CssClasses_.IS_CHECKED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);
    }
};
MaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;
/**
   * Check the inputs disabled state and update display.
   *
   * @public
   */
MaterialIconToggle.prototype.checkDisabled = function () {
    if (this.inputElement_.disabled) {
        this.element_.classList.add(this.CssClasses_.IS_DISABLED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
    }
};
MaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;
/**
   * Disable icon toggle.
   *
   * @public
   */
MaterialIconToggle.prototype.disable = function () {
    this.inputElement_.disabled = true;
    this.updateClasses_();
};
MaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;
/**
   * Enable icon toggle.
   *
   * @public
   */
MaterialIconToggle.prototype.enable = function () {
    this.inputElement_.disabled = false;
    this.updateClasses_();
};
MaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;
/**
   * Check icon toggle.
   *
   * @public
   */
MaterialIconToggle.prototype.check = function () {
    this.inputElement_.checked = true;
    this.updateClasses_();
};
MaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;
/**
   * Uncheck icon toggle.
   *
   * @public
   */
MaterialIconToggle.prototype.uncheck = function () {
    this.inputElement_.checked = false;
    this.updateClasses_();
};
MaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;
/**
   * Initialize element.
   */
MaterialIconToggle.prototype.init = function () {
    if (this.element_) {
        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);
        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            this.rippleContainerElement_ = document.createElement('span');
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);
            this.boundRippleMouseUp = this.onMouseUp_.bind(this);
            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);
            var ripple = document.createElement('span');
            ripple.classList.add(this.CssClasses_.RIPPLE);
            this.rippleContainerElement_.appendChild(ripple);
            this.element_.appendChild(this.rippleContainerElement_);
        }
        this.boundInputOnChange = this.onChange_.bind(this);
        this.boundInputOnFocus = this.onFocus_.bind(this);
        this.boundInputOnBlur = this.onBlur_.bind(this);
        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);
        this.inputElement_.addEventListener('change', this.boundInputOnChange);
        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);
        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);
        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);
        this.updateClasses_();
        this.element_.classList.add('is-upgraded');
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialIconToggle,
    classAsString: 'MaterialIconToggle',
    cssClass: 'mdl-js-icon-toggle',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for dropdown MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialMenu = function MaterialMenu(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialMenu'] = MaterialMenu;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialMenu.prototype.Constant_ = {
    // Total duration of the menu animation.
    TRANSITION_DURATION_SECONDS: 0.3,
    // The fraction of the total duration we want to use for menu item animations.
    TRANSITION_DURATION_FRACTION: 0.8,
    // How long the menu stays open after choosing an option (so the user can see
    // the ripple).
    CLOSE_TIMEOUT: 150
};
/**
   * Keycodes, for code readability.
   *
   * @enum {number}
   * @private
   */
MaterialMenu.prototype.Keycodes_ = {
    ENTER: 13,
    ESCAPE: 27,
    SPACE: 32,
    UP_ARROW: 38,
    DOWN_ARROW: 40
};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialMenu.prototype.CssClasses_ = {
    CONTAINER: 'mdl-menu__container',
    OUTLINE: 'mdl-menu__outline',
    ITEM: 'mdl-menu__item',
    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',
    RIPPLE_EFFECT: 'mdl-js-ripple-effect',
    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
    RIPPLE: 'mdl-ripple',
    // Statuses
    IS_UPGRADED: 'is-upgraded',
    IS_VISIBLE: 'is-visible',
    IS_ANIMATING: 'is-animating',
    // Alignment options
    BOTTOM_LEFT: 'mdl-menu--bottom-left',
    // This is the default.
    BOTTOM_RIGHT: 'mdl-menu--bottom-right',
    TOP_LEFT: 'mdl-menu--top-left',
    TOP_RIGHT: 'mdl-menu--top-right',
    UNALIGNED: 'mdl-menu--unaligned'
};
/**
   * Initialize element.
   */
MaterialMenu.prototype.init = function () {
    if (this.element_) {
        // Create container for the menu.
        var container = document.createElement('div');
        container.classList.add(this.CssClasses_.CONTAINER);
        this.element_.parentElement.insertBefore(container, this.element_);
        this.element_.parentElement.removeChild(this.element_);
        container.appendChild(this.element_);
        this.container_ = container;
        // Create outline for the menu (shadow and background).
        var outline = document.createElement('div');
        outline.classList.add(this.CssClasses_.OUTLINE);
        this.outline_ = outline;
        container.insertBefore(outline, this.element_);
        // Find the "for" element and bind events to it.
        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');
        var forEl = null;
        if (forElId) {
            forEl = document.getElementById(forElId);
            if (forEl) {
                this.forElement_ = forEl;
                forEl.addEventListener('click', this.handleForClick_.bind(this));
                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));
            }
        }
        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);
        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);
        this.boundItemClick_ = this.handleItemClick_.bind(this);
        for (var i = 0; i < items.length; i++) {
            // Add a listener to each menu item.
            items[i].addEventListener('click', this.boundItemClick_);
            // Add a tab index to each menu item.
            items[i].tabIndex = '-1';
            // Add a keyboard listener to each menu item.
            items[i].addEventListener('keydown', this.boundItemKeydown_);
        }
        // Add ripple classes to each item, if the user has enabled ripples.
        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            for (i = 0; i < items.length; i++) {
                var item = items[i];
                var rippleContainer = document.createElement('span');
                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);
                var ripple = document.createElement('span');
                ripple.classList.add(this.CssClasses_.RIPPLE);
                rippleContainer.appendChild(ripple);
                item.appendChild(rippleContainer);
                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);
            }
        }
        // Copy alignment classes to the container, so the outline can use them.
        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {
            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);
        }
        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {
            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);
        }
        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {
            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);
        }
        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {
            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);
        }
        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {
            this.outline_.classList.add(this.CssClasses_.UNALIGNED);
        }
        container.classList.add(this.CssClasses_.IS_UPGRADED);
    }
};
/**
   * Handles a click on the "for" element, by positioning the menu and then
   * toggling it.
   *
   * @param {Event} evt The event that fired.
   * @private
   */
MaterialMenu.prototype.handleForClick_ = function (evt) {
    if (this.element_ && this.forElement_) {
        var rect = this.forElement_.getBoundingClientRect();
        var forRect = this.forElement_.parentElement.getBoundingClientRect();
        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {
        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {
            // Position below the "for" element, aligned to its right.
            this.container_.style.right = forRect.right - rect.right + 'px';
            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';
        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {
            // Position above the "for" element, aligned to its left.
            this.container_.style.left = this.forElement_.offsetLeft + 'px';
            this.container_.style.bottom = forRect.bottom - rect.top + 'px';
        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {
            // Position above the "for" element, aligned to its right.
            this.container_.style.right = forRect.right - rect.right + 'px';
            this.container_.style.bottom = forRect.bottom - rect.top + 'px';
        } else {
            // Default: position below the "for" element, aligned to its left.
            this.container_.style.left = this.forElement_.offsetLeft + 'px';
            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';
        }
    }
    this.toggle(evt);
};
/**
   * Handles a keyboard event on the "for" element.
   *
   * @param {Event} evt The event that fired.
   * @private
   */
MaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {
    if (this.element_ && this.container_ && this.forElement_) {
        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');
        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {
            if (evt.keyCode === this.Keycodes_.UP_ARROW) {
                evt.preventDefault();
                items[items.length - 1].focus();
            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {
                evt.preventDefault();
                items[0].focus();
            }
        }
    }
};
/**
   * Handles a keyboard event on an item.
   *
   * @param {Event} evt The event that fired.
   * @private
   */
MaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {
    if (this.element_ && this.container_) {
        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');
        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {
            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);
            if (evt.keyCode === this.Keycodes_.UP_ARROW) {
                evt.preventDefault();
                if (currentIndex > 0) {
                    items[currentIndex - 1].focus();
                } else {
                    items[items.length - 1].focus();
                }
            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {
                evt.preventDefault();
                if (items.length > currentIndex + 1) {
                    items[currentIndex + 1].focus();
                } else {
                    items[0].focus();
                }
            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {
                evt.preventDefault();
                // Send mousedown and mouseup to trigger ripple.
                var e = new MouseEvent('mousedown');
                evt.target.dispatchEvent(e);
                e = new MouseEvent('mouseup');
                evt.target.dispatchEvent(e);
                // Send click.
                evt.target.click();
            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {
                evt.preventDefault();
                this.hide();
            }
        }
    }
};
/**
   * Handles a click event on an item.
   *
   * @param {Event} evt The event that fired.
   * @private
   */
MaterialMenu.prototype.handleItemClick_ = function (evt) {
    if (evt.target.hasAttribute('disabled')) {
        evt.stopPropagation();
    } else {
        // Wait some time before closing menu, so the user can see the ripple.
        this.closing_ = true;
        window.setTimeout(function (evt) {
            this.hide();
            this.closing_ = false;
        }.bind(this), this.Constant_.CLOSE_TIMEOUT);
    }
};
/**
   * Calculates the initial clip (for opening the menu) or final clip (for closing
   * it), and applies it. This allows us to animate from or to the correct point,
   * that is, the point it's aligned to in the "for" element.
   *
   * @param {number} height Height of the clip rectangle
   * @param {number} width Width of the clip rectangle
   * @private
   */
MaterialMenu.prototype.applyClip_ = function (height, width) {
    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {
        // Do not clip.
        this.element_.style.clip = '';
    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {
        // Clip to the top right corner of the menu.
        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';
    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {
        // Clip to the bottom left corner of the menu.
        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';
    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {
        // Clip to the bottom right corner of the menu.
        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';
    } else {
        // Default: do not clip (same as clipping to the top left corner).
        this.element_.style.clip = '';
    }
};
/**
   * Cleanup function to remove animation listeners.
   *
   * @param {Event} evt
   * @private
   */
MaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {
    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);
};
/**
   * Adds an event listener to clean up after the animation ends.
   *
   * @private
   */
MaterialMenu.prototype.addAnimationEndListener_ = function () {
    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);
    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);
};
/**
   * Displays the menu.
   *
   * @public
   */
MaterialMenu.prototype.show = function (evt) {
    if (this.element_ && this.container_ && this.outline_) {
        // Measure the inner element.
        var height = this.element_.getBoundingClientRect().height;
        var width = this.element_.getBoundingClientRect().width;
        // Apply the inner element's size to the container and outline.
        this.container_.style.width = width + 'px';
        this.container_.style.height = height + 'px';
        this.outline_.style.width = width + 'px';
        this.outline_.style.height = height + 'px';
        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;
        // Calculate transition delays for individual menu items, so that they fade
        // in one at a time.
        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);
        for (var i = 0; i < items.length; i++) {
            var itemDelay = null;
            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {
                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';
            } else {
                itemDelay = items[i].offsetTop / height * transitionDuration + 's';
            }
            items[i].style.transitionDelay = itemDelay;
        }
        // Apply the initial clip to the text before we start animating.
        this.applyClip_(height, width);
        // Wait for the next frame, turn on animation, and apply the final clip.
        // Also make it visible. This triggers the transitions.
        window.requestAnimationFrame(function () {
            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);
            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';
            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);
        }.bind(this));
        // Clean up after the animation is complete.
        this.addAnimationEndListener_();
        // Add a click listener to the document, to close the menu.
        var callback = function (e) {
            // Check to see if the document is processing the same event that
            // displayed the menu in the first place. If so, do nothing.
            // Also check to see if the menu is in the process of closing itself, and
            // do nothing in that case.
            // Also check if the clicked element is a menu item
            // if so, do nothing.
            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {
                document.removeEventListener('click', callback);
                this.hide();
            }
        }.bind(this);
        document.addEventListener('click', callback);
    }
};
MaterialMenu.prototype['show'] = MaterialMenu.prototype.show;
/**
   * Hides the menu.
   *
   * @public
   */
MaterialMenu.prototype.hide = function () {
    if (this.element_ && this.container_ && this.outline_) {
        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);
        // Remove all transition delays; menu items fade out concurrently.
        for (var i = 0; i < items.length; i++) {
            items[i].style.removeProperty('transition-delay');
        }
        // Measure the inner element.
        var rect = this.element_.getBoundingClientRect();
        var height = rect.height;
        var width = rect.width;
        // Turn on animation, and apply the final clip. Also make invisible.
        // This triggers the transitions.
        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);
        this.applyClip_(height, width);
        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);
        // Clean up after the animation is complete.
        this.addAnimationEndListener_();
    }
};
MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;
/**
   * Displays or hides the menu, depending on current state.
   *
   * @public
   */
MaterialMenu.prototype.toggle = function (evt) {
    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {
        this.hide();
    } else {
        this.show(evt);
    }
};
MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialMenu,
    classAsString: 'MaterialMenu',
    cssClass: 'mdl-js-menu',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Progress MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialProgress = function MaterialProgress(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialProgress'] = MaterialProgress;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialProgress.prototype.Constant_ = {};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };
/**
   * Set the current progress of the progressbar.
   *
   * @param {number} p Percentage of the progress (0-100)
   * @public
   */
MaterialProgress.prototype.setProgress = function (p) {
    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {
        return;
    }
    this.progressbar_.style.width = p + '%';
};
MaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;
/**
   * Set the current progress of the buffer.
   *
   * @param {number} p Percentage of the buffer (0-100)
   * @public
   */
MaterialProgress.prototype.setBuffer = function (p) {
    this.bufferbar_.style.width = p + '%';
    this.auxbar_.style.width = 100 - p + '%';
};
MaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;
/**
   * Initialize element.
   */
MaterialProgress.prototype.init = function () {
    if (this.element_) {
        var el = document.createElement('div');
        el.className = 'progressbar bar bar1';
        this.element_.appendChild(el);
        this.progressbar_ = el;
        el = document.createElement('div');
        el.className = 'bufferbar bar bar2';
        this.element_.appendChild(el);
        this.bufferbar_ = el;
        el = document.createElement('div');
        el.className = 'auxbar bar bar3';
        this.element_.appendChild(el);
        this.auxbar_ = el;
        this.progressbar_.style.width = '0%';
        this.bufferbar_.style.width = '100%';
        this.auxbar_.style.width = '0%';
        this.element_.classList.add('is-upgraded');
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialProgress,
    classAsString: 'MaterialProgress',
    cssClass: 'mdl-js-progress',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Radio MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialRadio = function MaterialRadio(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialRadio'] = MaterialRadio;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialRadio.prototype.CssClasses_ = {
    IS_FOCUSED: 'is-focused',
    IS_DISABLED: 'is-disabled',
    IS_CHECKED: 'is-checked',
    IS_UPGRADED: 'is-upgraded',
    JS_RADIO: 'mdl-js-radio',
    RADIO_BTN: 'mdl-radio__button',
    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',
    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',
    RIPPLE_EFFECT: 'mdl-js-ripple-effect',
    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',
    RIPPLE_CENTER: 'mdl-ripple--center',
    RIPPLE: 'mdl-ripple'
};
/**
   * Handle change of state.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialRadio.prototype.onChange_ = function (event) {
    // Since other radio buttons don't get change events, we need to look for
    // them to update their classes.
    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);
    for (var i = 0; i < radios.length; i++) {
        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);
        // Different name == different group, so no point updating those.
        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {
            radios[i]['MaterialRadio'].updateClasses_();
        }
    }
};
/**
   * Handle focus.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialRadio.prototype.onFocus_ = function (event) {
    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle lost focus.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialRadio.prototype.onBlur_ = function (event) {
    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle mouseup.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialRadio.prototype.onMouseup_ = function (event) {
    this.blur_();
};
/**
   * Update classes.
   *
   * @private
   */
MaterialRadio.prototype.updateClasses_ = function () {
    this.checkDisabled();
    this.checkToggleState();
};
/**
   * Add blur.
   *
   * @private
   */
MaterialRadio.prototype.blur_ = function () {
    // TODO: figure out why there's a focus event being fired after our blur,
    // so that we can avoid this hack.
    window.setTimeout(function () {
        this.btnElement_.blur();
    }.bind(this), this.Constant_.TINY_TIMEOUT);
};
// Public methods.
/**
   * Check the components disabled state.
   *
   * @public
   */
MaterialRadio.prototype.checkDisabled = function () {
    if (this.btnElement_.disabled) {
        this.element_.classList.add(this.CssClasses_.IS_DISABLED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
    }
};
MaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;
/**
   * Check the components toggled state.
   *
   * @public
   */
MaterialRadio.prototype.checkToggleState = function () {
    if (this.btnElement_.checked) {
        this.element_.classList.add(this.CssClasses_.IS_CHECKED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);
    }
};
MaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;
/**
   * Disable radio.
   *
   * @public
   */
MaterialRadio.prototype.disable = function () {
    this.btnElement_.disabled = true;
    this.updateClasses_();
};
MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;
/**
   * Enable radio.
   *
   * @public
   */
MaterialRadio.prototype.enable = function () {
    this.btnElement_.disabled = false;
    this.updateClasses_();
};
MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;
/**
   * Check radio.
   *
   * @public
   */
MaterialRadio.prototype.check = function () {
    this.btnElement_.checked = true;
    this.updateClasses_();
};
MaterialRadio.prototype['check'] = MaterialRadio.prototype.check;
/**
   * Uncheck radio.
   *
   * @public
   */
MaterialRadio.prototype.uncheck = function () {
    this.btnElement_.checked = false;
    this.updateClasses_();
};
MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;
/**
   * Initialize element.
   */
MaterialRadio.prototype.init = function () {
    if (this.element_) {
        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);
        this.boundChangeHandler_ = this.onChange_.bind(this);
        this.boundFocusHandler_ = this.onChange_.bind(this);
        this.boundBlurHandler_ = this.onBlur_.bind(this);
        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);
        var outerCircle = document.createElement('span');
        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);
        var innerCircle = document.createElement('span');
        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);
        this.element_.appendChild(outerCircle);
        this.element_.appendChild(innerCircle);
        var rippleContainer;
        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            rippleContainer = document.createElement('span');
            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);
            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);
            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);
            var ripple = document.createElement('span');
            ripple.classList.add(this.CssClasses_.RIPPLE);
            rippleContainer.appendChild(ripple);
            this.element_.appendChild(rippleContainer);
        }
        this.btnElement_.addEventListener('change', this.boundChangeHandler_);
        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);
        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);
        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);
        this.updateClasses_();
        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialRadio,
    classAsString: 'MaterialRadio',
    cssClass: 'mdl-js-radio',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Slider MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialSlider = function MaterialSlider(element) {
    this.element_ = element;
    // Browser feature detection.
    this.isIE_ = window.navigator.msPointerEnabled;
    // Initialize instance.
    this.init();
};
window['MaterialSlider'] = MaterialSlider;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialSlider.prototype.Constant_ = {};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialSlider.prototype.CssClasses_ = {
    IE_CONTAINER: 'mdl-slider__ie-container',
    SLIDER_CONTAINER: 'mdl-slider__container',
    BACKGROUND_FLEX: 'mdl-slider__background-flex',
    BACKGROUND_LOWER: 'mdl-slider__background-lower',
    BACKGROUND_UPPER: 'mdl-slider__background-upper',
    IS_LOWEST_VALUE: 'is-lowest-value',
    IS_UPGRADED: 'is-upgraded'
};
/**
   * Handle input on element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialSlider.prototype.onInput_ = function (event) {
    this.updateValueStyles_();
};
/**
   * Handle change on element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialSlider.prototype.onChange_ = function (event) {
    this.updateValueStyles_();
};
/**
   * Handle mouseup on element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialSlider.prototype.onMouseUp_ = function (event) {
    event.target.blur();
};
/**
   * Handle mousedown on container element.
   * This handler is purpose is to not require the use to click
   * exactly on the 2px slider element, as FireFox seems to be very
   * strict about this.
   *
   * @param {Event} event The event that fired.
   * @private
   * @suppress {missingProperties}
   */
MaterialSlider.prototype.onContainerMouseDown_ = function (event) {
    // If this click is not on the parent element (but rather some child)
    // ignore. It may still bubble up.
    if (event.target !== this.element_.parentElement) {
        return;
    }
    // Discard the original event and create a new event that
    // is on the slider element.
    event.preventDefault();
    var newEvent = new MouseEvent('mousedown', {
        target: event.target,
        buttons: event.buttons,
        clientX: event.clientX,
        clientY: this.element_.getBoundingClientRect().y
    });
    this.element_.dispatchEvent(newEvent);
};
/**
   * Handle updating of values.
   *
   * @private
   */
MaterialSlider.prototype.updateValueStyles_ = function () {
    // Calculate and apply percentages to div structure behind slider.
    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);
    if (fraction === 0) {
        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);
    }
    if (!this.isIE_) {
        this.backgroundLower_.style.flex = fraction;
        this.backgroundLower_.style.webkitFlex = fraction;
        this.backgroundUpper_.style.flex = 1 - fraction;
        this.backgroundUpper_.style.webkitFlex = 1 - fraction;
    }
};
// Public methods.
/**
   * Disable slider.
   *
   * @public
   */
MaterialSlider.prototype.disable = function () {
    this.element_.disabled = true;
};
MaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;
/**
   * Enable slider.
   *
   * @public
   */
MaterialSlider.prototype.enable = function () {
    this.element_.disabled = false;
};
MaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;
/**
   * Update slider value.
   *
   * @param {number} value The value to which to set the control (optional).
   * @public
   */
MaterialSlider.prototype.change = function (value) {
    if (typeof value !== 'undefined') {
        this.element_.value = value;
    }
    this.updateValueStyles_();
};
MaterialSlider.prototype['change'] = MaterialSlider.prototype.change;
/**
   * Initialize element.
   */
MaterialSlider.prototype.init = function () {
    if (this.element_) {
        if (this.isIE_) {
            // Since we need to specify a very large height in IE due to
            // implementation limitations, we add a parent here that trims it down to
            // a reasonable size.
            var containerIE = document.createElement('div');
            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);
            this.element_.parentElement.insertBefore(containerIE, this.element_);
            this.element_.parentElement.removeChild(this.element_);
            containerIE.appendChild(this.element_);
        } else {
            // For non-IE browsers, we need a div structure that sits behind the
            // slider and allows us to style the left and right sides of it with
            // different colors.
            var container = document.createElement('div');
            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);
            this.element_.parentElement.insertBefore(container, this.element_);
            this.element_.parentElement.removeChild(this.element_);
            container.appendChild(this.element_);
            var backgroundFlex = document.createElement('div');
            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);
            container.appendChild(backgroundFlex);
            this.backgroundLower_ = document.createElement('div');
            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);
            backgroundFlex.appendChild(this.backgroundLower_);
            this.backgroundUpper_ = document.createElement('div');
            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);
            backgroundFlex.appendChild(this.backgroundUpper_);
        }
        this.boundInputHandler = this.onInput_.bind(this);
        this.boundChangeHandler = this.onChange_.bind(this);
        this.boundMouseUpHandler = this.onMouseUp_.bind(this);
        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);
        this.element_.addEventListener('input', this.boundInputHandler);
        this.element_.addEventListener('change', this.boundChangeHandler);
        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);
        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);
        this.updateValueStyles_();
        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialSlider,
    classAsString: 'MaterialSlider',
    cssClass: 'mdl-js-slider',
    widget: true
});
/**
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Snackbar MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialSnackbar = function MaterialSnackbar(element) {
    this.element_ = element;
    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);
    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);
    if (!this.textElement_) {
        throw new Error('There must be a message element for a snackbar.');
    }
    if (!this.actionElement_) {
        throw new Error('There must be an action element for a snackbar.');
    }
    this.active = false;
    this.actionHandler_ = undefined;
    this.message_ = undefined;
    this.actionText_ = undefined;
    this.queuedNotifications_ = [];
    this.setActionHidden_(true);
};
window['MaterialSnackbar'] = MaterialSnackbar;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialSnackbar.prototype.Constant_ = {
    // The duration of the snackbar show/hide animation, in ms.
    ANIMATION_LENGTH: 250
};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialSnackbar.prototype.cssClasses_ = {
    SNACKBAR: 'mdl-snackbar',
    MESSAGE: 'mdl-snackbar__text',
    ACTION: 'mdl-snackbar__action',
    ACTIVE: 'mdl-snackbar--active'
};
/**
   * Display the snackbar.
   *
   * @private
   */
MaterialSnackbar.prototype.displaySnackbar_ = function () {
    this.element_.setAttribute('aria-hidden', 'true');
    if (this.actionHandler_) {
        this.actionElement_.textContent = this.actionText_;
        this.actionElement_.addEventListener('click', this.actionHandler_);
        this.setActionHidden_(false);
    }
    this.textElement_.textContent = this.message_;
    this.element_.classList.add(this.cssClasses_.ACTIVE);
    this.element_.setAttribute('aria-hidden', 'false');
    setTimeout(this.cleanup_.bind(this), this.timeout_);
};
/**
   * Show the snackbar.
   *
   * @param {Object} data The data for the notification.
   * @public
   */
MaterialSnackbar.prototype.showSnackbar = function (data) {
    if (data === undefined) {
        throw new Error('Please provide a data object with at least a message to display.');
    }
    if (data['message'] === undefined) {
        throw new Error('Please provide a message to be displayed.');
    }
    if (data['actionHandler'] && !data['actionText']) {
        throw new Error('Please provide action text with the handler.');
    }
    if (this.active) {
        this.queuedNotifications_.push(data);
    } else {
        this.active = true;
        this.message_ = data['message'];
        if (data['timeout']) {
            this.timeout_ = data['timeout'];
        } else {
            this.timeout_ = 2750;
        }
        if (data['actionHandler']) {
            this.actionHandler_ = data['actionHandler'];
        }
        if (data['actionText']) {
            this.actionText_ = data['actionText'];
        }
        this.displaySnackbar_();
    }
};
MaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;
/**
   * Check if the queue has items within it.
   * If it does, display the next entry.
   *
   * @private
   */
MaterialSnackbar.prototype.checkQueue_ = function () {
    if (this.queuedNotifications_.length > 0) {
        this.showSnackbar(this.queuedNotifications_.shift());
    }
};
/**
   * Cleanup the snackbar event listeners and accessiblity attributes.
   *
   * @private
   */
MaterialSnackbar.prototype.cleanup_ = function () {
    this.element_.classList.remove(this.cssClasses_.ACTIVE);
    setTimeout(function () {
        this.element_.setAttribute('aria-hidden', 'true');
        this.textElement_.textContent = '';
        if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {
            this.setActionHidden_(true);
            this.actionElement_.textContent = '';
            this.actionElement_.removeEventListener('click', this.actionHandler_);
        }
        this.actionHandler_ = undefined;
        this.message_ = undefined;
        this.actionText_ = undefined;
        this.active = false;
        this.checkQueue_();
    }.bind(this), this.Constant_.ANIMATION_LENGTH);
};
/**
   * Set the action handler hidden state.
   *
   * @param {boolean} value
   * @private
   */
MaterialSnackbar.prototype.setActionHidden_ = function (value) {
    if (value) {
        this.actionElement_.setAttribute('aria-hidden', 'true');
    } else {
        this.actionElement_.removeAttribute('aria-hidden');
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialSnackbar,
    classAsString: 'MaterialSnackbar',
    cssClass: 'mdl-js-snackbar',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Spinner MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @param {HTMLElement} element The element that will be upgraded.
   * @constructor
   */
var MaterialSpinner = function MaterialSpinner(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialSpinner'] = MaterialSpinner;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialSpinner.prototype.CssClasses_ = {
    MDL_SPINNER_LAYER: 'mdl-spinner__layer',
    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',
    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',
    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',
    MDL_SPINNER_LEFT: 'mdl-spinner__left',
    MDL_SPINNER_RIGHT: 'mdl-spinner__right'
};
/**
   * Auxiliary method to create a spinner layer.
   *
   * @param {number} index Index of the layer to be created.
   * @public
   */
MaterialSpinner.prototype.createLayer = function (index) {
    var layer = document.createElement('div');
    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);
    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);
    var leftClipper = document.createElement('div');
    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);
    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);
    var gapPatch = document.createElement('div');
    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);
    var rightClipper = document.createElement('div');
    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);
    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);
    var circleOwners = [
        leftClipper,
        gapPatch,
        rightClipper
    ];
    for (var i = 0; i < circleOwners.length; i++) {
        var circle = document.createElement('div');
        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);
        circleOwners[i].appendChild(circle);
    }
    layer.appendChild(leftClipper);
    layer.appendChild(gapPatch);
    layer.appendChild(rightClipper);
    this.element_.appendChild(layer);
};
MaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;
/**
   * Stops the spinner animation.
   * Public method for users who need to stop the spinner for any reason.
   *
   * @public
   */
MaterialSpinner.prototype.stop = function () {
    this.element_.classList.remove('is-active');
};
MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;
/**
   * Starts the spinner animation.
   * Public method for users who need to manually start the spinner for any reason
   * (instead of just adding the 'is-active' class to their markup).
   *
   * @public
   */
MaterialSpinner.prototype.start = function () {
    this.element_.classList.add('is-active');
};
MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;
/**
   * Initialize element.
   */
MaterialSpinner.prototype.init = function () {
    if (this.element_) {
        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {
            this.createLayer(i);
        }
        this.element_.classList.add('is-upgraded');
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialSpinner,
    classAsString: 'MaterialSpinner',
    cssClass: 'mdl-js-spinner',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Checkbox MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialSwitch = function MaterialSwitch(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialSwitch'] = MaterialSwitch;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialSwitch.prototype.CssClasses_ = {
    INPUT: 'mdl-switch__input',
    TRACK: 'mdl-switch__track',
    THUMB: 'mdl-switch__thumb',
    FOCUS_HELPER: 'mdl-switch__focus-helper',
    RIPPLE_EFFECT: 'mdl-js-ripple-effect',
    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',
    RIPPLE_CENTER: 'mdl-ripple--center',
    RIPPLE: 'mdl-ripple',
    IS_FOCUSED: 'is-focused',
    IS_DISABLED: 'is-disabled',
    IS_CHECKED: 'is-checked'
};
/**
   * Handle change of state.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialSwitch.prototype.onChange_ = function (event) {
    this.updateClasses_();
};
/**
   * Handle focus of element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialSwitch.prototype.onFocus_ = function (event) {
    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle lost focus of element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialSwitch.prototype.onBlur_ = function (event) {
    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle mouseup.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialSwitch.prototype.onMouseUp_ = function (event) {
    this.blur_();
};
/**
   * Handle class updates.
   *
   * @private
   */
MaterialSwitch.prototype.updateClasses_ = function () {
    this.checkDisabled();
    this.checkToggleState();
};
/**
   * Add blur.
   *
   * @private
   */
MaterialSwitch.prototype.blur_ = function () {
    // TODO: figure out why there's a focus event being fired after our blur,
    // so that we can avoid this hack.
    window.setTimeout(function () {
        this.inputElement_.blur();
    }.bind(this), this.Constant_.TINY_TIMEOUT);
};
// Public methods.
/**
   * Check the components disabled state.
   *
   * @public
   */
MaterialSwitch.prototype.checkDisabled = function () {
    if (this.inputElement_.disabled) {
        this.element_.classList.add(this.CssClasses_.IS_DISABLED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
    }
};
MaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;
/**
   * Check the components toggled state.
   *
   * @public
   */
MaterialSwitch.prototype.checkToggleState = function () {
    if (this.inputElement_.checked) {
        this.element_.classList.add(this.CssClasses_.IS_CHECKED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);
    }
};
MaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;
/**
   * Disable switch.
   *
   * @public
   */
MaterialSwitch.prototype.disable = function () {
    this.inputElement_.disabled = true;
    this.updateClasses_();
};
MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;
/**
   * Enable switch.
   *
   * @public
   */
MaterialSwitch.prototype.enable = function () {
    this.inputElement_.disabled = false;
    this.updateClasses_();
};
MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;
/**
   * Activate switch.
   *
   * @public
   */
MaterialSwitch.prototype.on = function () {
    this.inputElement_.checked = true;
    this.updateClasses_();
};
MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;
/**
   * Deactivate switch.
   *
   * @public
   */
MaterialSwitch.prototype.off = function () {
    this.inputElement_.checked = false;
    this.updateClasses_();
};
MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;
/**
   * Initialize element.
   */
MaterialSwitch.prototype.init = function () {
    if (this.element_) {
        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);
        var track = document.createElement('div');
        track.classList.add(this.CssClasses_.TRACK);
        var thumb = document.createElement('div');
        thumb.classList.add(this.CssClasses_.THUMB);
        var focusHelper = document.createElement('span');
        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);
        thumb.appendChild(focusHelper);
        this.element_.appendChild(track);
        this.element_.appendChild(thumb);
        this.boundMouseUpHandler = this.onMouseUp_.bind(this);
        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            this.rippleContainerElement_ = document.createElement('span');
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);
            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);
            var ripple = document.createElement('span');
            ripple.classList.add(this.CssClasses_.RIPPLE);
            this.rippleContainerElement_.appendChild(ripple);
            this.element_.appendChild(this.rippleContainerElement_);
        }
        this.boundChangeHandler = this.onChange_.bind(this);
        this.boundFocusHandler = this.onFocus_.bind(this);
        this.boundBlurHandler = this.onBlur_.bind(this);
        this.inputElement_.addEventListener('change', this.boundChangeHandler);
        this.inputElement_.addEventListener('focus', this.boundFocusHandler);
        this.inputElement_.addEventListener('blur', this.boundBlurHandler);
        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);
        this.updateClasses_();
        this.element_.classList.add('is-upgraded');
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialSwitch,
    classAsString: 'MaterialSwitch',
    cssClass: 'mdl-js-switch',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Tabs MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {Element} element The element that will be upgraded.
   */
var MaterialTabs = function MaterialTabs(element) {
    // Stores the HTML element.
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialTabs'] = MaterialTabs;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string}
   * @private
   */
MaterialTabs.prototype.Constant_ = {};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialTabs.prototype.CssClasses_ = {
    TAB_CLASS: 'mdl-tabs__tab',
    PANEL_CLASS: 'mdl-tabs__panel',
    ACTIVE_CLASS: 'is-active',
    UPGRADED_CLASS: 'is-upgraded',
    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',
    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',
    MDL_RIPPLE: 'mdl-ripple',
    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'
};
/**
   * Handle clicks to a tabs component
   *
   * @private
   */
MaterialTabs.prototype.initTabs_ = function () {
    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {
        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);
    }
    // Select element tabs, document panels
    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);
    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);
    // Create new tabs for each tab element
    for (var i = 0; i < this.tabs_.length; i++) {
        new MaterialTab(this.tabs_[i], this);
    }
    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);
};
/**
   * Reset tab state, dropping active classes
   *
   * @private
   */
MaterialTabs.prototype.resetTabState_ = function () {
    for (var k = 0; k < this.tabs_.length; k++) {
        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);
    }
};
/**
   * Reset panel state, droping active classes
   *
   * @private
   */
MaterialTabs.prototype.resetPanelState_ = function () {
    for (var j = 0; j < this.panels_.length; j++) {
        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);
    }
};
/**
   * Initialize element.
   */
MaterialTabs.prototype.init = function () {
    if (this.element_) {
        this.initTabs_();
    }
};
/**
   * Constructor for an individual tab.
   *
   * @constructor
   * @param {Element} tab The HTML element for the tab.
   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.
   */
function MaterialTab(tab, ctx) {
    if (tab) {
        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {
            var rippleContainer = document.createElement('span');
            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);
            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);
            var ripple = document.createElement('span');
            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);
            rippleContainer.appendChild(ripple);
            tab.appendChild(rippleContainer);
        }
        tab.addEventListener('click', function (e) {
            e.preventDefault();
            var href = tab.href.split('#')[1];
            var panel = ctx.element_.querySelector('#' + href);
            ctx.resetTabState_();
            ctx.resetPanelState_();
            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);
            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);
        });
    }
}
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialTabs,
    classAsString: 'MaterialTabs',
    cssClass: 'mdl-js-tabs'
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Textfield MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialTextfield = function MaterialTextfield(element) {
    this.element_ = element;
    this.maxRows = this.Constant_.NO_MAX_ROWS;
    // Initialize instance.
    this.init();
};
window['MaterialTextfield'] = MaterialTextfield;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialTextfield.prototype.Constant_ = {
    NO_MAX_ROWS: -1,
    MAX_ROWS_ATTRIBUTE: 'maxrows'
};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialTextfield.prototype.CssClasses_ = {
    LABEL: 'mdl-textfield__label',
    INPUT: 'mdl-textfield__input',
    IS_DIRTY: 'is-dirty',
    IS_FOCUSED: 'is-focused',
    IS_DISABLED: 'is-disabled',
    IS_INVALID: 'is-invalid',
    IS_UPGRADED: 'is-upgraded',
    HAS_PLACEHOLDER: 'has-placeholder'
};
/**
   * Handle input being entered.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialTextfield.prototype.onKeyDown_ = function (event) {
    var currentRowCount = event.target.value.split('\n').length;
    if (event.keyCode === 13) {
        if (currentRowCount >= this.maxRows) {
            event.preventDefault();
        }
    }
};
/**
   * Handle focus.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialTextfield.prototype.onFocus_ = function (event) {
    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle lost focus.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialTextfield.prototype.onBlur_ = function (event) {
    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
};
/**
   * Handle reset event from out side.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialTextfield.prototype.onReset_ = function (event) {
    this.updateClasses_();
};
/**
   * Handle class updates.
   *
   * @private
   */
MaterialTextfield.prototype.updateClasses_ = function () {
    this.checkDisabled();
    this.checkValidity();
    this.checkDirty();
    this.checkFocus();
};
// Public methods.
/**
   * Check the disabled state and update field accordingly.
   *
   * @public
   */
MaterialTextfield.prototype.checkDisabled = function () {
    if (this.input_.disabled) {
        this.element_.classList.add(this.CssClasses_.IS_DISABLED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
    }
};
MaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;
/**
  * Check the focus state and update field accordingly.
  *
  * @public
  */
MaterialTextfield.prototype.checkFocus = function () {
    if (Boolean(this.element_.querySelector(':focus'))) {
        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
    }
};
MaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;
/**
   * Check the validity state and update field accordingly.
   *
   * @public
   */
MaterialTextfield.prototype.checkValidity = function () {
    if (this.input_.validity) {
        if (this.input_.validity.valid) {
            this.element_.classList.remove(this.CssClasses_.IS_INVALID);
        } else {
            this.element_.classList.add(this.CssClasses_.IS_INVALID);
        }
    }
};
MaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;
/**
   * Check the dirty state and update field accordingly.
   *
   * @public
   */
MaterialTextfield.prototype.checkDirty = function () {
    if (this.input_.value && this.input_.value.length > 0) {
        this.element_.classList.add(this.CssClasses_.IS_DIRTY);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);
    }
};
MaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;
/**
   * Disable text field.
   *
   * @public
   */
MaterialTextfield.prototype.disable = function () {
    this.input_.disabled = true;
    this.updateClasses_();
};
MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;
/**
   * Enable text field.
   *
   * @public
   */
MaterialTextfield.prototype.enable = function () {
    this.input_.disabled = false;
    this.updateClasses_();
};
MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;
/**
   * Update text field value.
   *
   * @param {string} value The value to which to set the control (optional).
   * @public
   */
MaterialTextfield.prototype.change = function (value) {
    this.input_.value = value || '';
    this.updateClasses_();
};
MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;
/**
   * Initialize element.
   */
MaterialTextfield.prototype.init = function () {
    if (this.element_) {
        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);
        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);
        if (this.input_) {
            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {
                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);
                if (isNaN(this.maxRows)) {
                    this.maxRows = this.Constant_.NO_MAX_ROWS;
                }
            }
            if (this.input_.hasAttribute('placeholder')) {
                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);
            }
            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);
            this.boundFocusHandler = this.onFocus_.bind(this);
            this.boundBlurHandler = this.onBlur_.bind(this);
            this.boundResetHandler = this.onReset_.bind(this);
            this.input_.addEventListener('input', this.boundUpdateClassesHandler);
            this.input_.addEventListener('focus', this.boundFocusHandler);
            this.input_.addEventListener('blur', this.boundBlurHandler);
            this.input_.addEventListener('reset', this.boundResetHandler);
            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {
                // TODO: This should handle pasting multi line text.
                // Currently doesn't.
                this.boundKeyDownHandler = this.onKeyDown_.bind(this);
                this.input_.addEventListener('keydown', this.boundKeyDownHandler);
            }
            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);
            this.updateClasses_();
            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
            if (invalid) {
                this.element_.classList.add(this.CssClasses_.IS_INVALID);
            }
            if (this.input_.hasAttribute('autofocus')) {
                this.element_.focus();
                this.checkFocus();
            }
        }
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialTextfield,
    classAsString: 'MaterialTextfield',
    cssClass: 'mdl-js-textfield',
    widget: true
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Tooltip MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialTooltip = function MaterialTooltip(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialTooltip'] = MaterialTooltip;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialTooltip.prototype.Constant_ = {};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialTooltip.prototype.CssClasses_ = {
    IS_ACTIVE: 'is-active',
    BOTTOM: 'mdl-tooltip--bottom',
    LEFT: 'mdl-tooltip--left',
    RIGHT: 'mdl-tooltip--right',
    TOP: 'mdl-tooltip--top'
};
/**
   * Handle mouseenter for tooltip.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialTooltip.prototype.handleMouseEnter_ = function (event) {
    var props = event.target.getBoundingClientRect();
    var left = props.left + props.width / 2;
    var top = props.top + props.height / 2;
    var marginLeft = -1 * (this.element_.offsetWidth / 2);
    var marginTop = -1 * (this.element_.offsetHeight / 2);
    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {
        left = props.width / 2;
        if (top + marginTop < 0) {
            this.element_.style.top = 0;
            this.element_.style.marginTop = 0;
        } else {
            this.element_.style.top = top + 'px';
            this.element_.style.marginTop = marginTop + 'px';
        }
    } else {
        if (left + marginLeft < 0) {
            this.element_.style.left = 0;
            this.element_.style.marginLeft = 0;
        } else {
            this.element_.style.left = left + 'px';
            this.element_.style.marginLeft = marginLeft + 'px';
        }
    }
    if (this.element_.classList.contains(this.CssClasses_.TOP)) {
        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';
    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {
        this.element_.style.left = props.left + props.width + 10 + 'px';
    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {
        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';
    } else {
        this.element_.style.top = props.top + props.height + 10 + 'px';
    }
    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);
};
/**
   * Handle mouseleave for tooltip.
   *
   * @private
   */
MaterialTooltip.prototype.handleMouseLeave_ = function () {
    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);
};
/**
   * Initialize element.
   */
MaterialTooltip.prototype.init = function () {
    if (this.element_) {
        var forElId = this.element_.getAttribute('for');
        if (forElId) {
            this.forElement_ = document.getElementById(forElId);
        }
        if (this.forElement_) {
            // It's left here because it prevents accidental text selection on Android
            if (!this.forElement_.hasAttribute('tabindex')) {
                this.forElement_.setAttribute('tabindex', '0');
            }
            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);
            this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);
            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);
            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);
            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler, false);
            window.addEventListener('touchstart', this.boundMouseLeaveHandler);
        }
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialTooltip,
    classAsString: 'MaterialTooltip',
    cssClass: 'mdl-tooltip'
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Layout MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialLayout = function MaterialLayout(element) {
    this.element_ = element;
    this.innerContainer_ = element.querySelector('.' + this.CssClasses_.INNER_CONTAINER);
    // Initialize instance.
    this.init();
};
window['MaterialLayout'] = MaterialLayout;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialLayout.prototype.Constant_ = {
    MAX_WIDTH: '(max-width: 1024px)',
    TAB_SCROLL_PIXELS: 100,
    RESIZE_TIMEOUT: 100,
    MENU_ICON: '&#xE5D2;',
    CHEVRON_LEFT: 'chevron_left',
    CHEVRON_RIGHT: 'chevron_right'
};
/**
   * Keycodes, for code readability.
   *
   * @enum {number}
   * @private
   */
MaterialLayout.prototype.Keycodes_ = {
    ENTER: 13,
    ESCAPE: 27,
    SPACE: 32
};
/**
   * Modes.
   *
   * @enum {number}
   * @private
   */
MaterialLayout.prototype.Mode_ = {
    STANDARD: 0,
    SEAMED: 1,
    WATERFALL: 2,
    SCROLL: 3
};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialLayout.prototype.CssClasses_ = {
    INNER_CONTAINER: 'mdl-layout__inner-container',
    HEADER: 'mdl-layout__header',
    DRAWER: 'mdl-layout__drawer',
    CONTENT: 'mdl-layout__content',
    DRAWER_BTN: 'mdl-layout__drawer-button',
    ICON: 'material-icons',
    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',
    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',
    RIPPLE: 'mdl-ripple',
    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
    HEADER_SEAMED: 'mdl-layout__header--seamed',
    HEADER_WATERFALL: 'mdl-layout__header--waterfall',
    HEADER_SCROLL: 'mdl-layout__header--scroll',
    FIXED_HEADER: 'mdl-layout--fixed-header',
    OBFUSCATOR: 'mdl-layout__obfuscator',
    TAB_BAR: 'mdl-layout__tab-bar',
    TAB_CONTAINER: 'mdl-layout__tab-bar-container',
    TAB: 'mdl-layout__tab',
    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',
    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',
    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',
    PANEL: 'mdl-layout__tab-panel',
    HAS_DRAWER: 'has-drawer',
    HAS_TABS: 'has-tabs',
    HAS_SCROLLING_HEADER: 'has-scrolling-header',
    CASTING_SHADOW: 'is-casting-shadow',
    IS_COMPACT: 'is-compact',
    IS_SMALL_SCREEN: 'is-small-screen',
    IS_DRAWER_OPEN: 'is-visible',
    IS_ACTIVE: 'is-active',
    IS_UPGRADED: 'is-upgraded',
    IS_ANIMATING: 'is-animating',
    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',
    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'
};
/**
   * Handles scrolling on the content.
   *
   * @private
   */
MaterialLayout.prototype.contentScrollHandler_ = function () {
    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {
        return;
    }
    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);
    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {
        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);
        this.header_.classList.add(this.CssClasses_.IS_COMPACT);
        if (headerVisible) {
            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);
        }
    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {
        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);
        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);
        if (headerVisible) {
            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);
        }
    }
};
/**
   * Handles a keyboard event on the drawer.
   *
   * @param {Event} evt The event that fired.
   * @private
   */
MaterialLayout.prototype.keyboardEventHandler_ = function (evt) {
    // Only react when the drawer is open.
    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {
        this.toggleDrawer();
    }
};
/**
   * Handles changes in screen size.
   *
   * @private
   */
MaterialLayout.prototype.screenSizeHandler_ = function () {
    if (this.screenSizeMediaQuery_.matches) {
        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);
    } else {
        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);
        // Collapse drawer (if any) when moving to a large screen size.
        if (this.drawer_) {
            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);
            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);
        }
    }
};
/**
   * Handles events of drawer button.
   *
   * @param {Event} evt The event that fired.
   * @private
   */
MaterialLayout.prototype.drawerToggleHandler_ = function (evt) {
    if (evt && evt.type === 'keydown') {
        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {
            // prevent scrolling in drawer nav
            evt.preventDefault();
        } else {
            // prevent other keys
            return;
        }
    }
    this.toggleDrawer();
};
/**
   * Handles (un)setting the `is-animating` class
   *
   * @private
   */
MaterialLayout.prototype.headerTransitionEndHandler_ = function () {
    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);
};
/**
   * Handles expanding the header on click
   *
   * @private
   */
MaterialLayout.prototype.headerClickHandler_ = function () {
    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {
        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);
        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);
    }
};
/**
   * Reset tab state, dropping active classes
   *
   * @private
   */
MaterialLayout.prototype.resetTabState_ = function (tabBar) {
    for (var k = 0; k < tabBar.length; k++) {
        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);
    }
};
/**
   * Reset panel state, droping active classes
   *
   * @private
   */
MaterialLayout.prototype.resetPanelState_ = function (panels) {
    for (var j = 0; j < panels.length; j++) {
        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);
    }
};
/**
  * Toggle drawer state
  *
  * @public
  */
MaterialLayout.prototype.toggleDrawer = function () {
    var drawerButton = this.innerContainer_.querySelector('.' + this.CssClasses_.DRAWER_BTN);
    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);
    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);
    // Set accessibility properties.
    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {
        this.drawer_.setAttribute('aria-hidden', 'false');
        drawerButton.setAttribute('aria-expanded', 'true');
    } else {
        this.drawer_.setAttribute('aria-hidden', 'true');
        drawerButton.setAttribute('aria-expanded', 'false');
    }
};
MaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;
/**
   * Initialize element.
   */
MaterialLayout.prototype.init = function () {
    if (this.element_) {
        var focusedElement = this.element_.querySelector(':focus');
        if (focusedElement) {
            focusedElement.focus();
        }
        var directChildren = this.innerContainer_.childNodes;
        var numChildren = directChildren.length;
        for (var c = 0; c < numChildren; c++) {
            var child = directChildren[c];
            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {
                this.header_ = child;
            }
            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {
                this.drawer_ = child;
            }
            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {
                this.content_ = child;
            }
        }
        window.addEventListener('pageshow', function (e) {
            if (e.persisted) {
                // when page is loaded from back/forward cache
                // trigger repaint to let layout scroll in safari
                this.innerContainer_.style.overflowY = 'hidden';
                requestAnimationFrame(function () {
                    this.innerContainer_.style.overflowY = '';
                }.bind(this));
            }
        }.bind(this), false);
        if (this.header_) {
            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);
        }
        var mode = this.Mode_.STANDARD;
        if (this.header_) {
            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {
                mode = this.Mode_.SEAMED;
            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {
                mode = this.Mode_.WATERFALL;
                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));
                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));
            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {
                mode = this.Mode_.SCROLL;
                this.element_.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);
            }
            if (mode === this.Mode_.STANDARD) {
                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);
                if (this.tabBar_) {
                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);
                }
            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {
                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);
                if (this.tabBar_) {
                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);
                }
            } else if (mode === this.Mode_.WATERFALL) {
                // Add and remove shadows depending on scroll position.
                // Also add/remove auxiliary class for styling of the compact version of
                // the header.
                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));
                this.contentScrollHandler_();
            }
        }
        // Add drawer toggling button to our layout, if we have an openable drawer.
        if (this.drawer_) {
            var drawerButton = document.createElement('div');
            drawerButton.setAttribute('aria-expanded', 'false');
            drawerButton.setAttribute('role', 'button');
            drawerButton.setAttribute('tabindex', '0');
            drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);
            var drawerButtonIcon = document.createElement('i');
            drawerButtonIcon.classList.add(this.CssClasses_.ICON);
            drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;
            drawerButton.appendChild(drawerButtonIcon);
            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {
                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.
                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);
            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {
                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.
                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);
            }
            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));
            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));
            // Add a class if the layout has a drawer, for altering the left padding.
            // Adds the HAS_DRAWER to the elements since this.header_ may or may
            // not be present.
            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);
            // If we have a fixed header, add the button to the header rather than
            // the layout.
            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {
                this.header_.insertBefore(drawerButton, this.header_.firstChild);
            } else {
                this.innerContainer_.insertBefore(drawerButton, this.content_);
            }
            var obfuscator = document.createElement('div');
            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);
            this.innerContainer_.appendChild(obfuscator);
            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));
            this.obfuscator_ = obfuscator;
            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));
            this.drawer_.setAttribute('aria-hidden', 'true');
        }
        // Keep an eye on screen size, and add/remove auxiliary class for styling
        // of small screens.
        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);
        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));
        this.screenSizeHandler_();
        // Initialize tabs, if any.
        if (this.header_ && this.tabBar_) {
            this.element_.classList.add(this.CssClasses_.HAS_TABS);
            var tabContainer = document.createElement('div');
            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);
            this.header_.insertBefore(tabContainer, this.tabBar_);
            this.header_.removeChild(this.tabBar_);
            var leftButton = document.createElement('div');
            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);
            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);
            var leftButtonIcon = document.createElement('i');
            leftButtonIcon.classList.add(this.CssClasses_.ICON);
            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;
            leftButton.appendChild(leftButtonIcon);
            leftButton.addEventListener('click', function () {
                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;
            }.bind(this));
            var rightButton = document.createElement('div');
            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);
            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);
            var rightButtonIcon = document.createElement('i');
            rightButtonIcon.classList.add(this.CssClasses_.ICON);
            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;
            rightButton.appendChild(rightButtonIcon);
            rightButton.addEventListener('click', function () {
                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;
            }.bind(this));
            tabContainer.appendChild(leftButton);
            tabContainer.appendChild(this.tabBar_);
            tabContainer.appendChild(rightButton);
            // Add and remove tab buttons depending on scroll position and total
            // window size.
            var tabUpdateHandler = function () {
                if (this.tabBar_.scrollLeft > 0) {
                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);
                } else {
                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);
                }
                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {
                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);
                } else {
                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);
                }
            }.bind(this);
            this.tabBar_.addEventListener('scroll', tabUpdateHandler);
            tabUpdateHandler();
            // Update tabs when the window resizes.
            var windowResizeHandler = function () {
                // Use timeouts to make sure it doesn't happen too often.
                if (this.resizeTimeoutId_) {
                    clearTimeout(this.resizeTimeoutId_);
                }
                this.resizeTimeoutId_ = setTimeout(function () {
                    tabUpdateHandler();
                    this.resizeTimeoutId_ = null;
                }.bind(this), this.Constant_.RESIZE_TIMEOUT);
            }.bind(this);
            window.addEventListener('resize', windowResizeHandler);
            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {
                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            }
            // Select element tabs, document panels
            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);
            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);
            // Create new tabs for each tab element
            for (var i = 0; i < tabs.length; i++) {
                new MaterialLayoutTab(tabs[i], tabs, panels, this);
            }
        }
        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
    }
};
/**
   * Constructor for an individual tab.
   *
   * @constructor
   * @param {HTMLElement} tab The HTML element for the tab.
   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.
   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.
   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.
   */
function MaterialLayoutTab(tab, tabs, panels, layout) {
    /**
     * Auxiliary method to programmatically select a tab in the UI.
     */
    function selectTab() {
        var href = tab.href.split('#')[1];
        var panel = layout.content_.querySelector('#' + href);
        layout.resetTabState_(tabs);
        layout.resetPanelState_(panels);
        tab.classList.add(layout.CssClasses_.IS_ACTIVE);
        panel.classList.add(layout.CssClasses_.IS_ACTIVE);
    }
    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {
        var rippleContainer = document.createElement('span');
        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);
        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);
        var ripple = document.createElement('span');
        ripple.classList.add(layout.CssClasses_.RIPPLE);
        rippleContainer.appendChild(ripple);
        tab.appendChild(rippleContainer);
    }
    tab.addEventListener('click', function (e) {
        if (tab.getAttribute('href').charAt(0) === '#') {
            e.preventDefault();
            selectTab();
        }
    });
    tab.show = selectTab;
}
window['MaterialLayoutTab'] = MaterialLayoutTab;
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialLayout,
    classAsString: 'MaterialLayout',
    cssClass: 'mdl-js-layout'
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Data Table Card MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {Element} element The element that will be upgraded.
   */
var MaterialDataTable = function MaterialDataTable(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialDataTable'] = MaterialDataTable;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialDataTable.prototype.Constant_ = {};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialDataTable.prototype.CssClasses_ = {
    DATA_TABLE: 'mdl-data-table',
    SELECTABLE: 'mdl-data-table--selectable',
    SELECT_ELEMENT: 'mdl-data-table__select',
    IS_SELECTED: 'is-selected',
    IS_UPGRADED: 'is-upgraded'
};
/**
   * Generates and returns a function that toggles the selection state of a
   * single row (or multiple rows).
   *
   * @param {Element} checkbox Checkbox that toggles the selection state.
   * @param {Element} row Row to toggle when checkbox changes.
   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.
   * @private
   */
MaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {
    if (row) {
        return function () {
            if (checkbox.checked) {
                row.classList.add(this.CssClasses_.IS_SELECTED);
            } else {
                row.classList.remove(this.CssClasses_.IS_SELECTED);
            }
        }.bind(this);
    }
    if (opt_rows) {
        return function () {
            var i;
            var el;
            if (checkbox.checked) {
                for (i = 0; i < opt_rows.length; i++) {
                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');
                    el['MaterialCheckbox'].check();
                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);
                }
            } else {
                for (i = 0; i < opt_rows.length; i++) {
                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');
                    el['MaterialCheckbox'].uncheck();
                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);
                }
            }
        }.bind(this);
    }
};
/**
   * Creates a checkbox for a single or or multiple rows and hooks up the
   * event handling.
   *
   * @param {Element} row Row to toggle when checkbox changes.
   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.
   * @private
   */
MaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {
    var label = document.createElement('label');
    var labelClasses = [
        'mdl-checkbox',
        'mdl-js-checkbox',
        'mdl-js-ripple-effect',
        this.CssClasses_.SELECT_ELEMENT
    ];
    label.className = labelClasses.join(' ');
    var checkbox = document.createElement('input');
    checkbox.type = 'checkbox';
    checkbox.classList.add('mdl-checkbox__input');
    if (row) {
        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);
        checkbox.addEventListener('change', this.selectRow_(checkbox, row));
    } else if (opt_rows) {
        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));
    }
    label.appendChild(checkbox);
    componentHandler.upgradeElement(label, 'MaterialCheckbox');
    return label;
};
/**
   * Initialize element.
   */
MaterialDataTable.prototype.init = function () {
    if (this.element_) {
        var firstHeader = this.element_.querySelector('th');
        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));
        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));
        var rows = bodyRows.concat(footRows);
        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {
            var th = document.createElement('th');
            var headerCheckbox = this.createCheckbox_(null, rows);
            th.appendChild(headerCheckbox);
            firstHeader.parentElement.insertBefore(th, firstHeader);
            for (var i = 0; i < rows.length; i++) {
                var firstCell = rows[i].querySelector('td');
                if (firstCell) {
                    var td = document.createElement('td');
                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {
                        var rowCheckbox = this.createCheckbox_(rows[i]);
                        td.appendChild(rowCheckbox);
                    }
                    rows[i].insertBefore(td, firstCell);
                }
            }
            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
        }
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialDataTable,
    classAsString: 'MaterialDataTable',
    cssClass: 'mdl-js-data-table'
});
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
   * Class constructor for Ripple MDL component.
   * Implements MDL component design pattern defined at:
   * https://github.com/jasonmayes/mdl-component-design-pattern
   *
   * @constructor
   * @param {HTMLElement} element The element that will be upgraded.
   */
var MaterialRipple = function MaterialRipple(element) {
    this.element_ = element;
    // Initialize instance.
    this.init();
};
window['MaterialRipple'] = MaterialRipple;
/**
   * Store constants in one place so they can be updated easily.
   *
   * @enum {string | number}
   * @private
   */
MaterialRipple.prototype.Constant_ = {
    INITIAL_SCALE: 'scale(0.0001, 0.0001)',
    INITIAL_SIZE: '1px',
    INITIAL_OPACITY: '0.4',
    FINAL_OPACITY: '0',
    FINAL_SCALE: ''
};
/**
   * Store strings for class names defined by this component that are used in
   * JavaScript. This allows us to simply change it in one place should we
   * decide to modify at a later date.
   *
   * @enum {string}
   * @private
   */
MaterialRipple.prototype.CssClasses_ = {
    RIPPLE_CENTER: 'mdl-ripple--center',
    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
    RIPPLE: 'mdl-ripple',
    IS_ANIMATING: 'is-animating',
    IS_VISIBLE: 'is-visible'
};
/**
   * Handle mouse / finger down on element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialRipple.prototype.downHandler_ = function (event) {
    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {
        var rect = this.element_.getBoundingClientRect();
        this.boundHeight = rect.height;
        this.boundWidth = rect.width;
        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;
        this.rippleElement_.style.width = this.rippleSize_ + 'px';
        this.rippleElement_.style.height = this.rippleSize_ + 'px';
    }
    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);
    if (event.type === 'mousedown' && this.ignoringMouseDown_) {
        this.ignoringMouseDown_ = false;
    } else {
        if (event.type === 'touchstart') {
            this.ignoringMouseDown_ = true;
        }
        var frameCount = this.getFrameCount();
        if (frameCount > 0) {
            return;
        }
        this.setFrameCount(1);
        var bound = event.currentTarget.getBoundingClientRect();
        var x;
        var y;
        // Check if we are handling a keyboard click.
        if (event.clientX === 0 && event.clientY === 0) {
            x = Math.round(bound.width / 2);
            y = Math.round(bound.height / 2);
        } else {
            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;
            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;
            x = Math.round(clientX - bound.left);
            y = Math.round(clientY - bound.top);
        }
        this.setRippleXY(x, y);
        this.setRippleStyles(true);
        window.requestAnimationFrame(this.animFrameHandler.bind(this));
    }
};
/**
   * Handle mouse / finger up on element.
   *
   * @param {Event} event The event that fired.
   * @private
   */
MaterialRipple.prototype.upHandler_ = function (event) {
    // Don't fire for the artificial "mouseup" generated by a double-click.
    if (event && event.detail !== 2) {
        // Allow a repaint to occur before removing this class, so the animation
        // shows for tap events, which seem to trigger a mouseup too soon after
        // mousedown.
        window.setTimeout(function () {
            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);
        }.bind(this), 0);
    }
};
/**
   * Initialize element.
   */
MaterialRipple.prototype.init = function () {
    if (this.element_) {
        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);
        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {
            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);
            this.frameCount_ = 0;
            this.rippleSize_ = 0;
            this.x_ = 0;
            this.y_ = 0;
            // Touch start produces a compat mouse down event, which would cause a
            // second ripples. To avoid that, we use this property to ignore the first
            // mouse down after a touch start.
            this.ignoringMouseDown_ = false;
            this.boundDownHandler = this.downHandler_.bind(this);
            this.element_.addEventListener('mousedown', this.boundDownHandler);
            this.element_.addEventListener('touchstart', this.boundDownHandler);
            this.boundUpHandler = this.upHandler_.bind(this);
            this.element_.addEventListener('mouseup', this.boundUpHandler);
            this.element_.addEventListener('mouseleave', this.boundUpHandler);
            this.element_.addEventListener('touchend', this.boundUpHandler);
            this.element_.addEventListener('blur', this.boundUpHandler);
            /**
         * Getter for frameCount_.
         * @return {number} the frame count.
         */
            this.getFrameCount = function () {
                return this.frameCount_;
            };
            /**
         * Setter for frameCount_.
         * @param {number} fC the frame count.
         */
            this.setFrameCount = function (fC) {
                this.frameCount_ = fC;
            };
            /**
         * Getter for rippleElement_.
         * @return {Element} the ripple element.
         */
            this.getRippleElement = function () {
                return this.rippleElement_;
            };
            /**
         * Sets the ripple X and Y coordinates.
         * @param  {number} newX the new X coordinate
         * @param  {number} newY the new Y coordinate
         */
            this.setRippleXY = function (newX, newY) {
                this.x_ = newX;
                this.y_ = newY;
            };
            /**
         * Sets the ripple styles.
         * @param  {boolean} start whether or not this is the start frame.
         */
            this.setRippleStyles = function (start) {
                if (this.rippleElement_ !== null) {
                    var transformString;
                    var scale;
                    var size;
                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';
                    if (start) {
                        scale = this.Constant_.INITIAL_SCALE;
                        size = this.Constant_.INITIAL_SIZE;
                    } else {
                        scale = this.Constant_.FINAL_SCALE;
                        size = this.rippleSize_ + 'px';
                        if (recentering) {
                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';
                        }
                    }
                    transformString = 'translate(-50%, -50%) ' + offset + scale;
                    this.rippleElement_.style.webkitTransform = transformString;
                    this.rippleElement_.style.msTransform = transformString;
                    this.rippleElement_.style.transform = transformString;
                    if (start) {
                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);
                    } else {
                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);
                    }
                }
            };
            /**
         * Handles an animation frame.
         */
            this.animFrameHandler = function () {
                if (this.frameCount_-- > 0) {
                    window.requestAnimationFrame(this.animFrameHandler.bind(this));
                } else {
                    this.setRippleStyles(false);
                }
            };
        }
    }
};
// The component registers itself. It can assume componentHandler is available
// in the global scope.
componentHandler.register({
    constructor: MaterialRipple,
    classAsString: 'MaterialRipple',
    cssClass: 'mdl-js-ripple-effect',
    widget: false
});
}());

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["ReactMDL"] = factory(require("react"), require("react-dom"));
	else
		root["ReactMDL"] = factory(root["React"], root["ReactDOM"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _mdlUpgrade = __webpack_require__(1);
	
	Object.defineProperty(exports, 'mdlUpgrade', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_mdlUpgrade).default;
	    }
	});
	
	var _MDLComponent = __webpack_require__(3);
	
	Object.defineProperty(exports, 'MDLComponent', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_MDLComponent).default;
	    }
	});
	
	var _Badge = __webpack_require__(5);
	
	Object.defineProperty(exports, 'Badge', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Badge).default;
	    }
	});
	
	var _Button = __webpack_require__(7);
	
	Object.defineProperty(exports, 'Button', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Button).default;
	    }
	});
	
	var _Card = __webpack_require__(8);
	
	Object.defineProperty(exports, 'Card', {
	    enumerable: true,
	    get: function get() {
	        return _Card.Card;
	    }
	});
	Object.defineProperty(exports, 'CardTitle', {
	    enumerable: true,
	    get: function get() {
	        return _Card.CardTitle;
	    }
	});
	Object.defineProperty(exports, 'CardActions', {
	    enumerable: true,
	    get: function get() {
	        return _Card.CardActions;
	    }
	});
	Object.defineProperty(exports, 'CardMedia', {
	    enumerable: true,
	    get: function get() {
	        return _Card.CardMedia;
	    }
	});
	Object.defineProperty(exports, 'CardText', {
	    enumerable: true,
	    get: function get() {
	        return _Card.CardText;
	    }
	});
	Object.defineProperty(exports, 'CardMenu', {
	    enumerable: true,
	    get: function get() {
	        return _Card.CardMenu;
	    }
	});
	
	var _Checkbox = __webpack_require__(15);
	
	Object.defineProperty(exports, 'Checkbox', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Checkbox).default;
	    }
	});
	
	var _DataTable = __webpack_require__(16);
	
	Object.defineProperty(exports, 'DataTable', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_DataTable).default;
	    }
	});
	Object.defineProperty(exports, 'Table', {
	    enumerable: true,
	    get: function get() {
	        return _DataTable.Table;
	    }
	});
	Object.defineProperty(exports, 'TableHeader', {
	    enumerable: true,
	    get: function get() {
	        return _DataTable.TableHeader;
	    }
	});
	
	var _Dialog = __webpack_require__(22);
	
	Object.defineProperty(exports, 'Dialog', {
	    enumerable: true,
	    get: function get() {
	        return _Dialog.Dialog;
	    }
	});
	Object.defineProperty(exports, 'DialogTitle', {
	    enumerable: true,
	    get: function get() {
	        return _Dialog.DialogTitle;
	    }
	});
	Object.defineProperty(exports, 'DialogContent', {
	    enumerable: true,
	    get: function get() {
	        return _Dialog.DialogContent;
	    }
	});
	Object.defineProperty(exports, 'DialogActions', {
	    enumerable: true,
	    get: function get() {
	        return _Dialog.DialogActions;
	    }
	});
	
	var _FABButton = __webpack_require__(26);
	
	Object.defineProperty(exports, 'FABButton', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_FABButton).default;
	    }
	});
	
	var _Footer = __webpack_require__(27);
	
	Object.defineProperty(exports, 'Footer', {
	    enumerable: true,
	    get: function get() {
	        return _Footer.Footer;
	    }
	});
	Object.defineProperty(exports, 'FooterSection', {
	    enumerable: true,
	    get: function get() {
	        return _Footer.FooterSection;
	    }
	});
	Object.defineProperty(exports, 'FooterDropDownSection', {
	    enumerable: true,
	    get: function get() {
	        return _Footer.FooterDropDownSection;
	    }
	});
	Object.defineProperty(exports, 'FooterLinkList', {
	    enumerable: true,
	    get: function get() {
	        return _Footer.FooterLinkList;
	    }
	});
	
	var _Grid = __webpack_require__(33);
	
	Object.defineProperty(exports, 'Grid', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Grid).default;
	    }
	});
	Object.defineProperty(exports, 'Cell', {
	    enumerable: true,
	    get: function get() {
	        return _Grid.Cell;
	    }
	});
	
	var _Icon = __webpack_require__(34);
	
	Object.defineProperty(exports, 'Icon', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Icon).default;
	    }
	});
	
	var _IconButton = __webpack_require__(35);
	
	Object.defineProperty(exports, 'IconButton', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_IconButton).default;
	    }
	});
	
	var _IconToggle = __webpack_require__(36);
	
	Object.defineProperty(exports, 'IconToggle', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_IconToggle).default;
	    }
	});
	
	var _Layout = __webpack_require__(37);
	
	Object.defineProperty(exports, 'Layout', {
	    enumerable: true,
	    get: function get() {
	        return _Layout.Layout;
	    }
	});
	Object.defineProperty(exports, 'Header', {
	    enumerable: true,
	    get: function get() {
	        return _Layout.Header;
	    }
	});
	Object.defineProperty(exports, 'Drawer', {
	    enumerable: true,
	    get: function get() {
	        return _Layout.Drawer;
	    }
	});
	Object.defineProperty(exports, 'HeaderRow', {
	    enumerable: true,
	    get: function get() {
	        return _Layout.HeaderRow;
	    }
	});
	Object.defineProperty(exports, 'HeaderTabs', {
	    enumerable: true,
	    get: function get() {
	        return _Layout.HeaderTabs;
	    }
	});
	Object.defineProperty(exports, 'Spacer', {
	    enumerable: true,
	    get: function get() {
	        return _Layout.Spacer;
	    }
	});
	Object.defineProperty(exports, 'Navigation', {
	    enumerable: true,
	    get: function get() {
	        return _Layout.Navigation;
	    }
	});
	Object.defineProperty(exports, 'Content', {
	    enumerable: true,
	    get: function get() {
	        return _Layout.Content;
	    }
	});
	
	var _List = __webpack_require__(47);
	
	Object.defineProperty(exports, 'List', {
	    enumerable: true,
	    get: function get() {
	        return _List.List;
	    }
	});
	Object.defineProperty(exports, 'ListItem', {
	    enumerable: true,
	    get: function get() {
	        return _List.ListItem;
	    }
	});
	Object.defineProperty(exports, 'ListItemAction', {
	    enumerable: true,
	    get: function get() {
	        return _List.ListItemAction;
	    }
	});
	Object.defineProperty(exports, 'ListItemContent', {
	    enumerable: true,
	    get: function get() {
	        return _List.ListItemContent;
	    }
	});
	
	var _Menu = __webpack_require__(51);
	
	Object.defineProperty(exports, 'Menu', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Menu).default;
	    }
	});
	Object.defineProperty(exports, 'MenuItem', {
	    enumerable: true,
	    get: function get() {
	        return _Menu.MenuItem;
	    }
	});
	
	var _ProgressBar = __webpack_require__(52);
	
	Object.defineProperty(exports, 'ProgressBar', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_ProgressBar).default;
	    }
	});
	
	var _Radio = __webpack_require__(53);
	
	Object.defineProperty(exports, 'Radio', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Radio).default;
	    }
	});
	
	var _RadioGroup = __webpack_require__(54);
	
	Object.defineProperty(exports, 'RadioGroup', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_RadioGroup).default;
	    }
	});
	
	var _Slider = __webpack_require__(55);
	
	Object.defineProperty(exports, 'Slider', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Slider).default;
	    }
	});
	
	var _Snackbar = __webpack_require__(56);
	
	Object.defineProperty(exports, 'Snackbar', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Snackbar).default;
	    }
	});
	
	var _Spinner = __webpack_require__(57);
	
	Object.defineProperty(exports, 'Spinner', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Spinner).default;
	    }
	});
	
	var _Switch = __webpack_require__(58);
	
	Object.defineProperty(exports, 'Switch', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Switch).default;
	    }
	});
	
	var _Tabs = __webpack_require__(59);
	
	Object.defineProperty(exports, 'Tabs', {
	    enumerable: true,
	    get: function get() {
	        return _Tabs.Tabs;
	    }
	});
	Object.defineProperty(exports, 'Tab', {
	    enumerable: true,
	    get: function get() {
	        return _Tabs.Tab;
	    }
	});
	Object.defineProperty(exports, 'TabBar', {
	    enumerable: true,
	    get: function get() {
	        return _Tabs.TabBar;
	    }
	});
	
	var _Textfield = __webpack_require__(62);
	
	Object.defineProperty(exports, 'Textfield', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Textfield).default;
	    }
	});
	
	var _Tooltip = __webpack_require__(18);
	
	Object.defineProperty(exports, 'Tooltip', {
	    enumerable: true,
	    get: function get() {
	        return _interopRequireDefault(_Tooltip).default;
	    }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _MDLComponent = __webpack_require__(3);
	
	var _MDLComponent2 = _interopRequireDefault(_MDLComponent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (Component) {
	    var render = Component.prototype.render;
	
	    Component.prototype.render = function rendr() {
	        // eslint-disable-line no-param-reassign
	        var renderBound = render.bind(this);
	        return _react2.default.createElement(
	            _MDLComponent2.default,
	            null,
	            renderBound()
	        );
	    };
	
	    return Component;
	};

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _reactDom = __webpack_require__(4);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MDLComponent = function (_Component) {
	    _inherits(MDLComponent, _Component);
	
	    function MDLComponent() {
	        _classCallCheck(this, MDLComponent);
	
	        return _possibleConstructorReturn(this, (MDLComponent.__proto__ || Object.getPrototypeOf(MDLComponent)).apply(this, arguments));
	    }
	
	    _createClass(MDLComponent, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            window.componentHandler.upgradeElement((0, _reactDom.findDOMNode)(this));
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            window.componentHandler.downgradeElements((0, _reactDom.findDOMNode)(this));
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react.Children.only(this.props.children);
	        }
	    }]);
	
	    return MDLComponent;
	}(_react.Component);
	
	exports.default = MDLComponent;

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    children: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.string]),
	    className: _react.PropTypes.string,
	    text: _react.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]),
	    overlap: _react.PropTypes.bool,
	    noBackground: _react.PropTypes.bool
	};
	
	var Badge = function (_React$Component) {
	    _inherits(Badge, _React$Component);
	
	    function Badge() {
	        _classCallCheck(this, Badge);
	
	        return _possibleConstructorReturn(this, (Badge.__proto__ || Object.getPrototypeOf(Badge)).apply(this, arguments));
	    }
	
	    _createClass(Badge, [{
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                children = _props.children,
	                className = _props.className,
	                text = _props.text,
	                overlap = _props.overlap,
	                noBackground = _props.noBackground;
	
	            // No badge if no children
	
	            if (!_react2.default.Children.count(children)) return null;
	
	            var element = typeof children === 'string' ? _react2.default.createElement(
	                'span',
	                null,
	                children
	            ) : _react2.default.Children.only(children);
	
	            // No text -> No need of badge
	            if (text === null || typeof text === 'undefined') return element;
	
	            return _react2.default.cloneElement(element, {
	                className: (0, _classnames2.default)(className, element.props.className, 'mdl-badge', {
	                    'mdl-badge--overlap': !!overlap,
	                    'mdl-badge--no-background': !!noBackground
	                }),
	                'data-badge': text
	            });
	        }
	    }]);
	
	    return Badge;
	}(_react2.default.Component);
	
	Badge.propTypes = propTypes;
	
	exports.default = Badge;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    accent: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    colored: _react.PropTypes.bool,
	    component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.func]),
	    href: _react.PropTypes.string,
	    primary: _react.PropTypes.bool,
	    raised: _react.PropTypes.bool,
	    ripple: _react.PropTypes.bool
	};
	
	// eslint-disable-next-line react/prefer-stateless-function
	
	var Button = function (_React$Component) {
	    _inherits(Button, _React$Component);
	
	    function Button() {
	        _classCallCheck(this, Button);
	
	        return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
	    }
	
	    _createClass(Button, [{
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                accent = _props.accent,
	                className = _props.className,
	                colored = _props.colored,
	                primary = _props.primary,
	                raised = _props.raised,
	                ripple = _props.ripple,
	                component = _props.component,
	                href = _props.href,
	                children = _props.children,
	                otherProps = _objectWithoutProperties(_props, ['accent', 'className', 'colored', 'primary', 'raised', 'ripple', 'component', 'href', 'children']);
	
	            var buttonClasses = (0, _classnames2.default)('mdl-button mdl-js-button', {
	                'mdl-js-ripple-effect': ripple,
	                'mdl-button--raised': raised,
	                'mdl-button--colored': colored,
	                'mdl-button--primary': primary,
	                'mdl-button--accent': accent
	            }, className);
	
	            return _react2.default.createElement(component || (href ? 'a' : 'button'), _extends({
	                className: buttonClasses,
	                href: href
	            }, otherProps), children);
	        }
	    }]);
	
	    return Button;
	}(_react2.default.Component);
	
	Button.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(Button);

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CardMedia = exports.CardActions = exports.CardTitle = exports.CardMenu = exports.CardText = exports.Card = undefined;
	
	var _Card = __webpack_require__(9);
	
	Object.defineProperty(exports, 'Card', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Card).default;
	  }
	});
	
	var _CardTitle = __webpack_require__(12);
	
	Object.defineProperty(exports, 'CardTitle', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CardTitle).default;
	  }
	});
	
	var _CardActions = __webpack_require__(13);
	
	Object.defineProperty(exports, 'CardActions', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CardActions).default;
	  }
	});
	
	var _basicClassCreator = __webpack_require__(14);
	
	var _basicClassCreator2 = _interopRequireDefault(_basicClassCreator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CardText = exports.CardText = (0, _basicClassCreator2.default)('CardText', 'mdl-card__supporting-text');
	var CardMenu = exports.CardMenu = (0, _basicClassCreator2.default)('CardMenu', 'mdl-card__menu');
	var CardMedia = exports.CardMedia = (0, _basicClassCreator2.default)('CardMedia', 'mdl-card__media');

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _clamp = __webpack_require__(10);
	
	var _clamp2 = _interopRequireDefault(_clamp);
	
	var _shadows = __webpack_require__(11);
	
	var _shadows2 = _interopRequireDefault(_shadows);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Card = function Card(props) {
	    var className = props.className,
	        shadow = props.shadow,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'shadow', 'children']);
	
	    var hasShadow = typeof shadow !== 'undefined';
	    var shadowLevel = (0, _clamp2.default)(shadow || 0, 0, _shadows2.default.length - 1);
	
	    var classes = (0, _classnames2.default)('mdl-card', _defineProperty({}, _shadows2.default[shadowLevel], hasShadow), className);
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        children
	    );
	};
	Card.propTypes = {
	    className: _react.PropTypes.string,
	    shadow: _react.PropTypes.number
	};
	
	exports.default = Card;

/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = clamp
	
	function clamp(value, min, max) {
	  return min < max
	    ? (value < min ? min : value > max ? max : value)
	    : (value < max ? max : value > min ? min : value)
	}


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var values = [2, 3, 4, 5, 6, 8, 16];
	exports.default = values.map(function (v) {
	  return "mdl-shadow--" + v + "dp";
	});

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var propTypes = {
	    className: _react.PropTypes.string,
	    expand: _react.PropTypes.bool
	};
	
	var CardTitle = function CardTitle(props) {
	    var className = props.className,
	        children = props.children,
	        expand = props.expand,
	        otherProps = _objectWithoutProperties(props, ['className', 'children', 'expand']);
	
	    var classes = (0, _classnames2.default)('mdl-card__title', {
	        'mdl-card--expand': expand
	    }, className);
	
	    var title = typeof children === 'string' ? _react2.default.createElement('h2', { className: 'mdl-card__title-text' }, children) : children;
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        title
	    );
	};
	
	CardTitle.propTypes = propTypes;
	
	exports.default = CardTitle;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var CardActions = function CardActions(props) {
	    var className = props.className,
	        border = props.border,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'border', 'children']);
	
	    var classes = (0, _classnames2.default)('mdl-card__actions', {
	        'mdl-card--border': border
	    }, className);
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        children
	    );
	};
	
	CardActions.propTypes = {
	    border: _react.PropTypes.bool,
	    className: _react.PropTypes.string
	};
	
	exports.default = CardActions;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	exports.default = function (displayName, defaultClassName) {
	    var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'div';
	
	    var fn = function fn(props) {
	        var className = props.className,
	            children = props.children,
	            otherProps = _objectWithoutProperties(props, ['className', 'children']);
	
	        return _react2.default.createElement(element, _extends({
	            className: (0, _classnames2.default)(defaultClassName, className)
	        }, otherProps), children);
	    };
	
	    fn.displayName = displayName;
	    fn.propTypes = {
	        className: _react.PropTypes.string
	    };
	
	    return fn;
	};

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(4);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    checked: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    label: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    ripple: _react.PropTypes.bool
	};
	
	var Checkbox = function (_React$Component) {
	    _inherits(Checkbox, _React$Component);
	
	    function Checkbox() {
	        _classCallCheck(this, Checkbox);
	
	        return _possibleConstructorReturn(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).apply(this, arguments));
	    }
	
	    _createClass(Checkbox, [{
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            if (this.props.disabled !== prevProps.disabled) {
	                var fnName = this.props.disabled ? 'disable' : 'enable';
	                (0, _reactDom.findDOMNode)(this).MaterialCheckbox[fnName]();
	            }
	            if (this.props.checked !== prevProps.checked) {
	                var _fnName = this.props.checked ? 'check' : 'uncheck';
	                (0, _reactDom.findDOMNode)(this).MaterialCheckbox[_fnName]();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                className = _props.className,
	                label = _props.label,
	                ripple = _props.ripple,
	                inputProps = _objectWithoutProperties(_props, ['className', 'label', 'ripple']);
	
	            var classes = (0, _classnames2.default)('mdl-checkbox mdl-js-checkbox', {
	                'mdl-js-ripple-effect': ripple
	            }, className);
	
	            return _react2.default.createElement(
	                'label',
	                { className: classes },
	                _react2.default.createElement('input', _extends({
	                    type: 'checkbox',
	                    className: 'mdl-checkbox__input'
	                }, inputProps)),
	                label && _react2.default.createElement(
	                    'span',
	                    { className: 'mdl-checkbox__label' },
	                    label
	                )
	            );
	        }
	    }]);
	
	    return Checkbox;
	}(_react2.default.Component);
	
	Checkbox.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(Checkbox);

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _TableHeader = __webpack_require__(17);
	
	Object.defineProperty(exports, 'TableHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableHeader).default;
	  }
	});
	
	var _Table = __webpack_require__(19);
	
	Object.defineProperty(exports, 'Table', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Table).default;
	  }
	});
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Table).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Tooltip = __webpack_require__(18);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var propTypes = {
	    cellFormatter: _react.PropTypes.func,
	    className: _react.PropTypes.string,
	    name: _react.PropTypes.string.isRequired,
	    numeric: _react.PropTypes.bool,
	    onClick: _react.PropTypes.func,
	    nosort: _react.PropTypes.bool,
	    sortFn: _react.PropTypes.func,
	    tooltip: _react.PropTypes.node
	};
	
	var TableHeader = function TableHeader(props) {
	    var className = props.className,
	        name = props.name,
	        numeric = props.numeric,
	        onClick = props.onClick,
	        nosort = props.nosort,
	        tooltip = props.tooltip,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'name', 'numeric', 'onClick', 'nosort', 'tooltip', 'children']);
	
	    var classes = (0, _classnames2.default)({
	        'mdl-data-table__cell--non-numeric': !numeric
	    }, className);
	
	    var clickFn = !nosort && onClick ? function (e) {
	        return onClick(e, name);
	    } : null;
	
	    return _react2.default.createElement(
	        'th',
	        _extends({ className: classes, onClick: clickFn }, otherProps),
	        !!tooltip ? _react2.default.createElement(
	            _Tooltip2.default,
	            { label: tooltip },
	            children
	        ) : children
	    );
	};
	
	TableHeader.propTypes = propTypes;
	
	exports.default = TableHeader;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _MDLComponent = __webpack_require__(3);
	
	var _MDLComponent2 = _interopRequireDefault(_MDLComponent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Tooltip = function Tooltip(props) {
	    var label = props.label,
	        large = props.large,
	        children = props.children,
	        position = props.position,
	        otherProps = _objectWithoutProperties(props, ['label', 'large', 'children', 'position']);
	
	    var id = Math.random().toString(36).substr(2);
	
	    var newLabel = typeof label === 'string' ? _react2.default.createElement(
	        'span',
	        null,
	        label
	    ) : label;
	
	    var element = void 0;
	    if (typeof children === 'string') {
	        element = _react2.default.createElement(
	            'span',
	            null,
	            children
	        );
	    } else {
	        element = _react2.default.Children.only(children);
	    }
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ style: { display: 'inline-block' } }, otherProps),
	        _react2.default.cloneElement(element, { id: id }),
	        _react2.default.createElement(
	            _MDLComponent2.default,
	            null,
	            _react2.default.cloneElement(newLabel, {
	                htmlFor: id,
	                className: (0, _classnames2.default)('mdl-tooltip', _defineProperty({
	                    'mdl-tooltip--large': large
	                }, 'mdl-tooltip--' + position, typeof position !== 'undefined'))
	            })
	        )
	    );
	};
	
	Tooltip.propTypes = {
	    children: _react.PropTypes.node.isRequired,
	    label: _react.PropTypes.node.isRequired,
	    large: _react.PropTypes.bool,
	    position: _react.PropTypes.oneOf(['left', 'right', 'top', 'bottom'])
	};
	
	exports.default = Tooltip;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.UndecoratedTable = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _clamp = __webpack_require__(10);
	
	var _clamp2 = _interopRequireDefault(_clamp);
	
	var _shadows = __webpack_require__(11);
	
	var _shadows2 = _interopRequireDefault(_shadows);
	
	var _TableHeader = __webpack_require__(17);
	
	var _TableHeader2 = _interopRequireDefault(_TableHeader);
	
	var _Selectable = __webpack_require__(20);
	
	var _Selectable2 = _interopRequireDefault(_Selectable);
	
	var _Sortable = __webpack_require__(21);
	
	var _Sortable2 = _interopRequireDefault(_Sortable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    className: _react.PropTypes.string,
	    columns: function columns(props, propName, componentName) {
	        return props[propName] && new Error(componentName + ': `' + propName + '` is deprecated, please use the component `TableHeader` instead.');
	    },
	    data: function data(props, propName, componentName) {
	        return props[propName] && new Error(componentName + ': `' + propName + '` is deprecated, please use `rows` instead. `' + propName + '` will be removed in the next major release.');
	    },
	    rowKeyColumn: _react.PropTypes.string,
	    rows: _react.PropTypes.arrayOf(_react.PropTypes.object).isRequired,
	    shadow: _react.PropTypes.number
	};
	
	var Table = function (_React$Component) {
	    _inherits(Table, _React$Component);
	
	    function Table() {
	        _classCallCheck(this, Table);
	
	        return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).apply(this, arguments));
	    }
	
	    _createClass(Table, [{
	        key: 'renderCell',
	        value: function renderCell(column, row, idx) {
	            var className = !column.numeric ? 'mdl-data-table__cell--non-numeric' : '';
	            return _react2.default.createElement(
	                'td',
	                { key: column.name, className: className },
	                column.cellFormatter ? column.cellFormatter(row[column.name], row, idx) : row[column.name]
	            );
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;
	
	            var _props = this.props,
	                className = _props.className,
	                columns = _props.columns,
	                shadow = _props.shadow,
	                children = _props.children,
	                rowKeyColumn = _props.rowKeyColumn,
	                rows = _props.rows,
	                data = _props.data,
	                otherProps = _objectWithoutProperties(_props, ['className', 'columns', 'shadow', 'children', 'rowKeyColumn', 'rows', 'data']);
	
	            var realRows = rows || data;
	
	            var hasShadow = typeof shadow !== 'undefined';
	            var shadowLevel = (0, _clamp2.default)(shadow || 0, 0, _shadows2.default.length - 1);
	
	            var classes = (0, _classnames2.default)('mdl-data-table', _defineProperty({}, _shadows2.default[shadowLevel], hasShadow), className);
	
	            var columnChildren = !!children ? _react2.default.Children.toArray(children) : columns.map(function (column) {
	                return _react2.default.createElement(
	                    _TableHeader2.default,
	                    {
	                        key: column.name,
	                        className: column.className,
	                        name: column.name,
	                        numeric: column.numeric,
	                        tooltip: column.tooltip
	                    },
	                    column.label
	                );
	            });
	            return _react2.default.createElement(
	                'table',
	                _extends({ className: classes }, otherProps),
	                _react2.default.createElement(
	                    'thead',
	                    null,
	                    _react2.default.createElement(
	                        'tr',
	                        null,
	                        columnChildren
	                    )
	                ),
	                _react2.default.createElement(
	                    'tbody',
	                    null,
	                    realRows.map(function (row, idx) {
	                        return _react2.default.createElement(
	                            'tr',
	                            { key: row[rowKeyColumn] || row.key || idx, className: row.className },
	                            columnChildren.map(function (child) {
	                                return _this2.renderCell(child.props, row, idx);
	                            })
	                        );
	                    })
	                )
	            );
	        }
	    }]);
	
	    return Table;
	}(_react2.default.Component);
	
	Table.propTypes = propTypes;
	
	exports.default = (0, _Sortable2.default)((0, _Selectable2.default)(Table));
	var UndecoratedTable = exports.UndecoratedTable = Table;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _TableHeader = __webpack_require__(17);
	
	var _TableHeader2 = _interopRequireDefault(_TableHeader);
	
	var _Checkbox = __webpack_require__(15);
	
	var _Checkbox2 = _interopRequireDefault(_Checkbox);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    columns: function columns(props, propName, componentName) {
	        return props[propName] && new Error(componentName + ': `' + propName + '` is deprecated, please use the component `TableHeader` instead.');
	    },
	    data: function data(props, propName, componentName) {
	        return props[propName] && new Error(componentName + ': `' + propName + '` is deprecated, please use `rows` instead. `' + propName + '` will be removed in the next major release.');
	    },
	    onSelectionChanged: _react.PropTypes.func,
	    rowKeyColumn: _react.PropTypes.string,
	    rows: _react.PropTypes.arrayOf(_react.PropTypes.object).isRequired,
	    selectable: _react.PropTypes.bool
	};
	
	var defaultProps = {
	    onSelectionChanged: function onSelectionChanged() {
	        // do nothing
	    }
	};
	
	exports.default = function (Component) {
	    var Selectable = function (_React$Component) {
	        _inherits(Selectable, _React$Component);
	
	        function Selectable(props) {
	            _classCallCheck(this, Selectable);
	
	            var _this = _possibleConstructorReturn(this, (Selectable.__proto__ || Object.getPrototypeOf(Selectable)).call(this, props));
	
	            _this.handleChangeHeaderCheckbox = _this.handleChangeHeaderCheckbox.bind(_this);
	            _this.handleChangeRowCheckbox = _this.handleChangeRowCheckbox.bind(_this);
	            _this.builRowCheckbox = _this.builRowCheckbox.bind(_this);
	
	            if (props.selectable) {
	                _this.state = {
	                    headerSelected: false,
	                    selectedRows: []
	                };
	            }
	            return _this;
	        }
	
	        _createClass(Selectable, [{
	            key: 'componentWillReceiveProps',
	            value: function componentWillReceiveProps(nextProps) {
	                var _this2 = this;
	
	                if (nextProps.selectable) {
	                    (function () {
	                        var rows = nextProps.rows,
	                            data = nextProps.data,
	                            rowKeyColumn = nextProps.rowKeyColumn;
	
	                        var rrows = rows || data;
	
	                        // keep only existing rows
	                        var selectedRows = _this2.state.selectedRows.filter(function (k) {
	                            return rrows.map(function (row, i) {
	                                return row[rowKeyColumn] || row.key || i;
	                            }).indexOf(k) > -1;
	                        });
	
	                        _this2.setState({
	                            headerSelected: selectedRows.length === rrows.length,
	                            selectedRows: selectedRows
	                        });
	
	                        nextProps.onSelectionChanged(selectedRows);
	                    })();
	                }
	            }
	        }, {
	            key: 'handleChangeHeaderCheckbox',
	            value: function handleChangeHeaderCheckbox(e) {
	                var _props = this.props,
	                    rowKeyColumn = _props.rowKeyColumn,
	                    rows = _props.rows,
	                    data = _props.data;
	
	                var selected = e.target.checked;
	                var selectedRows = selected ? (rows || data).map(function (row, idx) {
	                    return row[rowKeyColumn] || row.key || idx;
	                }) : [];
	
	                this.setState({
	                    headerSelected: selected,
	                    selectedRows: selectedRows
	                });
	
	                this.props.onSelectionChanged(selectedRows);
	            }
	        }, {
	            key: 'handleChangeRowCheckbox',
	            value: function handleChangeRowCheckbox(e) {
	                var _props2 = this.props,
	                    rows = _props2.rows,
	                    data = _props2.data;
	
	                var rowId = JSON.parse(e.target.dataset.reactmdl).id;
	                var rowChecked = e.target.checked;
	                var selectedRows = this.state.selectedRows;
	
	                if (rowChecked) {
	                    selectedRows.push(rowId);
	                } else {
	                    var idx = selectedRows.indexOf(rowId);
	                    selectedRows.splice(idx, 1);
	                }
	
	                this.setState({
	                    headerSelected: (rows || data).length === selectedRows.length,
	                    selectedRows: selectedRows
	                });
	
	                this.props.onSelectionChanged(selectedRows);
	            }
	        }, {
	            key: 'builRowCheckbox',
	            value: function builRowCheckbox(content, row, idx) {
	                var rowKey = row[this.props.rowKeyColumn] || row.key || idx;
	                var isSelected = this.state.selectedRows.indexOf(rowKey) > -1;
	                return _react2.default.createElement(_Checkbox2.default, {
	                    className: 'mdl-data-table__select',
	                    'data-reactmdl': JSON.stringify({ id: rowKey }),
	                    checked: isSelected,
	                    onChange: this.handleChangeRowCheckbox
	                });
	            }
	        }, {
	            key: 'render',
	            value: function render() {
	                var _this3 = this;
	
	                var _props3 = this.props,
	                    rows = _props3.rows,
	                    data = _props3.data,
	                    selectable = _props3.selectable,
	                    children = _props3.children,
	                    rowKeyColumn = _props3.rowKeyColumn,
	                    otherProps = _objectWithoutProperties(_props3, ['rows', 'data', 'selectable', 'children', 'rowKeyColumn']);
	
	                var realRows = selectable ? (rows || data).map(function (row, idx) {
	                    var rowKey = row[rowKeyColumn] || row.key || idx;
	                    return _extends({}, row, {
	                        className: (0, _classnames2.default)({
	                            'is-selected': _this3.state.selectedRows.indexOf(rowKey) > -1
	                        }, row.className)
	                    });
	                }) : rows || data;
	
	                return _react2.default.createElement(
	                    Component,
	                    _extends({ rows: realRows }, otherProps),
	                    selectable && _react2.default.createElement(
	                        _TableHeader2.default,
	                        { name: 'mdl-header-select', cellFormatter: this.builRowCheckbox },
	                        _react2.default.createElement(_Checkbox2.default, { className: 'mdl-data-table__select', checked: this.state.headerSelected, onChange: this.handleChangeHeaderCheckbox })
	                    ),
	                    children
	                );
	            }
	        }]);
	
	        return Selectable;
	    }(_react2.default.Component);
	
	    Selectable.propTypes = propTypes;
	    Selectable.defaultProps = defaultProps;
	    return Selectable;
	};

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _TableHeader = __webpack_require__(17);
	
	var _TableHeader2 = _interopRequireDefault(_TableHeader);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function initState(props) {
	    return {
	        rows: (props.rows || props.data).slice(),
	        sortHeader: null,
	        isAsc: true
	    };
	}
	
	var propTypes = {
	    columns: function columns(props, propName, componentName) {
	        return props[propName] && new Error(componentName + ': `' + propName + '` is deprecated, please use the component `TableHeader` instead.');
	    },
	    data: function data(props, propName, componentName) {
	        return props[propName] && new Error(componentName + ': `' + propName + '` is deprecated, please use `rows` instead. `' + propName + '` will be removed in the next major release.');
	    },
	    rows: _react.PropTypes.arrayOf(_react.PropTypes.object).isRequired,
	    sortable: _react.PropTypes.bool
	};
	
	exports.default = function (Component) {
	    var Sortable = function (_React$Component) {
	        _inherits(Sortable, _React$Component);
	
	        function Sortable(props) {
	            _classCallCheck(this, Sortable);
	
	            var _this = _possibleConstructorReturn(this, (Sortable.__proto__ || Object.getPrototypeOf(Sortable)).call(this, props));
	
	            _this.handleClickColumn = _this.handleClickColumn.bind(_this);
	
	            if (props.sortable) {
	                _this.state = initState(props);
	            }
	            return _this;
	        }
	
	        _createClass(Sortable, [{
	            key: 'componentWillReceiveProps',
	            value: function componentWillReceiveProps(nextProps) {
	                if (nextProps.sortable) {
	                    var realRows = nextProps.rows || nextProps.data;
	                    var rows = this.state.sortHeader ? this.getSortedRowsForColumn(this.state.isAsc, this.state.sortHeader, realRows) : realRows;
	
	                    this.setState({
	                        rows: rows
	                    });
	                }
	            }
	        }, {
	            key: 'getColumnClass',
	            value: function getColumnClass(column) {
	                var _state = this.state,
	                    sortHeader = _state.sortHeader,
	                    isAsc = _state.isAsc;
	
	
	                return (0, _classnames2.default)(column.className, {
	                    'mdl-data-table__header--sorted-ascending': sortHeader === column.name && isAsc,
	                    'mdl-data-table__header--sorted-descending': sortHeader === column.name && !isAsc
	                });
	            }
	        }, {
	            key: 'getDefaultSortFn',
	            value: function getDefaultSortFn(a, b, isAsc) {
	                return isAsc ? a.localeCompare(b) : b.localeCompare(a);
	            }
	        }, {
	            key: 'getSortedRowsForColumn',
	            value: function getSortedRowsForColumn(isAsc, columnName, rows) {
	                var columns = !!this.props.children ? _react2.default.Children.map(this.props.children, function (child) {
	                    return child.props;
	                }) : this.props.columns;
	
	                var sortFn = this.getDefaultSortFn;
	                for (var i = 0; i < columns.length; i++) {
	                    if (columns[i].name === columnName && columns[i].sortFn) {
	                        sortFn = columns[i].sortFn;
	                        break;
	                    }
	                }
	
	                return rows.sort(function (a, b) {
	                    return sortFn(String(a[columnName]), String(b[columnName]), isAsc);
	                });
	            }
	        }, {
	            key: 'handleClickColumn',
	            value: function handleClickColumn(e, columnName) {
	                var isAsc = this.state.sortHeader === columnName ? !this.state.isAsc : true;
	                var rows = this.getSortedRowsForColumn(isAsc, columnName, this.state.rows);
	                this.setState({
	                    sortHeader: columnName,
	                    isAsc: isAsc,
	                    rows: rows
	                });
	            }
	        }, {
	            key: 'renderTableHeaders',
	            value: function renderTableHeaders() {
	                var _this2 = this;
	
	                var _props = this.props,
	                    children = _props.children,
	                    columns = _props.columns,
	                    sortable = _props.sortable;
	
	
	                if (sortable) {
	                    return children ? _react2.default.Children.map(children, function (child) {
	                        return _react2.default.cloneElement(child, {
	                            className: _this2.getColumnClass(child.props),
	                            onClick: _this2.handleClickColumn
	                        });
	                    }) : columns.map(function (column) {
	                        return _react2.default.createElement(
	                            _TableHeader2.default,
	                            {
	                                key: column.name,
	                                className: _this2.getColumnClass(column),
	                                name: column.name,
	                                numeric: column.numeric,
	                                tooltip: column.tooltip,
	                                onClick: _this2.handleClickColumn
	                            },
	                            column.label
	                        );
	                    });
	                }
	                return children;
	            }
	        }, {
	            key: 'render',
	            value: function render() {
	                var _props2 = this.props,
	                    rows = _props2.rows,
	                    data = _props2.data,
	                    otherProps = _objectWithoutProperties(_props2, ['rows', 'data']);
	
	                var realRows = this.state && this.state.rows || rows || data;
	
	                return _react2.default.createElement(
	                    Component,
	                    _extends({ rows: realRows }, otherProps),
	                    this.renderTableHeaders()
	                );
	            }
	        }]);
	
	        return Sortable;
	    }(_react2.default.Component);
	
	    Sortable.propTypes = propTypes;
	    return Sortable;
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DialogActions = exports.DialogContent = exports.DialogTitle = exports.Dialog = undefined;
	
	var _Dialog = __webpack_require__(23);
	
	Object.defineProperty(exports, 'Dialog', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Dialog).default;
	  }
	});
	
	var _DialogTitle = __webpack_require__(24);
	
	Object.defineProperty(exports, 'DialogTitle', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DialogTitle).default;
	  }
	});
	
	var _DialogActions = __webpack_require__(25);
	
	Object.defineProperty(exports, 'DialogActions', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DialogActions).default;
	  }
	});
	
	var _basicClassCreator = __webpack_require__(14);
	
	var _basicClassCreator2 = _interopRequireDefault(_basicClassCreator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DialogContent = exports.DialogContent = (0, _basicClassCreator2.default)('DialogContent', 'mdl-dialog__content');

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(4);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    className: _react.PropTypes.string,
	    onCancel: _react.PropTypes.func,
	    open: _react.PropTypes.bool
	};
	
	var defaultProps = {
	    onCancel: function onCancel(e) {
	        return e.preventDefault();
	    }
	};
	
	var Dialog = function (_React$Component) {
	    _inherits(Dialog, _React$Component);
	
	    function Dialog() {
	        _classCallCheck(this, Dialog);
	
	        return _possibleConstructorReturn(this, (Dialog.__proto__ || Object.getPrototypeOf(Dialog)).apply(this, arguments));
	    }
	
	    _createClass(Dialog, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.refs.dialog.addEventListener('cancel', this.props.onCancel);
	            if (this.props.open) {
	                (0, _reactDom.findDOMNode)(this).showModal();
	            }
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            if (this.props.open !== prevProps.open) {
	                if (this.props.open) {
	                    (0, _reactDom.findDOMNode)(this).showModal();
	
	                    // display the dialog at the right location
	                    // needed for the polyfill, otherwise it's not at the right position
	                    var bodyHeight = document.body.clientHeight;
	                    var dialogHeight = this.refs.dialog.clientHeight;
	                    this.refs.dialog.style.position = 'fixed';
	                    this.refs.dialog.style.top = (bodyHeight - dialogHeight) / 2 + 'px';
	                } else {
	                    (0, _reactDom.findDOMNode)(this).close();
	                }
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            this.refs.dialog.removeEventListener('cancel', this.props.onCancel);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            // We cannot set the `open` prop on the Dialog if we manage its state manually with `showModal`,
	            // this the disabled eslint rule
	            // eslint-disable-next-line no-unused-vars
	            var _props = this.props,
	                className = _props.className,
	                open = _props.open,
	                onCancel = _props.onCancel,
	                children = _props.children,
	                otherProps = _objectWithoutProperties(_props, ['className', 'open', 'onCancel', 'children']);
	
	            var classes = (0, _classnames2.default)('mdl-dialog', className);
	
	            return _react2.default.createElement(
	                'dialog',
	                _extends({ ref: 'dialog', className: classes }, otherProps),
	                children
	            );
	        }
	    }]);
	
	    return Dialog;
	}(_react2.default.Component);
	
	Dialog.propTypes = propTypes;
	Dialog.defaultProps = defaultProps;
	
	exports.default = Dialog;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var DialogTitle = function DialogTitle(props) {
	    var className = props.className,
	        component = props.component,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'component', 'children']);
	
	    return _react2.default.createElement(component || 'h4', _extends({
	        className: (0, _classnames2.default)('mdl-dialog__title', className)
	    }, otherProps), children);
	};
	
	DialogTitle.propTypes = {
	    className: _react.PropTypes.string,
	    component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.func])
	};
	
	exports.default = DialogTitle;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var DialogActions = function DialogActions(props) {
	    var className = props.className,
	        fullWidth = props.fullWidth,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'fullWidth', 'children']);
	
	    var classes = (0, _classnames2.default)('mdl-dialog__actions', {
	        'mdl-dialog__actions--full-width': fullWidth
	    }, className);
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        children
	    );
	};
	
	DialogActions.propTypes = {
	    className: _react.PropTypes.string,
	    fullWidth: _react.PropTypes.bool
	};
	
	exports.default = DialogActions;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Button = __webpack_require__(7);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var FABButton = function FABButton(props) {
	    var mini = props.mini,
	        className = props.className,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['mini', 'className', 'children']);
	
	    var classes = (0, _classnames2.default)('mdl-button--fab', {
	        'mdl-button--mini-fab': mini
	    }, className);
	
	    return _react2.default.createElement(
	        _Button2.default,
	        _extends({ className: classes }, otherProps),
	        children
	    );
	};
	
	FABButton.propTypes = {
	    className: _react.PropTypes.string,
	    mini: _react.PropTypes.bool
	};
	
	exports.default = FABButton;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Footer = __webpack_require__(28);
	
	Object.defineProperty(exports, 'Footer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Footer).default;
	  }
	});
	
	var _Section = __webpack_require__(30);
	
	Object.defineProperty(exports, 'FooterSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Section).default;
	  }
	});
	
	var _DropDownSection = __webpack_require__(31);
	
	Object.defineProperty(exports, 'FooterDropDownSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DropDownSection).default;
	  }
	});
	
	var _LinkList = __webpack_require__(32);
	
	Object.defineProperty(exports, 'FooterLinkList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LinkList).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _cloneChildren = __webpack_require__(29);
	
	var _cloneChildren2 = _interopRequireDefault(_cloneChildren);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Footer = function Footer(props) {
	    var className = props.className,
	        size = props.size,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'size', 'children']);
	
	    var classes = (0, _classnames2.default)(_defineProperty({}, 'mdl-' + size + '-footer', true), className);
	
	    return _react2.default.createElement(
	        'footer',
	        _extends({ className: classes }, otherProps),
	        (0, _cloneChildren2.default)(children, { size: size })
	    );
	};
	
	Footer.propTypes = {
	    className: _react.PropTypes.string,
	    size: _react.PropTypes.oneOf(['mini', 'mega'])
	};
	Footer.defaultProps = {
	    size: 'mega'
	};
	
	exports.default = Footer;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (children, props) {
	    return _react2.default.Children.map(children, function (child) {
	        if (!child) return child;
	        var newProps = typeof props === 'function' ? props(child) : props;
	        return _react2.default.cloneElement(child, newProps);
	    });
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _cloneChildren = __webpack_require__(29);
	
	var _cloneChildren2 = _interopRequireDefault(_cloneChildren);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Section = function Section(props) {
	    var className = props.className,
	        logo = props.logo,
	        size = props.size,
	        type = props.type,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'logo', 'size', 'type', 'children']);
	
	    var classes = (0, _classnames2.default)(_defineProperty({}, 'mdl-' + size + '-footer__' + type + '-section', true), className);
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        logo ? _react2.default.createElement(
	            'div',
	            { className: 'mdl-logo' },
	            logo
	        ) : null,
	        (0, _cloneChildren2.default)(children, { size: size })
	    );
	};
	
	Section.propTypes = {
	    className: _react.PropTypes.string,
	    logo: _react.PropTypes.node,
	    size: _react.PropTypes.oneOf(['mini', 'mega']),
	    type: _react.PropTypes.oneOf(['top', 'middle', 'bottom', 'left', 'right'])
	};
	Section.defaultProps = {
	    size: 'mega',
	    type: 'left'
	};
	
	exports.default = Section;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _cloneChildren = __webpack_require__(29);
	
	var _cloneChildren2 = _interopRequireDefault(_cloneChildren);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var DropDownSection = function DropDownSection(props) {
	    var className = props.className,
	        size = props.size,
	        title = props.title,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'size', 'title', 'children']);
	
	    var classes = (0, _classnames2.default)(_defineProperty({}, 'mdl-' + size + '-footer__drop-down-section', true), className);
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        _react2.default.createElement('input', { className: 'mdl-' + size + '-footer__heading-checkbox', type: 'checkbox', defaultChecked: true }),
	        _react2.default.createElement(
	            'h1',
	            { className: 'mdl-' + size + '-footer__heading' },
	            title
	        ),
	        (0, _cloneChildren2.default)(children, { size: size })
	    );
	};
	
	DropDownSection.propTypes = {
	    className: _react.PropTypes.string,
	    size: _react.PropTypes.oneOf(['mini', 'mega']),
	    title: _react.PropTypes.node.isRequired
	};
	DropDownSection.defaultProps = {
	    size: 'mega'
	};
	
	exports.default = DropDownSection;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var LinkList = function LinkList(props) {
	    var className = props.className,
	        size = props.size,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'size', 'children']);
	
	    var classes = (0, _classnames2.default)(_defineProperty({}, 'mdl-' + size + '-footer__link-list', true), className);
	
	    return _react2.default.createElement(
	        'ul',
	        _extends({ className: classes }, otherProps),
	        _react2.default.Children.map(children, function (child) {
	            return _react2.default.createElement(
	                'li',
	                null,
	                child
	            );
	        })
	    );
	};
	
	LinkList.propTypes = {
	    className: _react.PropTypes.string,
	    size: _react.PropTypes.oneOf(['mini', 'mega'])
	};
	LinkList.defaultProps = {
	    size: 'mega'
	};
	
	exports.default = LinkList;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Cell = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _clamp = __webpack_require__(10);
	
	var _clamp2 = _interopRequireDefault(_clamp);
	
	var _shadows = __webpack_require__(11);
	
	var _shadows2 = _interopRequireDefault(_shadows);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Grid = function Grid(props) {
	    var noSpacing = props.noSpacing,
	        className = props.className,
	        children = props.children,
	        component = props.component,
	        shadow = props.shadow,
	        otherProps = _objectWithoutProperties(props, ['noSpacing', 'className', 'children', 'component', 'shadow']);
	
	    var hasShadow = typeof shadow !== 'undefined';
	    var shadowLevel = (0, _clamp2.default)(shadow || 0, 0, _shadows2.default.length - 1);
	
	    var classes = (0, _classnames2.default)('mdl-grid', _defineProperty({
	        'mdl-grid--no-spacing': noSpacing
	    }, _shadows2.default[shadowLevel], hasShadow), className);
	
	    return _react2.default.createElement(component || 'div', _extends({
	        className: classes
	    }, otherProps), children);
	};
	
	Grid.propTypes = {
	    className: _react.PropTypes.string,
	    component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.func]),
	    noSpacing: _react.PropTypes.bool,
	    shadow: _react.PropTypes.number
	};
	
	/* eslint-disable react/no-multi-comp */
	var Cell = function Cell(props) {
	    var _classNames2;
	
	    var align = props.align,
	        className = props.className,
	        children = props.children,
	        col = props.col,
	        phone = props.phone,
	        tablet = props.tablet,
	        component = props.component,
	        hideDesktop = props.hideDesktop,
	        hidePhone = props.hidePhone,
	        hideTablet = props.hideTablet,
	        shadow = props.shadow,
	        otherProps = _objectWithoutProperties(props, ['align', 'className', 'children', 'col', 'phone', 'tablet', 'component', 'hideDesktop', 'hidePhone', 'hideTablet', 'shadow']);
	
	    var hasShadow = typeof shadow !== 'undefined';
	    var shadowLevel = (0, _clamp2.default)(shadow || 0, 0, _shadows2.default.length - 1);
	
	    var classes = (0, _classnames2.default)('mdl-cell', (_classNames2 = {}, _defineProperty(_classNames2, 'mdl-cell--' + col + '-col', true), _defineProperty(_classNames2, 'mdl-cell--' + phone + '-col-phone', typeof phone !== 'undefined'), _defineProperty(_classNames2, 'mdl-cell--' + tablet + '-col-tablet', typeof tablet !== 'undefined'), _defineProperty(_classNames2, 'mdl-cell--' + align, typeof align !== 'undefined'), _defineProperty(_classNames2, 'mdl-cell--hide-desktop', hideDesktop), _defineProperty(_classNames2, 'mdl-cell--hide-phone', hidePhone), _defineProperty(_classNames2, 'mdl-cell--hide-tablet', hideTablet), _defineProperty(_classNames2, _shadows2.default[shadowLevel], hasShadow), _classNames2), className);
	
	    return _react2.default.createElement(component || 'div', _extends({
	        className: classes
	    }, otherProps), children);
	};
	
	Cell.propTypes = {
	    align: _react.PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),
	    className: _react.PropTypes.string,
	    col: _react.PropTypes.number.isRequired,
	    component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.func]),
	    phone: _react.PropTypes.number,
	    tablet: _react.PropTypes.number,
	    hideDesktop: _react.PropTypes.bool,
	    hidePhone: _react.PropTypes.bool,
	    hideTablet: _react.PropTypes.bool,
	    shadow: _react.PropTypes.number
	};
	
	exports.default = Grid;
	exports.Cell = Cell;

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Icon = function Icon(props) {
	    var className = props.className,
	        name = props.name,
	        otherProps = _objectWithoutProperties(props, ['className', 'name']);
	
	    var classes = (0, _classnames2.default)('material-icons', className);
	
	    return _react2.default.createElement(
	        'i',
	        _extends({ className: classes }, otherProps),
	        name
	    );
	};
	
	Icon.propTypes = {
	    className: _react.PropTypes.string,
	    name: _react.PropTypes.string.isRequired
	};
	
	exports.default = Icon;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Button = __webpack_require__(7);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Icon = __webpack_require__(34);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var IconButton = function IconButton(props) {
	    var className = props.className,
	        name = props.name,
	        otherProps = _objectWithoutProperties(props, ['className', 'name']);
	
	    var classes = (0, _classnames2.default)('mdl-button--icon', className);
	
	    return _react2.default.createElement(
	        _Button2.default,
	        _extends({ className: classes }, otherProps),
	        _react2.default.createElement(_Icon2.default, { name: name })
	    );
	};
	
	IconButton.propTypes = {
	    className: _react.PropTypes.string,
	    name: _react.PropTypes.string.isRequired
	};
	
	exports.default = IconButton;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(4);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Icon = __webpack_require__(34);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    checked: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    name: _react.PropTypes.string.isRequired,
	    onChange: _react.PropTypes.func,
	    ripple: _react.PropTypes.bool
	};
	
	var IconToggle = function (_React$Component) {
	    _inherits(IconToggle, _React$Component);
	
	    function IconToggle() {
	        _classCallCheck(this, IconToggle);
	
	        return _possibleConstructorReturn(this, (IconToggle.__proto__ || Object.getPrototypeOf(IconToggle)).apply(this, arguments));
	    }
	
	    _createClass(IconToggle, [{
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            if (this.props.disabled !== prevProps.disabled) {
	                var fnName = this.props.disabled ? 'disable' : 'enable';
	                (0, _reactDom.findDOMNode)(this).MaterialIconToggle[fnName]();
	            }
	            if (this.props.checked !== prevProps.checked) {
	                var _fnName = this.props.checked ? 'check' : 'uncheck';
	                (0, _reactDom.findDOMNode)(this).MaterialIconToggle[_fnName]();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                className = _props.className,
	                name = _props.name,
	                ripple = _props.ripple,
	                inputProps = _objectWithoutProperties(_props, ['className', 'name', 'ripple']);
	
	            var classes = (0, _classnames2.default)('mdl-icon-toggle mdl-js-icon-toggle', {
	                'mdl-js-ripple-effect': ripple
	            }, className);
	
	            return _react2.default.createElement(
	                'label',
	                { className: classes },
	                _react2.default.createElement('input', _extends({
	                    type: 'checkbox',
	                    className: 'mdl-icon-toggle__input'
	                }, inputProps)),
	                _react2.default.createElement(_Icon2.default, { className: 'mdl-icon-toggle__label', name: name })
	            );
	        }
	    }]);
	
	    return IconToggle;
	}(_react2.default.Component);
	
	IconToggle.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(IconToggle);

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Layout = __webpack_require__(38);
	
	Object.defineProperty(exports, 'Layout', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Layout).default;
	  }
	});
	
	var _Content = __webpack_require__(39);
	
	Object.defineProperty(exports, 'Content', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Content).default;
	  }
	});
	
	var _Drawer = __webpack_require__(40);
	
	Object.defineProperty(exports, 'Drawer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Drawer).default;
	  }
	});
	
	var _Header = __webpack_require__(41);
	
	Object.defineProperty(exports, 'Header', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Header).default;
	  }
	});
	
	var _HeaderRow = __webpack_require__(42);
	
	Object.defineProperty(exports, 'HeaderRow', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_HeaderRow).default;
	  }
	});
	
	var _HeaderTabs = __webpack_require__(44);
	
	Object.defineProperty(exports, 'HeaderTabs', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_HeaderTabs).default;
	  }
	});
	
	var _Navigation = __webpack_require__(46);
	
	Object.defineProperty(exports, 'Navigation', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Navigation).default;
	  }
	});
	
	var _Spacer = __webpack_require__(43);
	
	Object.defineProperty(exports, 'Spacer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Spacer).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    className: _react.PropTypes.string,
	    fixedDrawer: _react.PropTypes.bool,
	    fixedHeader: _react.PropTypes.bool,
	    fixedTabs: _react.PropTypes.bool
	};
	
	// eslint-disable-next-line react/prefer-stateless-function
	
	var Layout = function (_React$Component) {
	    _inherits(Layout, _React$Component);
	
	    function Layout() {
	        _classCallCheck(this, Layout);
	
	        return _possibleConstructorReturn(this, (Layout.__proto__ || Object.getPrototypeOf(Layout)).apply(this, arguments));
	    }
	
	    _createClass(Layout, [{
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                className = _props.className,
	                fixedDrawer = _props.fixedDrawer,
	                fixedHeader = _props.fixedHeader,
	                fixedTabs = _props.fixedTabs,
	                otherProps = _objectWithoutProperties(_props, ['className', 'fixedDrawer', 'fixedHeader', 'fixedTabs']);
	
	            var classes = (0, _classnames2.default)('mdl-layout mdl-js-layout', {
	                'mdl-layout--fixed-drawer': fixedDrawer,
	                'mdl-layout--fixed-header': fixedHeader,
	                'mdl-layout--fixed-tabs': fixedTabs
	            }, className);
	
	            return _react2.default.createElement(
	                'div',
	                _extends({ className: classes }, otherProps),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'mdl-layout__inner-container' },
	                    this.props.children
	                )
	            );
	        }
	    }]);
	
	    return Layout;
	}(_react2.default.Component);
	
	Layout.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(Layout);

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Content = function Content(props) {
	    var children = props.children,
	        className = props.className,
	        component = props.component,
	        otherProps = _objectWithoutProperties(props, ['children', 'className', 'component']);
	
	    var classes = (0, _classnames2.default)('mdl-layout__content', className);
	
	    return _react2.default.createElement(component || 'div', _extends({
	        className: classes
	    }, otherProps), children);
	};
	
	Content.propTypes = {
	    className: _react.PropTypes.string,
	    component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.func])
	};
	
	exports.default = Content;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Drawer = function Drawer(props) {
	    var className = props.className,
	        title = props.title,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'title', 'children']);
	
	    var classes = (0, _classnames2.default)('mdl-layout__drawer', className);
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        title ? _react2.default.createElement(
	            'span',
	            { className: 'mdl-layout-title' },
	            title
	        ) : null,
	        children
	    );
	};
	Drawer.propTypes = {
	    className: _react.PropTypes.string,
	    title: _react.PropTypes.node
	};
	
	exports.default = Drawer;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _HeaderRow = __webpack_require__(42);
	
	var _HeaderRow2 = _interopRequireDefault(_HeaderRow);
	
	var _HeaderTabs = __webpack_require__(44);
	
	var _HeaderTabs2 = _interopRequireDefault(_HeaderTabs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Header = function Header(props) {
	    var className = props.className,
	        scroll = props.scroll,
	        seamed = props.seamed,
	        title = props.title,
	        transparent = props.transparent,
	        waterfall = props.waterfall,
	        hideTop = props.hideTop,
	        hideSpacer = props.hideSpacer,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'scroll', 'seamed', 'title', 'transparent', 'waterfall', 'hideTop', 'hideSpacer', 'children']);
	
	    var classes = (0, _classnames2.default)('mdl-layout__header', {
	        'mdl-layout__header--scroll': scroll,
	        'mdl-layout__header--seamed': seamed,
	        'mdl-layout__header--transparent': transparent,
	        'mdl-layout__header--waterfall': waterfall,
	        'mdl-layout__header--waterfall-hide-top': waterfall && hideTop
	    }, className);
	
	    var isRowOrTab = false;
	    _react2.default.Children.forEach(children, function (child) {
	        if (child && (child.type === _HeaderRow2.default || child.type === _HeaderTabs2.default)) {
	            isRowOrTab = true;
	        }
	    });
	
	    return _react2.default.createElement(
	        'header',
	        _extends({ className: classes }, otherProps),
	        isRowOrTab ? children : _react2.default.createElement(
	            _HeaderRow2.default,
	            { title: title, hideSpacer: hideSpacer },
	            children
	        )
	    );
	};
	Header.propTypes = {
	    className: _react.PropTypes.string,
	    scroll: _react.PropTypes.bool,
	    seamed: _react.PropTypes.bool,
	    title: _react.PropTypes.node,
	    transparent: _react.PropTypes.bool,
	    waterfall: _react.PropTypes.bool,
	    hideTop: _react.PropTypes.bool,
	    hideSpacer: _react.PropTypes.bool
	};
	
	exports.default = Header;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Spacer = __webpack_require__(43);
	
	var _Spacer2 = _interopRequireDefault(_Spacer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var HeaderRow = function HeaderRow(props) {
	    var className = props.className,
	        title = props.title,
	        children = props.children,
	        hideSpacer = props.hideSpacer,
	        otherProps = _objectWithoutProperties(props, ['className', 'title', 'children', 'hideSpacer']);
	
	    var classes = (0, _classnames2.default)('mdl-layout__header-row', className);
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        title && _react2.default.createElement(
	            'span',
	            { className: 'mdl-layout-title' },
	            title
	        ),
	        title && !hideSpacer && _react2.default.createElement(_Spacer2.default, null),
	        children
	    );
	};
	HeaderRow.propTypes = {
	    className: _react.PropTypes.string,
	    title: _react.PropTypes.node,
	    hideSpacer: _react.PropTypes.bool
	};
	
	exports.default = HeaderRow;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _basicClassCreator = __webpack_require__(14);
	
	var _basicClassCreator2 = _interopRequireDefault(_basicClassCreator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _basicClassCreator2.default)('Spacer', 'mdl-layout-spacer');

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _TabBar = __webpack_require__(45);
	
	var _TabBar2 = _interopRequireDefault(_TabBar);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var HeaderTabs = function HeaderTabs(props) {
	    var className = props.className,
	        ripple = props.ripple,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'ripple', 'children']);
	
	    var classes = (0, _classnames2.default)({
	        'mdl-js-ripple-effect': ripple
	    }, className);
	
	    return _react2.default.createElement(
	        _TabBar2.default,
	        _extends({ cssPrefix: 'mdl-layout', className: classes }, otherProps),
	        children
	    );
	};
	HeaderTabs.propTypes = {
	    activeTab: _react.PropTypes.number,
	    className: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    ripple: _react.PropTypes.bool
	};
	
	exports.default = HeaderTabs;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    activeTab: _react.PropTypes.number,
	    className: _react.PropTypes.string,
	    cssPrefix: _react.PropTypes.string.isRequired,
	    onChange: _react.PropTypes.func
	};
	
	var defaultProps = {
	    activeTab: 0
	};
	
	var TabBar = function (_React$Component) {
	    _inherits(TabBar, _React$Component);
	
	    function TabBar(props) {
	        _classCallCheck(this, TabBar);
	
	        var _this = _possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).call(this, props));
	
	        _this._handleClickTab = _this._handleClickTab.bind(_this);
	        return _this;
	    }
	
	    _createClass(TabBar, [{
	        key: '_handleClickTab',
	        value: function _handleClickTab(tabId) {
	            if (this.props.onChange) {
	                this.props.onChange(tabId);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;
	
	            var _props = this.props,
	                activeTab = _props.activeTab,
	                className = _props.className,
	                cssPrefix = _props.cssPrefix,
	                children = _props.children,
	                otherProps = _objectWithoutProperties(_props, ['activeTab', 'className', 'cssPrefix', 'children']);
	
	            var classes = (0, _classnames2.default)(_defineProperty({}, cssPrefix + '__tab-bar', true), className);
	
	            return _react2.default.createElement(
	                'div',
	                _extends({ className: classes }, otherProps),
	                _react2.default.Children.map(children, function (child, tabId) {
	                    return _react2.default.cloneElement(child, {
	                        cssPrefix: cssPrefix,
	                        tabId: tabId,
	                        active: tabId === activeTab,
	                        onTabClick: _this2._handleClickTab
	                    });
	                })
	            );
	        }
	    }]);
	
	    return TabBar;
	}(_react2.default.Component);
	
	TabBar.propTypes = propTypes;
	TabBar.defaultProps = defaultProps;
	
	exports.default = TabBar;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _cloneChildren = __webpack_require__(29);
	
	var _cloneChildren2 = _interopRequireDefault(_cloneChildren);
	
	var _Spacer = __webpack_require__(43);
	
	var _Spacer2 = _interopRequireDefault(_Spacer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var Navigation = function Navigation(props) {
	    var className = props.className,
	        children = props.children,
	        otherProps = _objectWithoutProperties(props, ['className', 'children']);
	
	    var classes = (0, _classnames2.default)('mdl-navigation', className);
	
	    return _react2.default.createElement(
	        'nav',
	        _extends({ className: classes }, otherProps),
	        (0, _cloneChildren2.default)(children, function (child) {
	            return {
	                className: (0, _classnames2.default)({ 'mdl-navigation__link': child.type !== _Spacer2.default }, child.props.className)
	            };
	        })
	    );
	};
	Navigation.propTypes = {
	    className: _react.PropTypes.string
	};
	
	exports.default = Navigation;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ListItemContent = exports.ListItemAction = exports.ListItem = exports.List = undefined;
	
	var _ListItem = __webpack_require__(48);
	
	Object.defineProperty(exports, 'ListItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItem).default;
	  }
	});
	
	var _ListItemAction = __webpack_require__(50);
	
	Object.defineProperty(exports, 'ListItemAction', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItemAction).default;
	  }
	});
	
	var _ListItemContent = __webpack_require__(49);
	
	Object.defineProperty(exports, 'ListItemContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItemContent).default;
	  }
	});
	
	var _basicClassCreator = __webpack_require__(14);
	
	var _basicClassCreator2 = _interopRequireDefault(_basicClassCreator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var List = exports.List = (0, _basicClassCreator2.default)('List', 'mdl-list', 'ul');

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _ListItemContent = __webpack_require__(49);
	
	var _ListItemContent2 = _interopRequireDefault(_ListItemContent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var propTypes = {
	    className: _react.PropTypes.string,
	    twoLine: _react.PropTypes.bool,
	    threeLine: _react.PropTypes.bool
	};
	
	var ListItem = function ListItem(props) {
	    var className = props.className,
	        twoLine = props.twoLine,
	        threeLine = props.threeLine,
	        otherProps = _objectWithoutProperties(props, ['className', 'twoLine', 'threeLine']);
	
	    var classes = (0, _classnames2.default)('mdl-list__item', {
	        'mdl-list__item--two-line': twoLine && !threeLine,
	        'mdl-list__item--three-line': !twoLine && threeLine
	    }, className);
	
	    var children = _react.Children.map(otherProps.children, function (child) {
	        if (typeof child === 'string') {
	            return _react2.default.createElement(
	                _ListItemContent2.default,
	                null,
	                child
	            );
	        }
	        if (child.type === _ListItemContent2.default) {
	            return (0, _react.cloneElement)(child, _extends({}, child.props, {
	                useBodyClass: !!threeLine
	            }));
	        }
	        return child;
	    });
	
	    return _react2.default.createElement(
	        'li',
	        _extends({ className: classes }, otherProps),
	        children
	    );
	};
	
	ListItem.propTypes = propTypes;
	
	exports.default = ListItem;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Icon = __webpack_require__(34);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var propTypes = {
	    avatar: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    className: _react.PropTypes.string,
	    icon: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
	    subtitle: _react.PropTypes.node,
	    useBodyClass: _react.PropTypes.bool
	};
	
	function createIcon(type, icon) {
	    if (typeof icon === 'string') {
	        return _react2.default.createElement(_Icon2.default, { className: 'mdl-list__item-' + type, name: icon });
	    }
	    return _react2.default.cloneElement(icon, { className: 'mdl-list__item-' + type });
	}
	
	var ListItemContent = function ListItemContent(props) {
	    var avatar = props.avatar,
	        children = props.children,
	        className = props.className,
	        icon = props.icon,
	        subtitle = props.subtitle,
	        useBodyClass = props.useBodyClass,
	        otherProps = _objectWithoutProperties(props, ['avatar', 'children', 'className', 'icon', 'subtitle', 'useBodyClass']);
	
	    var classes = (0, _classnames2.default)('mdl-list__item-primary-content', className);
	    var subtitleClassName = useBodyClass ? 'mdl-list__item-text-body' : 'mdl-list__item-sub-title';
	
	    var iconElement = null;
	    if (icon) {
	        iconElement = createIcon('icon', icon);
	    } else if (avatar) {
	        iconElement = createIcon('avatar', avatar);
	    }
	
	    return _react2.default.createElement(
	        'span',
	        _extends({ className: classes }, otherProps),
	        iconElement,
	        _react2.default.createElement(
	            'span',
	            null,
	            children
	        ),
	        subtitle && _react2.default.createElement(
	            'span',
	            { className: subtitleClassName },
	            subtitle
	        )
	    );
	};
	
	ListItemContent.propTypes = propTypes;
	
	exports.default = ListItemContent;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var propTypes = {
	    children: _react.PropTypes.element,
	    className: _react.PropTypes.string,
	    info: _react.PropTypes.string
	};
	
	var ListItemAction = function ListItemAction(props) {
	    var children = props.children,
	        className = props.className,
	        info = props.info,
	        otherProps = _objectWithoutProperties(props, ['children', 'className', 'info']);
	
	    var classes = (0, _classnames2.default)('mdl-list__item-secondary-content', className);
	
	    return _react2.default.createElement(
	        'span',
	        _extends({ className: classes }, otherProps),
	        info && _react2.default.createElement(
	            'span',
	            { className: 'mdl-list__item-secondary-info' },
	            info
	        ),
	        _react2.default.createElement(
	            'span',
	            { className: 'mdl-list__item-secondary-action' },
	            children
	        )
	    );
	};
	
	ListItemAction.propTypes = propTypes;
	
	exports.default = ListItemAction;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.MenuItem = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	var _basicClassCreator = __webpack_require__(14);
	
	var _basicClassCreator2 = _interopRequireDefault(_basicClassCreator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    align: _react.PropTypes.oneOf(['left', 'right']),
	    className: _react.PropTypes.string,
	    ripple: _react.PropTypes.bool,
	    target: _react.PropTypes.string.isRequired,
	    valign: _react.PropTypes.oneOf(['bottom', 'top'])
	};
	
	var defaultProps = {
	    align: 'left',
	    valign: 'bottom'
	};
	
	// eslint-disable-next-line react/prefer-stateless-function
	
	var Menu = function (_React$Component) {
	    _inherits(Menu, _React$Component);
	
	    function Menu() {
	        _classCallCheck(this, Menu);
	
	        return _possibleConstructorReturn(this, (Menu.__proto__ || Object.getPrototypeOf(Menu)).apply(this, arguments));
	    }
	
	    _createClass(Menu, [{
	        key: 'render',
	        value: function render() {
	            var _classNames;
	
	            var _props = this.props,
	                align = _props.align,
	                children = _props.children,
	                className = _props.className,
	                ripple = _props.ripple,
	                target = _props.target,
	                valign = _props.valign,
	                otherProps = _objectWithoutProperties(_props, ['align', 'children', 'className', 'ripple', 'target', 'valign']);
	
	            var classes = (0, _classnames2.default)('mdl-menu mdl-js-menu', (_classNames = {}, _defineProperty(_classNames, 'mdl-menu--' + valign + '-' + align, true), _defineProperty(_classNames, 'mdl-js-ripple-effect', ripple), _classNames), className);
	
	            return _react2.default.createElement(
	                'ul',
	                _extends({ className: classes, 'data-mdl-for': target }, otherProps),
	                children
	            );
	        }
	    }]);
	
	    return Menu;
	}(_react2.default.Component);
	
	Menu.propTypes = propTypes;
	Menu.defaultProps = defaultProps;
	
	exports.default = (0, _mdlUpgrade2.default)(Menu);
	var MenuItem = exports.MenuItem = (0, _basicClassCreator2.default)('MenuItem', 'mdl-menu__item', 'li');

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(4);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    buffer: _react.PropTypes.number,
	    className: _react.PropTypes.string,
	    indeterminate: _react.PropTypes.bool,
	    progress: _react.PropTypes.number
	};
	
	var ProgressBar = function (_React$Component) {
	    _inherits(ProgressBar, _React$Component);
	
	    function ProgressBar() {
	        _classCallCheck(this, ProgressBar);
	
	        return _possibleConstructorReturn(this, (ProgressBar.__proto__ || Object.getPrototypeOf(ProgressBar)).apply(this, arguments));
	    }
	
	    _createClass(ProgressBar, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this._setProgress(this.props.progress);
	            this._setBuffer(this.props.buffer);
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            this._setProgress(this.props.progress);
	            this._setBuffer(this.props.buffer);
	        }
	    }, {
	        key: '_setProgress',
	        value: function _setProgress(progress) {
	            if (!this.props.indeterminate && progress !== undefined) {
	                (0, _reactDom.findDOMNode)(this).MaterialProgress.setProgress(progress);
	            }
	        }
	    }, {
	        key: '_setBuffer',
	        value: function _setBuffer(buffer) {
	            if (buffer !== undefined) {
	                (0, _reactDom.findDOMNode)(this).MaterialProgress.setBuffer(buffer);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                className = _props.className,
	                indeterminate = _props.indeterminate,
	                otherProps = _objectWithoutProperties(_props, ['className', 'indeterminate']);
	
	            var classes = (0, _classnames2.default)('mdl-progress mdl-js-progress', {
	                'mdl-progress__indeterminate': indeterminate
	            }, className);
	
	            return _react2.default.createElement('div', _extends({ className: classes }, otherProps));
	        }
	    }]);
	
	    return ProgressBar;
	}(_react2.default.Component);
	
	ProgressBar.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(ProgressBar);

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(4);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    checked: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    name: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    ripple: _react.PropTypes.bool,
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]).isRequired
	};
	
	var Radio = function (_React$Component) {
	    _inherits(Radio, _React$Component);
	
	    function Radio() {
	        _classCallCheck(this, Radio);
	
	        return _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).apply(this, arguments));
	    }
	
	    _createClass(Radio, [{
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            if (this.props.disabled !== prevProps.disabled) {
	                var fnName = this.props.disabled ? 'disable' : 'enable';
	                (0, _reactDom.findDOMNode)(this).MaterialRadio[fnName]();
	            }
	            if (this.props.checked !== prevProps.checked) {
	                var _fnName = this.props.checked ? 'check' : 'uncheck';
	                (0, _reactDom.findDOMNode)(this).MaterialRadio[_fnName]();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                children = _props.children,
	                className = _props.className,
	                name = _props.name,
	                ripple = _props.ripple,
	                value = _props.value,
	                inputProps = _objectWithoutProperties(_props, ['children', 'className', 'name', 'ripple', 'value']);
	
	            var classes = (0, _classnames2.default)('mdl-radio mdl-js-radio', {
	                'mdl-js-ripple-effect': ripple
	            }, className);
	
	            return _react2.default.createElement(
	                'label',
	                { className: classes },
	                _react2.default.createElement('input', _extends({
	                    type: 'radio',
	                    className: 'mdl-radio__button',
	                    value: value,
	                    name: name
	                }, inputProps)),
	                _react2.default.createElement(
	                    'span',
	                    { className: 'mdl-radio__label' },
	                    children
	                )
	            );
	        }
	    }]);
	
	    return Radio;
	}(_react2.default.Component);
	
	Radio.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(Radio);

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Radio = __webpack_require__(53);
	
	var _Radio2 = _interopRequireDefault(_Radio);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var RadioGroup = function RadioGroup(props) {
	    var name = props.name,
	        value = props.value,
	        children = props.children,
	        container = props.container,
	        childContainer = props.childContainer,
	        onChange = props.onChange,
	        otherProps = _objectWithoutProperties(props, ['name', 'value', 'children', 'container', 'childContainer', 'onChange']);
	
	    var hasOnChange = typeof onChange === 'function';
	    var checked = hasOnChange ? 'checked' : 'defaultChecked';
	
	    return _react2.default.createElement(container, otherProps, _react2.default.Children.map(children, function (child) {
	        var _extends2;
	
	        var clonedChild = _react2.default.cloneElement(child, _extends((_extends2 = {}, _defineProperty(_extends2, checked, child.props.value === value), _defineProperty(_extends2, 'name', name), _defineProperty(_extends2, 'onChange', onChange), _extends2), otherProps));
	
	        return childContainer ? _react2.default.createElement(childContainer, {}, clonedChild) : clonedChild;
	    }));
	};
	
	RadioGroup.propTypes = {
	    childContainer: _react.PropTypes.string,
	    children: _react.PropTypes.arrayOf(function (props, propName, componentName) {
	        var prop = props[propName];
	        return prop.type !== _Radio2.default && new Error('\'' + componentName + '\' only accepts \'Radio\' as children.');
	    }),
	    container: _react.PropTypes.string,
	    name: _react.PropTypes.string.isRequired,
	    onChange: _react.PropTypes.func,
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]).isRequired
	};
	
	RadioGroup.defaultProps = {
	    container: 'div'
	};
	
	exports.default = RadioGroup;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(4);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    className: _react.PropTypes.string,
	    max: _react.PropTypes.number.isRequired,
	    min: _react.PropTypes.number.isRequired,
	    onChange: _react.PropTypes.func,
	    value: _react.PropTypes.number
	};
	
	var Slider = function (_React$Component) {
	    _inherits(Slider, _React$Component);
	
	    function Slider() {
	        _classCallCheck(this, Slider);
	
	        return _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).apply(this, arguments));
	    }
	
	    _createClass(Slider, [{
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            if (typeof this.props.value !== 'undefined') {
	                (0, _reactDom.findDOMNode)(this).MaterialSlider.change(this.props.value);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                className = _props.className,
	                otherProps = _objectWithoutProperties(_props, ['className']);
	
	            var classes = (0, _classnames2.default)('mdl-slider mdl-js-slider', className);
	
	            return _react2.default.createElement('input', _extends({
	                className: classes,
	                type: 'range'
	            }, otherProps));
	        }
	    }]);
	
	    return Slider;
	}(_react2.default.Component);
	
	Slider.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(Slider);

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	// This component doesn't use the javascript from MDL.
	// This is the expected behavior and the reason is because it's not written in
	// a way to make it easy to use with React.
	var ANIMATION_LENGTH = 250;
	
	var propTypes = {
	    action: _react.PropTypes.string,
	    active: _react.PropTypes.bool.isRequired,
	    className: _react.PropTypes.string,
	    onActionClick: _react.PropTypes.func,
	    onTimeout: _react.PropTypes.func.isRequired,
	    timeout: _react.PropTypes.number
	};
	
	var defaultProps = {
	    timeout: 2750
	};
	
	var Snackbar = function (_React$Component) {
	    _inherits(Snackbar, _React$Component);
	
	    function Snackbar(props) {
	        _classCallCheck(this, Snackbar);
	
	        var _this = _possibleConstructorReturn(this, (Snackbar.__proto__ || Object.getPrototypeOf(Snackbar)).call(this, props));
	
	        _this.clearTimer = _this.clearTimer.bind(_this);
	        _this.timeoutId = null;
	        _this.clearTimeoutId = null;
	        _this.state = {
	            open: false
	        };
	        return _this;
	    }
	
	    _createClass(Snackbar, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            this.setState({
	                open: nextProps.active
	            });
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            if (this.timeoutId) {
	                clearTimeout(this.timeoutId);
	            }
	
	            if (this.props.active) {
	                this.timeoutId = setTimeout(this.clearTimer, this.props.timeout);
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            if (this.timeoutId) {
	                clearTimeout(this.timeoutId);
	                this.timeoutId = null;
	            }
	            if (this.clearTimeoutId) {
	                clearTimeout(this.clearTimeoutId);
	                this.clearTimeoutId = null;
	            }
	        }
	    }, {
	        key: 'clearTimer',
	        value: function clearTimer() {
	            var _this2 = this;
	
	            this.timeoutId = null;
	            this.setState({ open: false });
	
	            this.clearTimeoutId = setTimeout(function () {
	                _this2.clearTimeoutId = null;
	                _this2.props.onTimeout();
	            }, ANIMATION_LENGTH);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                action = _props.action,
	                active = _props.active,
	                className = _props.className,
	                children = _props.children,
	                onActionClick = _props.onActionClick,
	                otherProps = _objectWithoutProperties(_props, ['action', 'active', 'className', 'children', 'onActionClick']);
	
	            var open = this.state.open;
	
	
	            var classes = (0, _classnames2.default)('mdl-snackbar', {
	                'mdl-snackbar--active': open
	            }, className);
	
	            return _react2.default.createElement(
	                'div',
	                _extends({ ref: 'snackbar', className: classes, 'aria-hidden': !open }, otherProps),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'mdl-snackbar__text' },
	                    active && children
	                ),
	                active && action && _react2.default.createElement(
	                    'button',
	                    { className: 'mdl-snackbar__action', type: 'button', onClick: onActionClick },
	                    action
	                )
	            );
	        }
	    }]);
	
	    return Snackbar;
	}(_react2.default.Component);
	
	Snackbar.propTypes = propTypes;
	Snackbar.defaultProps = defaultProps;
	
	exports.default = Snackbar;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    className: _react.PropTypes.string,
	    singleColor: _react.PropTypes.bool
	};
	
	// eslint-disable-next-line react/prefer-stateless-function
	
	var Spinner = function (_React$Component) {
	    _inherits(Spinner, _React$Component);
	
	    function Spinner() {
	        _classCallCheck(this, Spinner);
	
	        return _possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).apply(this, arguments));
	    }
	
	    _createClass(Spinner, [{
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                className = _props.className,
	                singleColor = _props.singleColor,
	                otherProps = _objectWithoutProperties(_props, ['className', 'singleColor']);
	
	            var classes = (0, _classnames2.default)('mdl-spinner mdl-js-spinner is-active', {
	                'mdl-spinner--single-color': singleColor
	            }, className);
	
	            return _react2.default.createElement('div', _extends({ className: classes }, otherProps));
	        }
	    }]);
	
	    return Spinner;
	}(_react2.default.Component);
	
	Spinner.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(Spinner);

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(4);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    checked: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    onChange: _react.PropTypes.func,
	    ripple: _react.PropTypes.bool
	};
	
	var Switch = function (_React$Component) {
	    _inherits(Switch, _React$Component);
	
	    function Switch() {
	        _classCallCheck(this, Switch);
	
	        return _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).apply(this, arguments));
	    }
	
	    _createClass(Switch, [{
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            if (this.props.disabled !== prevProps.disabled) {
	                var fnName = this.props.disabled ? 'disable' : 'enable';
	                (0, _reactDom.findDOMNode)(this).MaterialSwitch[fnName]();
	            }
	            if (this.props.checked !== prevProps.checked) {
	                var _fnName = this.props.checked ? 'on' : 'off';
	                (0, _reactDom.findDOMNode)(this).MaterialSwitch[_fnName]();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                className = _props.className,
	                ripple = _props.ripple,
	                children = _props.children,
	                inputProps = _objectWithoutProperties(_props, ['className', 'ripple', 'children']);
	
	            var classes = (0, _classnames2.default)('mdl-switch mdl-js-switch', {
	                'mdl-js-ripple-effect': ripple
	            }, className);
	
	            return _react2.default.createElement(
	                'label',
	                { className: classes },
	                _react2.default.createElement('input', _extends({
	                    type: 'checkbox',
	                    className: 'mdl-switch__input'
	                }, inputProps)),
	                _react2.default.createElement(
	                    'span',
	                    { className: 'mdl-switch__label' },
	                    children
	                )
	            );
	        }
	    }]);
	
	    return Switch;
	}(_react2.default.Component);
	
	Switch.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(Switch);

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Tabs = __webpack_require__(60);
	
	Object.defineProperty(exports, 'Tabs', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Tabs).default;
	  }
	});
	
	var _TabBar = __webpack_require__(45);
	
	Object.defineProperty(exports, 'TabBar', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TabBar).default;
	  }
	});
	
	var _Tab = __webpack_require__(61);
	
	Object.defineProperty(exports, 'Tab', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Tab).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Tab = __webpack_require__(61);
	
	var _Tab2 = _interopRequireDefault(_Tab);
	
	var _TabBar = __webpack_require__(45);
	
	var _TabBar2 = _interopRequireDefault(_TabBar);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var TabPropType = function TabPropType(props, propName, componentName) {
	    var prop = props[propName];
	    return prop.type !== _Tab2.default && new Error('\'' + componentName + '\' only accepts \'Tab\' as children.');
	};
	
	var propTypes = {
	    activeTab: _react.PropTypes.number,
	    children: _react.PropTypes.oneOfType([TabPropType, _react.PropTypes.arrayOf(TabPropType)]),
	    className: _react.PropTypes.string,
	    onChange: _react.PropTypes.func,
	    tabBarProps: _react.PropTypes.object
	};
	
	var Tabs = function Tabs(props) {
	    var activeTab = props.activeTab,
	        className = props.className,
	        onChange = props.onChange,
	        children = props.children,
	        tabBarProps = props.tabBarProps,
	        otherProps = _objectWithoutProperties(props, ['activeTab', 'className', 'onChange', 'children', 'tabBarProps']);
	
	    var classes = (0, _classnames2.default)('mdl-tabs is-upgraded', className);
	
	    return _react2.default.createElement(
	        'div',
	        _extends({ className: classes }, otherProps),
	        _react2.default.createElement(
	            _TabBar2.default,
	            _extends({ cssPrefix: 'mdl-tabs', activeTab: activeTab, onChange: onChange }, tabBarProps),
	            children
	        )
	    );
	};
	
	Tabs.propTypes = propTypes;
	
	exports.default = Tabs;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var propTypes = {
	    active: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element, _react.PropTypes.func]),
	    cssPrefix: _react.PropTypes.string,
	    onTabClick: _react.PropTypes.func,
	    style: _react.PropTypes.object,
	    tabId: _react.PropTypes.number
	};
	
	var defaultProps = {
	    style: {}
	};
	
	var Tab = function Tab(props) {
	    var _classNames;
	
	    var active = props.active,
	        className = props.className,
	        component = props.component,
	        children = props.children,
	        cssPrefix = props.cssPrefix,
	        onTabClick = props.onTabClick,
	        style = props.style,
	        tabId = props.tabId,
	        otherProps = _objectWithoutProperties(props, ['active', 'className', 'component', 'children', 'cssPrefix', 'onTabClick', 'style', 'tabId']);
	
	    var classes = (0, _classnames2.default)((_classNames = {}, _defineProperty(_classNames, cssPrefix + '__tab', true), _defineProperty(_classNames, 'is-active', active), _classNames), className);
	
	    style.cursor = 'pointer';
	
	    return _react2.default.createElement(component || 'a', _extends({
	        className: classes,
	        onClick: function onClick() {
	            return onTabClick(tabId);
	        },
	        style: style
	    }, otherProps), children);
	};
	
	Tab.propTypes = propTypes;
	Tab.defaultProps = defaultProps;
	
	exports.default = Tab;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(4);
	
	var _classnames = __webpack_require__(6);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _mdlUpgrade = __webpack_require__(1);
	
	var _mdlUpgrade2 = _interopRequireDefault(_mdlUpgrade);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	    className: _react.PropTypes.string,
	    disabled: _react.PropTypes.bool,
	    error: _react.PropTypes.node,
	    expandable: _react.PropTypes.bool,
	    expandableIcon: _react.PropTypes.string,
	    floatingLabel: _react.PropTypes.bool,
	    id: _react.PropTypes.string,
	    inputClassName: _react.PropTypes.string,
	    label: _react.PropTypes.string.isRequired,
	    maxRows: _react.PropTypes.number,
	    onChange: _react.PropTypes.func,
	    pattern: _react.PropTypes.string,
	    required: _react.PropTypes.bool,
	    rows: _react.PropTypes.number,
	    style: _react.PropTypes.object,
	    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
	};
	
	var Textfield = function (_React$Component) {
	    _inherits(Textfield, _React$Component);
	
	    function Textfield() {
	        _classCallCheck(this, Textfield);
	
	        return _possibleConstructorReturn(this, (Textfield.__proto__ || Object.getPrototypeOf(Textfield)).apply(this, arguments));
	    }
	
	    _createClass(Textfield, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (this.props.error && !this.props.pattern) {
	                this.setAsInvalid();
	            }
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            if (this.props.required !== prevProps.required || this.props.pattern !== prevProps.pattern || this.props.error !== prevProps.error) {
	                (0, _reactDom.findDOMNode)(this).MaterialTextfield.checkValidity();
	            }
	            if (this.props.disabled !== prevProps.disabled) {
	                (0, _reactDom.findDOMNode)(this).MaterialTextfield.checkDisabled();
	            }
	            if (this.props.value !== prevProps.value && this.refs.input !== document.activeElement) {
	                (0, _reactDom.findDOMNode)(this).MaterialTextfield.change(this.props.value);
	            }
	            if (this.props.error && !this.props.pattern) {
	                // Every time the input gets updated by MDL (checkValidity() or change())
	                // its invalid class gets reset. We have to put it again if the input is specifically set as "invalid"
	                this.setAsInvalid();
	            }
	        }
	    }, {
	        key: 'setAsInvalid',
	        value: function setAsInvalid() {
	            var elt = (0, _reactDom.findDOMNode)(this);
	            if (elt.className.indexOf('is-invalid') < 0) {
	                elt.className = (0, _classnames2.default)(elt.className, 'is-invalid');
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props,
	                className = _props.className,
	                inputClassName = _props.inputClassName,
	                id = _props.id,
	                error = _props.error,
	                expandable = _props.expandable,
	                expandableIcon = _props.expandableIcon,
	                floatingLabel = _props.floatingLabel,
	                label = _props.label,
	                maxRows = _props.maxRows,
	                rows = _props.rows,
	                style = _props.style,
	                otherProps = _objectWithoutProperties(_props, ['className', 'inputClassName', 'id', 'error', 'expandable', 'expandableIcon', 'floatingLabel', 'label', 'maxRows', 'rows', 'style']);
	
	            var hasRows = !!rows;
	            var customId = id || 'textfield-' + label.replace(/[^a-z0-9]/gi, '');
	            var inputTag = hasRows || maxRows > 1 ? 'textarea' : 'input';
	
	            var inputProps = _extends({
	                className: (0, _classnames2.default)('mdl-textfield__input', inputClassName),
	                id: customId,
	                rows: rows,
	                ref: 'input'
	            }, otherProps);
	
	            var input = _react2.default.createElement(inputTag, inputProps);
	            var labelContainer = _react2.default.createElement(
	                'label',
	                { className: 'mdl-textfield__label', htmlFor: customId },
	                label
	            );
	            var errorContainer = !!error && _react2.default.createElement(
	                'span',
	                { className: 'mdl-textfield__error' },
	                error
	            );
	
	            var containerClasses = (0, _classnames2.default)('mdl-textfield mdl-js-textfield', {
	                'mdl-textfield--floating-label': floatingLabel,
	                'mdl-textfield--expandable': expandable
	            }, className);
	
	            return expandable ? _react2.default.createElement(
	                'div',
	                { className: containerClasses, style: style },
	                _react2.default.createElement(
	                    'label',
	                    { className: 'mdl-button mdl-js-button mdl-button--icon', htmlFor: customId },
	                    _react2.default.createElement(
	                        'i',
	                        { className: 'material-icons' },
	                        expandableIcon
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'mdl-textfield__expandable-holder' },
	                    input,
	                    labelContainer,
	                    errorContainer
	                )
	            ) : _react2.default.createElement(
	                'div',
	                { className: containerClasses, style: style },
	                input,
	                labelContainer,
	                errorContainer
	            );
	        }
	    }]);
	
	    return Textfield;
	}(_react2.default.Component);
	
	Textfield.propTypes = propTypes;
	
	exports.default = (0, _mdlUpgrade2.default)(Textfield);

/***/ }
/******/ ])
});
;
//# sourceMappingURL=ReactMDL.js.map
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(loadFlags["lang"]))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.transpiledLanguages_) {
          goog.transpiledLanguages_ = {"es5":true, "es6":true, "es6-impl":true};
          try {
            goog.transpiledLanguages_["es5"] = eval("[1,].length!\x3d1");
            var es6implTest = "let a\x3d{};const X\x3dclass{constructor(){}x(z){return new Map([" + "...arguments]).get(z[0])\x3d\x3d3}};return new X().x([a,3])";
            var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
            if (eval('(()\x3d\x3e{"use strict";' + es6implTest + "})()")) {
              goog.transpiledLanguages_["es6-impl"] = false;
            }
            if (eval('(()\x3d\x3e{"use strict";' + es6fullTest + "})()")) {
              goog.transpiledLanguages_["es6"] = false;
            }
          } catch (err) {
          }
        }
      }
    }
    return !!goog.transpiledLanguages_[lang];
  };
  goog.transpiledLanguages_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var needsTranspile = goog.needsTranspile_(loadFlags["lang"]);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0;i < separators.length;i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / (v2);
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call((opt_obj), obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call((opt_obj), obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call((opt_obj), obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call((opt_obj), obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call((opt_obj), obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call((opt_this), obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1;i >= 0;i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0;value >= pow;i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0;i < this.bits_.length;i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0;i < this.bits_.length;i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0;i < len;i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0;i < arr_index;i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0;i <= len;i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0;i < 2 * len;i++) {
    arr[i] = 0;
  }
  for (var i = 0;i < this.bits_.length;i++) {
    for (var j = 0;j < other.bits_.length;j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0;i < len;i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len;i < 2 * len;i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0;i < len;i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0;i < len;i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0;i < len;i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call((opt_obj), arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call((opt_obj), arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call((opt_obj), val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call((opt_obj), arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call((opt_obj), rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call((opt_obj), rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call((opt_obj), arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call((opt_obj), element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call((opt_obj), arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call((opt_obj), val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = (compareFn)(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0;i < arr.length;i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call((opt_obj), value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call((opt_obj), element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Long");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
      return new goog.math.Long(val | 0, val < 0 ? -1 : 0);
    });
  } else {
    return new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.ZERO, function() {
    return goog.math.Long.fromInt(0);
  });
};
goog.math.Long.getOne = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.ONE, function() {
    return goog.math.Long.fromInt(1);
  });
};
goog.math.Long.getNegOne = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.NEG_ONE, function() {
    return goog.math.Long.fromInt(-1);
  });
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, ZERO:3, ONE:4, NEG_ONE:5, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.9.293";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__32376__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__32376 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__32377__i = 0, G__32377__a = new Array(arguments.length - 0);
        while (G__32377__i < G__32377__a.length) {
          G__32377__a[G__32377__i] = arguments[G__32377__i + 0];
          ++G__32377__i;
        }
        args = new cljs.core.IndexedSeq(G__32377__a, 0);
      }
      return G__32376__delegate.call(this, args);
    };
    G__32376.cljs$lang$maxFixedArity = 0;
    G__32376.cljs$lang$applyTo = function(arglist__32378) {
      var args = cljs.core.seq(arglist__32378);
      return G__32376__delegate(args);
    };
    G__32376.cljs$core$IFn$_invoke$arity$variadic = G__32376__delegate;
    return G__32376;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__32379__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__32379 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__32380__i = 0, G__32380__a = new Array(arguments.length - 0);
        while (G__32380__i < G__32380__a.length) {
          G__32380__a[G__32380__i] = arguments[G__32380__i + 0];
          ++G__32380__i;
        }
        args = new cljs.core.IndexedSeq(G__32380__a, 0);
      }
      return G__32379__delegate.call(this, args);
    };
    G__32379.cljs$lang$maxFixedArity = 0;
    G__32379.cljs$lang$applyTo = function(arglist__32381) {
      var args = cljs.core.seq(arglist__32381);
      return G__32379__delegate(args);
    };
    G__32379.cljs$core$IFn$_invoke$arity$variadic = G__32379__delegate;
    return G__32379;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__30084__auto__ = ty;
    if (cljs.core.truth_(and__30084__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__30084__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args32382 = [];
  var len__31204__auto___32388 = arguments.length;
  var i__31205__auto___32389 = 0;
  while (true) {
    if (i__31205__auto___32389 < len__31204__auto___32388) {
      args32382.push(arguments[i__31205__auto___32389]);
      var G__32390 = i__31205__auto___32389 + 1;
      i__31205__auto___32389 = G__32390;
      continue;
    } else {
    }
    break;
  }
  var G__32387 = args32382.length;
  switch(G__32387) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32382.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__31014__auto___32392 = dimarray.length;
  var i_32393 = 0;
  while (true) {
    if (i_32393 < n__31014__auto___32392) {
      dimarray[i_32393] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__32394 = i_32393 + 1;
      i_32393 = G__32394;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq32383) {
  var G__32384 = cljs.core.first(seq32383);
  var seq32383__$1 = cljs.core.next(seq32383);
  var G__32385 = cljs.core.first(seq32383__$1);
  var seq32383__$2 = cljs.core.next(seq32383__$1);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(G__32384, G__32385, seq32383__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__31014__auto___32395 = len;
  var i_32396 = 0;
  while (true) {
    if (i_32396 < n__31014__auto___32395) {
      new_arr[i_32396] = arr[i_32396];
      var G__32397 = i_32396 + 1;
      i_32396 = G__32397;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__32398 = i + 1;
      i = G__32398;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget(var_args) {
  var args32399 = [];
  var len__31204__auto___32408 = arguments.length;
  var i__31205__auto___32409 = 0;
  while (true) {
    if (i__31205__auto___32409 < len__31204__auto___32408) {
      args32399.push(arguments[i__31205__auto___32409]);
      var G__32410 = i__31205__auto___32409 + 1;
      i__31205__auto___32409 = G__32410;
      continue;
    } else {
    }
    break;
  }
  var G__32404 = args32399.length;
  switch(G__32404) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32399.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__32405 = cljs.core.aget;
  var G__32406 = array[i];
  var G__32407 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__32405, G__32406, G__32407) : cljs.core.apply.call(null, G__32405, G__32406, G__32407);
};
cljs.core.aget.cljs$lang$applyTo = function(seq32400) {
  var G__32401 = cljs.core.first(seq32400);
  var seq32400__$1 = cljs.core.next(seq32400);
  var G__32402 = cljs.core.first(seq32400__$1);
  var seq32400__$2 = cljs.core.next(seq32400__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__32401, G__32402, seq32400__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args32412 = [];
  var len__31204__auto___32423 = arguments.length;
  var i__31205__auto___32424 = 0;
  while (true) {
    if (i__31205__auto___32424 < len__31204__auto___32423) {
      args32412.push(arguments[i__31205__auto___32424]);
      var G__32425 = i__31205__auto___32424 + 1;
      i__31205__auto___32424 = G__32425;
      continue;
    } else {
    }
    break;
  }
  var G__32418 = args32412.length;
  switch(G__32418) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32412.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__32419 = cljs.core.aset;
  var G__32420 = array[idx];
  var G__32421 = idx2;
  var G__32422 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__32419, G__32420, G__32421, G__32422) : cljs.core.apply.call(null, G__32419, G__32420, G__32421, G__32422);
};
cljs.core.aset.cljs$lang$applyTo = function(seq32413) {
  var G__32414 = cljs.core.first(seq32413);
  var seq32413__$1 = cljs.core.next(seq32413);
  var G__32415 = cljs.core.first(seq32413__$1);
  var seq32413__$2 = cljs.core.next(seq32413__$1);
  var G__32416 = cljs.core.first(seq32413__$2);
  var seq32413__$3 = cljs.core.next(seq32413__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__32414, G__32415, G__32416, seq32413__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args32427 = [];
  var len__31204__auto___32433 = arguments.length;
  var i__31205__auto___32434 = 0;
  while (true) {
    if (i__31205__auto___32434 < len__31204__auto___32433) {
      args32427.push(arguments[i__31205__auto___32434]);
      var G__32435 = i__31205__auto___32434 + 1;
      i__31205__auto___32434 = G__32435;
      continue;
    } else {
    }
    break;
  }
  var G__32429 = args32427.length;
  switch(G__32429) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32427.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__32430 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__32431 = [];
  var G__32432 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__32430, G__32431, G__32432) : cljs.core.reduce.call(null, G__32430, G__32431, G__32432);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___32440 = arguments.length;
  var i__31205__auto___32441 = 0;
  while (true) {
    if (i__31205__auto___32441 < len__31204__auto___32440) {
      args__31211__auto__.push(arguments[i__31205__auto___32441]);
      var G__32442 = i__31205__auto___32441 + 1;
      i__31205__auto___32441 = G__32442;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 2 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31212__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq32437) {
  var G__32438 = cljs.core.first(seq32437);
  var seq32437__$1 = cljs.core.next(seq32437);
  var G__32439 = cljs.core.first(seq32437__$1);
  var seq32437__$2 = cljs.core.next(seq32437__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__32438, G__32439, seq32437__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args32443 = [];
  var len__31204__auto___32446 = arguments.length;
  var i__31205__auto___32447 = 0;
  while (true) {
    if (i__31205__auto___32447 < len__31204__auto___32446) {
      args32443.push(arguments[i__31205__auto___32447]);
      var G__32448 = i__31205__auto___32447 + 1;
      i__31205__auto___32447 = G__32448;
      continue;
    } else {
    }
    break;
  }
  var G__32445 = args32443.length;
  switch(G__32445) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32443.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__30760__auto__.call(null, this$, a);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__30760__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__30760__auto__.call(null, this$, a, b);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__30760__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$4 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__30760__auto__.call(null, this$, a, b, c);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__30760__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$5 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__30760__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__30760__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$6 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__30760__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__30760__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$7 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__30760__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$8 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$9 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$10 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$11 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$12 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$13 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$14 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$15 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$16 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$17 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$18 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$19 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$20 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$21 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._invoke[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$22 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__30760__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__30760__auto____$1 = cljs.core._invoke["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__30760__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__30759__auto__ = value == null ? null : value;
    var m__30760__auto__ = cljs.core._clone[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__30760__auto__.call(null, value);
    } else {
      var m__30760__auto____$1 = cljs.core._clone["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__30760__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._count[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._count["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._empty[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._empty["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._conj[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__30760__auto__.call(null, coll, o);
    } else {
      var m__30760__auto____$1 = cljs.core._conj["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__30760__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args32450 = [];
  var len__31204__auto___32453 = arguments.length;
  var i__31205__auto___32454 = 0;
  while (true) {
    if (i__31205__auto___32454 < len__31204__auto___32453) {
      args32450.push(arguments[i__31205__auto___32454]);
      var G__32455 = i__31205__auto___32454 + 1;
      i__31205__auto___32454 = G__32455;
      continue;
    } else {
    }
    break;
  }
  var G__32452 = args32450.length;
  switch(G__32452) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32450.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._nth[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__30760__auto__.call(null, coll, n);
    } else {
      var m__30760__auto____$1 = cljs.core._nth["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__30760__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._nth[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__30760__auto__.call(null, coll, n, not_found);
    } else {
      var m__30760__auto____$1 = cljs.core._nth["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__30760__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._first[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._first["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._rest[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._rest["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._next[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._next["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args32457 = [];
  var len__31204__auto___32460 = arguments.length;
  var i__31205__auto___32461 = 0;
  while (true) {
    if (i__31205__auto___32461 < len__31204__auto___32460) {
      args32457.push(arguments[i__31205__auto___32461]);
      var G__32462 = i__31205__auto___32461 + 1;
      i__31205__auto___32461 = G__32462;
      continue;
    } else {
    }
    break;
  }
  var G__32459 = args32457.length;
  switch(G__32459) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32457.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._lookup[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__30760__auto__.call(null, o, k);
    } else {
      var m__30760__auto____$1 = cljs.core._lookup["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__30760__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._lookup[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__30760__auto__.call(null, o, k, not_found);
    } else {
      var m__30760__auto____$1 = cljs.core._lookup["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__30760__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__30760__auto__.call(null, coll, k);
    } else {
      var m__30760__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__30760__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._assoc[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__30760__auto__.call(null, coll, k, v);
    } else {
      var m__30760__auto____$1 = cljs.core._assoc["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__30760__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._dissoc[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__30760__auto__.call(null, coll, k);
    } else {
      var m__30760__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__30760__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._key[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._key["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._val[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._val["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._disjoin[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__30760__auto__.call(null, coll, v);
    } else {
      var m__30760__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__30760__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._peek[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._peek["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._pop[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._pop["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._assoc_n[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__30760__auto__.call(null, coll, n, val);
    } else {
      var m__30760__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__30760__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._deref[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__30760__auto__.call(null, o);
    } else {
      var m__30760__auto____$1 = cljs.core._deref["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__30760__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__30760__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__30760__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__30760__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._meta[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__30760__auto__.call(null, o);
    } else {
      var m__30760__auto____$1 = cljs.core._meta["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__30760__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._with_meta[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__30760__auto__.call(null, o, meta);
    } else {
      var m__30760__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__30760__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args32464 = [];
  var len__31204__auto___32467 = arguments.length;
  var i__31205__auto___32468 = 0;
  while (true) {
    if (i__31205__auto___32468 < len__31204__auto___32467) {
      args32464.push(arguments[i__31205__auto___32468]);
      var G__32469 = i__31205__auto___32468 + 1;
      i__31205__auto___32468 = G__32469;
      continue;
    } else {
    }
    break;
  }
  var G__32466 = args32464.length;
  switch(G__32466) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32464.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._reduce[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__30760__auto__.call(null, coll, f);
    } else {
      var m__30760__auto____$1 = cljs.core._reduce["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__30760__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._reduce[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__30760__auto__.call(null, coll, f, start);
    } else {
      var m__30760__auto____$1 = cljs.core._reduce["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__30760__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._kv_reduce[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__30760__auto__.call(null, coll, f, init);
    } else {
      var m__30760__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__30760__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._equiv[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__30760__auto__.call(null, o, other);
    } else {
      var m__30760__auto____$1 = cljs.core._equiv["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__30760__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._hash[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__30760__auto__.call(null, o);
    } else {
      var m__30760__auto____$1 = cljs.core._hash["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__30760__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._seq[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__30760__auto__.call(null, o);
    } else {
      var m__30760__auto____$1 = cljs.core._seq["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__30760__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._rseq[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._rseq["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._sorted_seq[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__30760__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__30760__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__30760__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__30760__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__30760__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__30760__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._entry_key[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__30760__auto__.call(null, coll, entry);
    } else {
      var m__30760__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__30760__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._comparator[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._comparator["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__30759__auto__ = writer == null ? null : writer;
    var m__30760__auto__ = cljs.core._write[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__30760__auto__.call(null, writer, s);
    } else {
      var m__30760__auto____$1 = cljs.core._write["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__30760__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__30759__auto__ = writer == null ? null : writer;
    var m__30760__auto__ = cljs.core._flush[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__30760__auto__.call(null, writer);
    } else {
      var m__30760__auto____$1 = cljs.core._flush["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__30760__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._pr_writer[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__30760__auto__.call(null, o, writer, opts);
    } else {
      var m__30760__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__30760__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto__.call(null, x);
    } else {
      var m__30760__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._notify_watches[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__30760__auto__.call(null, this$, oldval, newval);
    } else {
      var m__30760__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__30760__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._add_watch[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__30760__auto__.call(null, this$, key, f);
    } else {
      var m__30760__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__30760__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core._remove_watch[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__30760__auto__.call(null, this$, key);
    } else {
      var m__30760__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__30760__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._as_transient[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__30759__auto__ = tcoll == null ? null : tcoll;
    var m__30760__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__30760__auto__.call(null, tcoll, val);
    } else {
      var m__30760__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__30760__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__30759__auto__ = tcoll == null ? null : tcoll;
    var m__30760__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__30760__auto__.call(null, tcoll);
    } else {
      var m__30760__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__30760__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__30759__auto__ = tcoll == null ? null : tcoll;
    var m__30760__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__30760__auto__.call(null, tcoll, key, val);
    } else {
      var m__30760__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__30760__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__30759__auto__ = tcoll == null ? null : tcoll;
    var m__30760__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__30760__auto__.call(null, tcoll, key);
    } else {
      var m__30760__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__30760__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__30759__auto__ = tcoll == null ? null : tcoll;
    var m__30760__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__30760__auto__.call(null, tcoll, n, val);
    } else {
      var m__30760__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__30760__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__30759__auto__ = tcoll == null ? null : tcoll;
    var m__30760__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__30760__auto__.call(null, tcoll);
    } else {
      var m__30760__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__30760__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__30759__auto__ = tcoll == null ? null : tcoll;
    var m__30760__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__30760__auto__.call(null, tcoll, v);
    } else {
      var m__30760__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__30760__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = cljs.core._compare[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__30760__auto__.call(null, x, y);
    } else {
      var m__30760__auto____$1 = cljs.core._compare["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__30760__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._drop_first[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._chunked_first[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._chunked_rest[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._chunked_next[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = cljs.core._name[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto__.call(null, x);
    } else {
      var m__30760__auto____$1 = cljs.core._name["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = cljs.core._namespace[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto__.call(null, x);
    } else {
      var m__30760__auto____$1 = cljs.core._namespace["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__30760__auto__.call(null, o, new_value);
    } else {
      var m__30760__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__30760__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args32471 = [];
  var len__31204__auto___32474 = arguments.length;
  var i__31205__auto___32475 = 0;
  while (true) {
    if (i__31205__auto___32475 < len__31204__auto___32474) {
      args32471.push(arguments[i__31205__auto___32475]);
      var G__32476 = i__31205__auto___32475 + 1;
      i__31205__auto___32475 = G__32476;
      continue;
    } else {
    }
    break;
  }
  var G__32473 = args32471.length;
  switch(G__32473) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32471.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__30760__auto__.call(null, o, f);
    } else {
      var m__30760__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__30760__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__30760__auto__.call(null, o, f, a);
    } else {
      var m__30760__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__30760__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$4 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__30760__auto__.call(null, o, f, a, b);
    } else {
      var m__30760__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__30760__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$5 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__30760__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__30760__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__30760__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__30759__auto__ = o == null ? null : o;
    var m__30760__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__30760__auto__.call(null, o, new_value);
    } else {
      var m__30760__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__30760__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__30759__auto__ = coll == null ? null : coll;
    var m__30760__auto__ = cljs.core._iterator[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto__.call(null, coll);
    } else {
      var m__30760__auto____$1 = cljs.core._iterator["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__30760__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__32478 = i + 2;
        var G__32479 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__32478;
        h1 = G__32479;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__32482 = i + 1;
          var G__32483 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__32482;
          hash = G__32483;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__32491 = o;
        switch(G__32491) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__30084__auto__ = cljs.core.not(a.ns);
      if (and__30084__auto__) {
        return b.ns;
      } else {
        return and__30084__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__32499 = a.ns;
            var G__32500 = b.ns;
            return goog.array.defaultCompare(G__32499, G__32500);
          }();
          if (0 === nsc) {
            var G__32501 = a.name;
            var G__32502 = b.name;
            return goog.array.defaultCompare(G__32501, G__32502);
          } else {
            return nsc;
          }
        }
      } else {
        var G__32503 = a.name;
        var G__32504 = b.name;
        return goog.array.defaultCompare(G__32503, G__32504);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__32506 = null;
  var G__32506__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__32506__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__32506 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__32506__2.call(this, self__, coll);
      case 3:
        return G__32506__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__32506.cljs$core$IFn$_invoke$arity$2 = G__32506__2;
  G__32506.cljs$core$IFn$_invoke$arity$3 = G__32506__3;
  return G__32506;
}();
cljs.core.Symbol.prototype.apply = function(self__, args32505) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args32505)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__30531__auto__ = self__._hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args32507 = [];
  var len__31204__auto___32510 = arguments.length;
  var i__31205__auto___32511 = 0;
  while (true) {
    if (i__31205__auto___32511 < len__31204__auto___32510) {
      args32507.push(arguments[i__31205__auto___32511]);
      var G__32512 = i__31205__auto___32511 + 1;
      i__31205__auto___32511 = G__32512;
      continue;
    } else {
    }
    break;
  }
  var G__32509 = args32507.length;
  switch(G__32509) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32507.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str("#'"), cljs.core.str(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__32515 = this$__$1.sym;
    var G__32516 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__32515, G__32516) : cljs.core._EQ_.call(null, G__32515, G__32516);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__32561 = null;
  var G__32561__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__32561__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__32561__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__32561__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__32561__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__32561__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__32561__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__32561__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__32561__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__32561__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__32561__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__32561__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__32561__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__32561__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__32561__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__32561__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__32561__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__32561__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__32561__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__32561__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__32561__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__32561__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__32517 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__32518 = a;
    var G__32519 = b;
    var G__32520 = c;
    var G__32521 = d;
    var G__32522 = e;
    var G__32523 = f;
    var G__32524 = g;
    var G__32525 = h;
    var G__32526 = i;
    var G__32527 = j;
    var G__32528 = k;
    var G__32529 = l;
    var G__32530 = m;
    var G__32531 = n;
    var G__32532 = o;
    var G__32533 = p;
    var G__32534 = q;
    var G__32535 = r;
    var G__32536 = s;
    var G__32537 = t;
    var G__32538 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32517, G__32518, G__32519, G__32520, G__32521, G__32522, G__32523, G__32524, G__32525, G__32526, G__32527, G__32528, G__32529, G__32530, G__32531, G__32532, G__32533, G__32534, G__32535, G__32536, G__32537, G__32538) : cljs.core.apply.call(null, G__32517, G__32518, G__32519, G__32520, G__32521, G__32522, G__32523, G__32524, G__32525, G__32526, G__32527, G__32528, G__32529, G__32530, G__32531, 
    G__32532, G__32533, G__32534, G__32535, G__32536, G__32537, G__32538);
  };
  G__32561 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__32561__1.call(this, self__);
      case 2:
        return G__32561__2.call(this, self__, a);
      case 3:
        return G__32561__3.call(this, self__, a, b);
      case 4:
        return G__32561__4.call(this, self__, a, b, c);
      case 5:
        return G__32561__5.call(this, self__, a, b, c, d);
      case 6:
        return G__32561__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__32561__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__32561__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__32561__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__32561__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__32561__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__32561__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__32561__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__32561__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__32561__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__32561__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__32561__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__32561__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__32561__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__32561__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__32561__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__32561__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__32561.cljs$core$IFn$_invoke$arity$1 = G__32561__1;
  G__32561.cljs$core$IFn$_invoke$arity$2 = G__32561__2;
  G__32561.cljs$core$IFn$_invoke$arity$3 = G__32561__3;
  G__32561.cljs$core$IFn$_invoke$arity$4 = G__32561__4;
  G__32561.cljs$core$IFn$_invoke$arity$5 = G__32561__5;
  G__32561.cljs$core$IFn$_invoke$arity$6 = G__32561__6;
  G__32561.cljs$core$IFn$_invoke$arity$7 = G__32561__7;
  G__32561.cljs$core$IFn$_invoke$arity$8 = G__32561__8;
  G__32561.cljs$core$IFn$_invoke$arity$9 = G__32561__9;
  G__32561.cljs$core$IFn$_invoke$arity$10 = G__32561__10;
  G__32561.cljs$core$IFn$_invoke$arity$11 = G__32561__11;
  G__32561.cljs$core$IFn$_invoke$arity$12 = G__32561__12;
  G__32561.cljs$core$IFn$_invoke$arity$13 = G__32561__13;
  G__32561.cljs$core$IFn$_invoke$arity$14 = G__32561__14;
  G__32561.cljs$core$IFn$_invoke$arity$15 = G__32561__15;
  G__32561.cljs$core$IFn$_invoke$arity$16 = G__32561__16;
  G__32561.cljs$core$IFn$_invoke$arity$17 = G__32561__17;
  G__32561.cljs$core$IFn$_invoke$arity$18 = G__32561__18;
  G__32561.cljs$core$IFn$_invoke$arity$19 = G__32561__19;
  G__32561.cljs$core$IFn$_invoke$arity$20 = G__32561__20;
  G__32561.cljs$core$IFn$_invoke$arity$21 = G__32561__21;
  G__32561.cljs$core$IFn$_invoke$arity$22 = G__32561__22;
  return G__32561;
}();
cljs.core.Var.prototype.apply = function(self__, args32514) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args32514)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__32539 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__32540 = a;
  var G__32541 = b;
  var G__32542 = c;
  var G__32543 = d;
  var G__32544 = e;
  var G__32545 = f;
  var G__32546 = g;
  var G__32547 = h;
  var G__32548 = i;
  var G__32549 = j;
  var G__32550 = k;
  var G__32551 = l;
  var G__32552 = m;
  var G__32553 = n;
  var G__32554 = o;
  var G__32555 = p;
  var G__32556 = q;
  var G__32557 = r;
  var G__32558 = s;
  var G__32559 = t;
  var G__32560 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32539, G__32540, G__32541, G__32542, G__32543, G__32544, G__32545, G__32546, G__32547, G__32548, G__32549, G__32550, G__32551, G__32552, G__32553, G__32554, G__32555, G__32556, G__32557, G__32558, G__32559, G__32560) : cljs.core.apply.call(null, G__32539, G__32540, G__32541, G__32542, G__32543, G__32544, G__32545, G__32546, G__32547, G__32548, G__32549, G__32550, G__32551, G__32552, G__32553, 
  G__32554, G__32555, G__32556, G__32557, G__32558, G__32559, G__32560);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args32574 = [];
  var len__31204__auto___32580 = arguments.length;
  var i__31205__auto___32581 = 0;
  while (true) {
    if (i__31205__auto___32581 < len__31204__auto___32580) {
      args32574.push(arguments[i__31205__auto___32581]);
      var G__32582 = i__31205__auto___32581 + 1;
      i__31205__auto___32581 = G__32582;
      continue;
    } else {
    }
    break;
  }
  var G__32579 = args32574.length;
  switch(G__32579) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32574.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__32584 = y;
        var G__32585 = cljs.core.first(more);
        var G__32586 = cljs.core.next(more);
        x = G__32584;
        y = G__32585;
        more = G__32586;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq32575) {
  var G__32576 = cljs.core.first(seq32575);
  var seq32575__$1 = cljs.core.next(seq32575);
  var G__32577 = cljs.core.first(seq32575__$1);
  var seq32575__$2 = cljs.core.next(seq32575__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__32576, G__32577, seq32575__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__32587 = n + 1;
      var G__32588 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__32589 = cljs.core.next(coll__$1);
      n = G__32587;
      hash_code = G__32588;
      coll__$1 = G__32589;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__32590 = n + 1;
      var G__32591 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__32592 = cljs.core.next(coll__$1);
      n = G__32590;
      hash_code = G__32591;
      coll__$1 = G__32592;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__32593 = this$__$1.valueOf();
    var G__32594 = other.valueOf();
    return goog.array.defaultCompare(G__32593, G__32594);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__30759__auto__ = inst == null ? null : inst;
    var m__30760__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__30760__auto__.call(null, inst);
    } else {
      var m__30760__auto____$1 = cljs.core.inst_ms_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(inst) : m__30760__auto____$1.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args32597 = [];
  var len__31204__auto___32606 = arguments.length;
  var i__31205__auto___32607 = 0;
  while (true) {
    if (i__31205__auto___32607 < len__31204__auto___32606) {
      args32597.push(arguments[i__31205__auto___32607]);
      var G__32608 = i__31205__auto___32607 + 1;
      i__31205__auto___32607 = G__32608;
      continue;
    } else {
    }
    break;
  }
  var G__32599 = args32597.length;
  switch(G__32599) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32597.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__32600 = val;
          var G__32601 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32600, G__32601) : f.call(null, G__32600, G__32601);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__32610 = nval;
          var G__32611 = n + 1;
          val = G__32610;
          n = G__32611;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__32602 = val__$1;
        var G__32603 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32602, G__32603) : f.call(null, G__32602, G__32603);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__32612 = nval;
        var G__32613 = n + 1;
        val__$1 = G__32612;
        n = G__32613;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__32604 = val__$1;
        var G__32605 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32604, G__32605) : f.call(null, G__32604, G__32605);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__32614 = nval;
        var G__32615 = n + 1;
        val__$1 = G__32614;
        n = G__32615;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args32616 = [];
  var len__31204__auto___32625 = arguments.length;
  var i__31205__auto___32626 = 0;
  while (true) {
    if (i__31205__auto___32626 < len__31204__auto___32625) {
      args32616.push(arguments[i__31205__auto___32626]);
      var G__32627 = i__31205__auto___32626 + 1;
      i__31205__auto___32626 = G__32627;
      continue;
    } else {
    }
    break;
  }
  var G__32618 = args32616.length;
  switch(G__32618) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32616.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__32619 = val;
          var G__32620 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32619, G__32620) : f.call(null, G__32619, G__32620);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__32629 = nval;
          var G__32630 = n + 1;
          val = G__32629;
          n = G__32630;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__32621 = val__$1;
        var G__32622 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32621, G__32622) : f.call(null, G__32621, G__32622);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__32631 = nval;
        var G__32632 = n + 1;
        val__$1 = G__32631;
        n = G__32632;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__32623 = val__$1;
        var G__32624 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32623, G__32624) : f.call(null, G__32623, G__32624);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__32633 = nval;
        var G__32634 = n + 1;
        val__$1 = G__32633;
        n = G__32634;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var args32639 = [];
  var len__31204__auto___32642 = arguments.length;
  var i__31205__auto___32643 = 0;
  while (true) {
    if (i__31205__auto___32643 < len__31204__auto___32642) {
      args32639.push(arguments[i__31205__auto___32643]);
      var G__32644 = i__31205__auto___32643 + 1;
      i__31205__auto___32643 = G__32644;
      continue;
    } else {
    }
    break;
  }
  var G__32641 = args32639.length;
  switch(G__32641) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32639.length)].join(""));;
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__30427__auto__ = 0;
      var y__30428__auto__ = start + len;
      return x__30427__auto__ > y__30428__auto__ ? x__30427__auto__ : y__30428__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__32646 = idx + 1;
          idx = G__32646;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var args32647 = [];
  var len__31204__auto___32650 = arguments.length;
  var i__31205__auto___32651 = 0;
  while (true) {
    if (i__31205__auto___32651 < len__31204__auto___32650) {
      args32647.push(arguments[i__31205__auto___32651]);
      var G__32652 = i__31205__auto___32651 + 1;
      i__31205__auto___32651 = G__32652;
      continue;
    } else {
    }
    break;
  }
  var G__32649 = args32647.length;
  switch(G__32649) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32647.length)].join(""));;
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__30434__auto__ = len - 1;
      var y__30435__auto__ = start;
      return x__30434__auto__ < y__30435__auto__ ? x__30434__auto__ : y__30435__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__32654 = idx - 1;
          idx = G__32654;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__32655 = null;
  var G__32655__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__32655__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__32655 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__32655__1.call(this, x);
      case 2:
        return G__32655__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__32655.cljs$core$IFn$_invoke$arity$1 = G__32655__1;
  G__32655.cljs$core$IFn$_invoke$arity$2 = G__32655__2;
  return G__32655;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__32656 = null;
  var G__32656__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__32656__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__32656 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__32656__1.call(this, x);
      case 2:
        return G__32656__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__32656.cljs$core$IFn$_invoke$arity$1 = G__32656__1;
  G__32656.cljs$core$IFn$_invoke$arity$2 = G__32656__2;
  return G__32656;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__30427__auto__ = 0;
  var y__30428__auto__ = self__.arr.length - self__.i;
  return x__30427__auto__ > y__30428__auto__ ? x__30427__auto__ : y__30428__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args32657 = [];
  var len__31204__auto___32660 = arguments.length;
  var i__31205__auto___32661 = 0;
  while (true) {
    if (i__31205__auto___32661 < len__31204__auto___32660) {
      args32657.push(arguments[i__31205__auto___32661]);
      var G__32662 = i__31205__auto___32661 + 1;
      i__31205__auto___32661 = G__32662;
      continue;
    } else {
    }
    break;
  }
  var G__32659 = args32657.length;
  switch(G__32659) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32657.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args32664 = [];
  var len__31204__auto___32667 = arguments.length;
  var i__31205__auto___32668 = 0;
  while (true) {
    if (i__31205__auto___32668 < len__31204__auto___32667) {
      args32664.push(arguments[i__31205__auto___32668]);
      var G__32669 = i__31205__auto___32668 + 1;
      i__31205__auto___32668 = G__32669;
      continue;
    } else {
    }
    break;
  }
  var G__32666 = args32664.length;
  switch(G__32666) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32664.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__32673 = null;
  var G__32673__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__32673__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__32673 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__32673__1.call(this, x);
      case 2:
        return G__32673__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__32673.cljs$core$IFn$_invoke$arity$1 = G__32673__1;
  G__32673.cljs$core$IFn$_invoke$arity$2 = G__32673__2;
  return G__32673;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__32674 = null;
  var G__32674__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__32674__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__32674 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__32674__1.call(this, x);
      case 2:
        return G__32674__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__32674.cljs$core$IFn$_invoke$arity$1 = G__32674__1;
  G__32674.cljs$core$IFn$_invoke$arity$2 = G__32674__2;
  return G__32674;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__32671 = cljs.core.List.EMPTY;
  var G__32672 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__32671, G__32672) : cljs.core.with_meta.call(null, G__32671, G__32672);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__32675 = sn;
      s = G__32675;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args32676 = [];
  var len__31204__auto___32682 = arguments.length;
  var i__31205__auto___32683 = 0;
  while (true) {
    if (i__31205__auto___32683 < len__31204__auto___32682) {
      args32676.push(arguments[i__31205__auto___32683]);
      var G__32684 = i__31205__auto___32683 + 1;
      i__31205__auto___32683 = G__32684;
      continue;
    } else {
    }
    break;
  }
  var G__32681 = args32676.length;
  switch(G__32681) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32676.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    var x__30933__auto__ = x;
    return cljs.core._conj(cljs.core.List.EMPTY, x__30933__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__32686 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__32687 = cljs.core.first(xs);
      var G__32688 = cljs.core.next(xs);
      coll = G__32686;
      x = G__32687;
      xs = G__32688;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq32677) {
  var G__32678 = cljs.core.first(seq32677);
  var seq32677__$1 = cljs.core.next(seq32677);
  var G__32679 = cljs.core.first(seq32677__$1);
  var seq32677__$2 = cljs.core.next(seq32677__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__32678, G__32679, seq32677__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__32689 = cljs.core.next(s);
      var G__32690 = acc + 1;
      s = G__32689;
      acc = G__32690;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args32695 = [];
  var len__31204__auto___32698 = arguments.length;
  var i__31205__auto___32699 = 0;
  while (true) {
    if (i__31205__auto___32699 < len__31204__auto___32698) {
      args32695.push(arguments[i__31205__auto___32699]);
      var G__32700 = i__31205__auto___32699 + 1;
      i__31205__auto___32699 = G__32700;
      continue;
    } else {
    }
    break;
  }
  var G__32697 = args32695.length;
  switch(G__32697) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32695.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__32702 = cljs.core.next(coll);
            var G__32703 = n - 1;
            coll = G__32702;
            n = G__32703;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__32704 = cljs.core.next(coll);
            var G__32705 = n - 1;
            var G__32706 = not_found;
            coll = G__32704;
            n = G__32705;
            not_found = G__32706;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args32707 = [];
  var len__31204__auto___32714 = arguments.length;
  var i__31205__auto___32715 = 0;
  while (true) {
    if (i__31205__auto___32715 < len__31204__auto___32714) {
      args32707.push(arguments[i__31205__auto___32715]);
      var G__32716 = i__31205__auto___32715 + 1;
      i__31205__auto___32715 = G__32716;
      continue;
    } else {
    }
    break;
  }
  var G__32709 = args32707.length;
  switch(G__32709) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32707.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n >= 0 && n < coll.length) {
            return coll[n];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (n >= 0 && n < coll.length) {
              return coll.charAt(n);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n >= 0 && n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n >= 0 && n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__32718 = n__$1 - 1;
      var G__32719 = cljs.core.rest(xs);
      n__$1 = G__32718;
      xs = G__32719;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args32720 = [];
  var len__31204__auto___32725 = arguments.length;
  var i__31205__auto___32726 = 0;
  while (true) {
    if (i__31205__auto___32726 < len__31204__auto___32725) {
      args32720.push(arguments[i__31205__auto___32726]);
      var G__32727 = i__31205__auto___32726 + 1;
      i__31205__auto___32726 = G__32727;
      continue;
    } else {
    }
    break;
  }
  var G__32722 = args32720.length;
  switch(G__32722) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32720.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (cljs.core.some_QMARK_(k) && k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args32729 = [];
  var len__31204__auto___32736 = arguments.length;
  var i__31205__auto___32737 = 0;
  while (true) {
    if (i__31205__auto___32737 < len__31204__auto___32736) {
      args32729.push(arguments[i__31205__auto___32737]);
      var G__32738 = i__31205__auto___32737 + 1;
      i__31205__auto___32737 = G__32738;
      continue;
    } else {
    }
    break;
  }
  var G__32735 = args32729.length;
  switch(G__32735) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32729.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__32740 = ret;
      var G__32741 = cljs.core.first(kvs);
      var G__32742 = cljs.core.second(kvs);
      var G__32743 = cljs.core.nnext(kvs);
      coll = G__32740;
      k = G__32741;
      v = G__32742;
      kvs = G__32743;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq32730) {
  var G__32731 = cljs.core.first(seq32730);
  var seq32730__$1 = cljs.core.next(seq32730);
  var G__32732 = cljs.core.first(seq32730__$1);
  var seq32730__$2 = cljs.core.next(seq32730__$1);
  var G__32733 = cljs.core.first(seq32730__$2);
  var seq32730__$3 = cljs.core.next(seq32730__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__32731, G__32732, G__32733, seq32730__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args32744 = [];
  var len__31204__auto___32750 = arguments.length;
  var i__31205__auto___32751 = 0;
  while (true) {
    if (i__31205__auto___32751 < len__31204__auto___32750) {
      args32744.push(arguments[i__31205__auto___32751]);
      var G__32752 = i__31205__auto___32751 + 1;
      i__31205__auto___32751 = G__32752;
      continue;
    } else {
    }
    break;
  }
  var G__32749 = args32744.length;
  switch(G__32749) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32744.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__32754 = ret;
        var G__32755 = cljs.core.first(ks);
        var G__32756 = cljs.core.next(ks);
        coll = G__32754;
        k = G__32755;
        ks = G__32756;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq32745) {
  var G__32746 = cljs.core.first(seq32745);
  var seq32745__$1 = cljs.core.next(seq32745);
  var G__32747 = cljs.core.first(seq32745__$1);
  var seq32745__$2 = cljs.core.next(seq32745__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__32746, G__32747, seq32745__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__30096__auto__ = goog.isFunction(f);
  if (or__30096__auto__) {
    return or__30096__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__32762 = null;
  var G__32762__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__32762__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__32762__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__32762__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__32762__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__32762__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__32762__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__32762__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__32762__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__32762__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__32762__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__32762__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__32762__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__32762__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__32762__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__32762__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__32762__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__32762__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__32762__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__32762__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__32762__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__32762__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__32762 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__32762__1.call(this, self__);
      case 2:
        return G__32762__2.call(this, self__, a);
      case 3:
        return G__32762__3.call(this, self__, a, b);
      case 4:
        return G__32762__4.call(this, self__, a, b, c);
      case 5:
        return G__32762__5.call(this, self__, a, b, c, d);
      case 6:
        return G__32762__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__32762__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__32762__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__32762__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__32762__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__32762__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__32762__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__32762__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__32762__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__32762__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__32762__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__32762__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__32762__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__32762__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__32762__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__32762__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__32762__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__32762.cljs$core$IFn$_invoke$arity$1 = G__32762__1;
  G__32762.cljs$core$IFn$_invoke$arity$2 = G__32762__2;
  G__32762.cljs$core$IFn$_invoke$arity$3 = G__32762__3;
  G__32762.cljs$core$IFn$_invoke$arity$4 = G__32762__4;
  G__32762.cljs$core$IFn$_invoke$arity$5 = G__32762__5;
  G__32762.cljs$core$IFn$_invoke$arity$6 = G__32762__6;
  G__32762.cljs$core$IFn$_invoke$arity$7 = G__32762__7;
  G__32762.cljs$core$IFn$_invoke$arity$8 = G__32762__8;
  G__32762.cljs$core$IFn$_invoke$arity$9 = G__32762__9;
  G__32762.cljs$core$IFn$_invoke$arity$10 = G__32762__10;
  G__32762.cljs$core$IFn$_invoke$arity$11 = G__32762__11;
  G__32762.cljs$core$IFn$_invoke$arity$12 = G__32762__12;
  G__32762.cljs$core$IFn$_invoke$arity$13 = G__32762__13;
  G__32762.cljs$core$IFn$_invoke$arity$14 = G__32762__14;
  G__32762.cljs$core$IFn$_invoke$arity$15 = G__32762__15;
  G__32762.cljs$core$IFn$_invoke$arity$16 = G__32762__16;
  G__32762.cljs$core$IFn$_invoke$arity$17 = G__32762__17;
  G__32762.cljs$core$IFn$_invoke$arity$18 = G__32762__18;
  G__32762.cljs$core$IFn$_invoke$arity$19 = G__32762__19;
  G__32762.cljs$core$IFn$_invoke$arity$20 = G__32762__20;
  G__32762.cljs$core$IFn$_invoke$arity$21 = G__32762__21;
  G__32762.cljs$core$IFn$_invoke$arity$22 = G__32762__22;
  return G__32762;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args32761) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args32761)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__30084__auto__ = !(o == null);
    if (and__30084__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__30084__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args32767 = [];
  var len__31204__auto___32773 = arguments.length;
  var i__31205__auto___32774 = 0;
  while (true) {
    if (i__31205__auto___32774 < len__31204__auto___32773) {
      args32767.push(arguments[i__31205__auto___32774]);
      var G__32775 = i__31205__auto___32774 + 1;
      i__31205__auto___32774 = G__32775;
      continue;
    } else {
    }
    break;
  }
  var G__32772 = args32767.length;
  switch(G__32772) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32767.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__32777 = ret;
        var G__32778 = cljs.core.first(ks);
        var G__32779 = cljs.core.next(ks);
        coll = G__32777;
        k = G__32778;
        ks = G__32779;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq32768) {
  var G__32769 = cljs.core.first(seq32768);
  var seq32768__$1 = cljs.core.next(seq32768);
  var G__32770 = cljs.core.first(seq32768__$1);
  var seq32768__$2 = cljs.core.next(seq32768__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__32769, G__32770, seq32768__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args32800 = [];
  var len__31204__auto___32806 = arguments.length;
  var i__31205__auto___32807 = 0;
  while (true) {
    if (i__31205__auto___32807 < len__31204__auto___32806) {
      args32800.push(arguments[i__31205__auto___32807]);
      var G__32808 = i__31205__auto___32807 + 1;
      i__31205__auto___32807 = G__32808;
      continue;
    } else {
    }
    break;
  }
  var G__32803 = args32800.length;
  switch(G__32803) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32800.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__31223__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq32801) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq32801));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__32812_32814 = obj;
  var G__32813_32815 = function(G__32812_32814, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__32812_32814, keys);
  goog.object.forEach(G__32812_32814, G__32813_32815);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__32816 = i__$1 + 1;
      var G__32817 = j__$1 + 1;
      var G__32818 = len__$1 - 1;
      i__$1 = G__32816;
      j__$1 = G__32817;
      len__$1 = G__32818;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__32819 = i__$1 - 1;
      var G__32820 = j__$1 - 1;
      var G__32821 = len__$1 - 1;
      i__$1 = G__32819;
      j__$1 = G__32820;
      len__$1 = G__32821;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__30096__auto__ = cljs.core.fn_QMARK_(f);
  if (or__30096__auto__) {
    return or__30096__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0) || x === 0;
  } else {
    if (x instanceof goog.math.Integer) {
      var or__30096__auto__ = cljs.core.not(x.isNegative());
      if (or__30096__auto__) {
        return or__30096__auto__;
      } else {
        return x.isZero();
      }
    } else {
      if (x instanceof goog.math.Long) {
        var or__30096__auto__ = cljs.core.not(x.isNegative());
        if (or__30096__auto__) {
          return or__30096__auto__;
        } else {
          return x.isZero();
        }
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args32832 = [];
  var len__31204__auto___32838 = arguments.length;
  var i__31205__auto___32839 = 0;
  while (true) {
    if (i__31205__auto___32839 < len__31204__auto___32838) {
      args32832.push(arguments[i__31205__auto___32839]);
      var G__32840 = i__31205__auto___32839 + 1;
      i__31205__auto___32839 = G__32840;
      continue;
    } else {
    }
    break;
  }
  var G__32837 = args32832.length;
  switch(G__32837) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32832.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__32842 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__32843 = etc;
          s = G__32842;
          xs = G__32843;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq32833) {
  var G__32834 = cljs.core.first(seq32833);
  var seq32833__$1 = cljs.core.next(seq32833);
  var G__32835 = cljs.core.first(seq32833__$1);
  var seq32833__$2 = cljs.core.next(seq32833__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__32834, G__32835, seq32833__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args32846 = [];
  var len__31204__auto___32849 = arguments.length;
  var i__31205__auto___32850 = 0;
  while (true) {
    if (i__31205__auto___32850 < len__31204__auto___32849) {
      args32846.push(arguments[i__31205__auto___32850]);
      var G__32851 = i__31205__auto___32850 + 1;
      i__31205__auto___32850 = G__32851;
      continue;
    } else {
    }
    break;
  }
  var G__32848 = args32846.length;
  switch(G__32848) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32846.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__32853 = xs;
      var G__32854 = ys;
      var G__32855 = len;
      var G__32856 = n + 1;
      xs = G__32853;
      ys = G__32854;
      len = G__32855;
      n = G__32856;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var args32857 = [];
  var len__31204__auto___32862 = arguments.length;
  var i__31205__auto___32863 = 0;
  while (true) {
    if (i__31205__auto___32863 < len__31204__auto___32862) {
      args32857.push(arguments[i__31205__auto___32863]);
      var G__32864 = i__31205__auto___32863 + 1;
      i__31205__auto___32863 = G__32864;
      continue;
    } else {
    }
    break;
  }
  var G__32859 = args32857.length;
  switch(G__32859) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32857.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__32860_32866 = a;
    var G__32861_32867 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__32860_32866, G__32861_32867);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args32868 = [];
  var len__31204__auto___32871 = arguments.length;
  var i__31205__auto___32872 = 0;
  while (true) {
    if (i__31205__auto___32872 < len__31204__auto___32871) {
      args32868.push(arguments[i__31205__auto___32872]);
      var G__32873 = i__31205__auto___32872 + 1;
      i__31205__auto___32872 = G__32873;
      continue;
    } else {
    }
    break;
  }
  var G__32870 = args32868.length;
  switch(G__32870) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32868.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args32875 = [];
  var len__31204__auto___32883 = arguments.length;
  var i__31205__auto___32884 = 0;
  while (true) {
    if (i__31205__auto___32884 < len__31204__auto___32883) {
      args32875.push(arguments[i__31205__auto___32884]);
      var G__32885 = i__31205__auto___32884 + 1;
      i__31205__auto___32884 = G__32885;
      continue;
    } else {
    }
    break;
  }
  var G__32877 = args32875.length;
  switch(G__32877) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32875.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    var G__32878 = f;
    var G__32879 = cljs.core.first(s);
    var G__32880 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__32878, G__32879, G__32880) : cljs.core.reduce.call(null, G__32878, G__32879, G__32880);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__32881 = val__$1;
        var G__32882 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32881, G__32882) : f.call(null, G__32881, G__32882);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__32887 = nval;
        var G__32888 = cljs.core.next(coll__$1);
        val__$1 = G__32887;
        coll__$1 = G__32888;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args32889 = [];
  var len__31204__auto___32894 = arguments.length;
  var i__31205__auto___32895 = 0;
  while (true) {
    if (i__31205__auto___32895 < len__31204__auto___32894) {
      args32889.push(arguments[i__31205__auto___32895]);
      var G__32896 = i__31205__auto___32895 + 1;
      i__31205__auto___32895 = G__32896;
      continue;
    } else {
    }
    break;
  }
  var G__32891 = args32889.length;
  switch(G__32891) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32889.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args32898 = [];
  var len__31204__auto___32901 = arguments.length;
  var i__31205__auto___32902 = 0;
  while (true) {
    if (i__31205__auto___32902 < len__31204__auto___32901) {
      args32898.push(arguments[i__31205__auto___32902]);
      var G__32903 = i__31205__auto___32902 + 1;
      i__31205__auto___32902 = G__32903;
      continue;
    } else {
    }
    break;
  }
  var G__32900 = args32898.length;
  switch(G__32900) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32898.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__32905 = null;
    var G__32905__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__32905__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__32905__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__32905 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__32905__0.call(this);
        case 1:
          return G__32905__1.call(this, x);
        case 2:
          return G__32905__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__32905.cljs$core$IFn$_invoke$arity$0 = G__32905__0;
    G__32905.cljs$core$IFn$_invoke$arity$1 = G__32905__1;
    G__32905.cljs$core$IFn$_invoke$arity$2 = G__32905__2;
    return G__32905;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args32906 = [];
  var len__31204__auto___32909 = arguments.length;
  var i__31205__auto___32910 = 0;
  while (true) {
    if (i__31205__auto___32910 < len__31204__auto___32909) {
      args32906.push(arguments[i__31205__auto___32910]);
      var G__32911 = i__31205__auto___32910 + 1;
      i__31205__auto___32910 = G__32911;
      continue;
    } else {
    }
    break;
  }
  var G__32908 = args32906.length;
  switch(G__32908) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32906.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args32913 = [];
  var len__31204__auto___32919 = arguments.length;
  var i__31205__auto___32920 = 0;
  while (true) {
    if (i__31205__auto___32920 < len__31204__auto___32919) {
      args32913.push(arguments[i__31205__auto___32920]);
      var G__32921 = i__31205__auto___32920 + 1;
      i__31205__auto___32920 = G__32921;
      continue;
    } else {
    }
    break;
  }
  var G__32918 = args32913.length;
  switch(G__32918) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32913.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq32914) {
  var G__32915 = cljs.core.first(seq32914);
  var seq32914__$1 = cljs.core.next(seq32914);
  var G__32916 = cljs.core.first(seq32914__$1);
  var seq32914__$2 = cljs.core.next(seq32914__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__32915, G__32916, seq32914__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args32923 = [];
  var len__31204__auto___32929 = arguments.length;
  var i__31205__auto___32930 = 0;
  while (true) {
    if (i__31205__auto___32930 < len__31204__auto___32929) {
      args32923.push(arguments[i__31205__auto___32930]);
      var G__32931 = i__31205__auto___32930 + 1;
      i__31205__auto___32930 = G__32931;
      continue;
    } else {
    }
    break;
  }
  var G__32928 = args32923.length;
  switch(G__32928) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32923.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq32924) {
  var G__32925 = cljs.core.first(seq32924);
  var seq32924__$1 = cljs.core.next(seq32924);
  var G__32926 = cljs.core.first(seq32924__$1);
  var seq32924__$2 = cljs.core.next(seq32924__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__32925, G__32926, seq32924__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args32933 = [];
  var len__31204__auto___32939 = arguments.length;
  var i__31205__auto___32940 = 0;
  while (true) {
    if (i__31205__auto___32940 < len__31204__auto___32939) {
      args32933.push(arguments[i__31205__auto___32940]);
      var G__32941 = i__31205__auto___32940 + 1;
      i__31205__auto___32940 = G__32941;
      continue;
    } else {
    }
    break;
  }
  var G__32938 = args32933.length;
  switch(G__32938) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32933.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq32934) {
  var G__32935 = cljs.core.first(seq32934);
  var seq32934__$1 = cljs.core.next(seq32934);
  var G__32936 = cljs.core.first(seq32934__$1);
  var seq32934__$2 = cljs.core.next(seq32934__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__32935, G__32936, seq32934__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args32943 = [];
  var len__31204__auto___32949 = arguments.length;
  var i__31205__auto___32950 = 0;
  while (true) {
    if (i__31205__auto___32950 < len__31204__auto___32949) {
      args32943.push(arguments[i__31205__auto___32950]);
      var G__32951 = i__31205__auto___32950 + 1;
      i__31205__auto___32950 = G__32951;
      continue;
    } else {
    }
    break;
  }
  var G__32948 = args32943.length;
  switch(G__32948) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32943.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq32944) {
  var G__32945 = cljs.core.first(seq32944);
  var seq32944__$1 = cljs.core.next(seq32944);
  var G__32946 = cljs.core.first(seq32944__$1);
  var seq32944__$2 = cljs.core.next(seq32944__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__32945, G__32946, seq32944__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args32953 = [];
  var len__31204__auto___32959 = arguments.length;
  var i__31205__auto___32960 = 0;
  while (true) {
    if (i__31205__auto___32960 < len__31204__auto___32959) {
      args32953.push(arguments[i__31205__auto___32960]);
      var G__32961 = i__31205__auto___32960 + 1;
      i__31205__auto___32960 = G__32961;
      continue;
    } else {
    }
    break;
  }
  var G__32958 = args32953.length;
  switch(G__32958) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32953.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__32963 = y;
        var G__32964 = cljs.core.first(more);
        var G__32965 = cljs.core.next(more);
        x = G__32963;
        y = G__32964;
        more = G__32965;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq32954) {
  var G__32955 = cljs.core.first(seq32954);
  var seq32954__$1 = cljs.core.next(seq32954);
  var G__32956 = cljs.core.first(seq32954__$1);
  var seq32954__$2 = cljs.core.next(seq32954__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__32955, G__32956, seq32954__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args32966 = [];
  var len__31204__auto___32972 = arguments.length;
  var i__31205__auto___32973 = 0;
  while (true) {
    if (i__31205__auto___32973 < len__31204__auto___32972) {
      args32966.push(arguments[i__31205__auto___32973]);
      var G__32974 = i__31205__auto___32973 + 1;
      i__31205__auto___32973 = G__32974;
      continue;
    } else {
    }
    break;
  }
  var G__32971 = args32966.length;
  switch(G__32971) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32966.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__32976 = y;
        var G__32977 = cljs.core.first(more);
        var G__32978 = cljs.core.next(more);
        x = G__32976;
        y = G__32977;
        more = G__32978;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq32967) {
  var G__32968 = cljs.core.first(seq32967);
  var seq32967__$1 = cljs.core.next(seq32967);
  var G__32969 = cljs.core.first(seq32967__$1);
  var seq32967__$2 = cljs.core.next(seq32967__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__32968, G__32969, seq32967__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args32979 = [];
  var len__31204__auto___32985 = arguments.length;
  var i__31205__auto___32986 = 0;
  while (true) {
    if (i__31205__auto___32986 < len__31204__auto___32985) {
      args32979.push(arguments[i__31205__auto___32986]);
      var G__32987 = i__31205__auto___32986 + 1;
      i__31205__auto___32986 = G__32987;
      continue;
    } else {
    }
    break;
  }
  var G__32984 = args32979.length;
  switch(G__32984) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32979.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__32989 = y;
        var G__32990 = cljs.core.first(more);
        var G__32991 = cljs.core.next(more);
        x = G__32989;
        y = G__32990;
        more = G__32991;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq32980) {
  var G__32981 = cljs.core.first(seq32980);
  var seq32980__$1 = cljs.core.next(seq32980);
  var G__32982 = cljs.core.first(seq32980__$1);
  var seq32980__$2 = cljs.core.next(seq32980__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__32981, G__32982, seq32980__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args32992 = [];
  var len__31204__auto___32998 = arguments.length;
  var i__31205__auto___32999 = 0;
  while (true) {
    if (i__31205__auto___32999 < len__31204__auto___32998) {
      args32992.push(arguments[i__31205__auto___32999]);
      var G__33000 = i__31205__auto___32999 + 1;
      i__31205__auto___32999 = G__33000;
      continue;
    } else {
    }
    break;
  }
  var G__32997 = args32992.length;
  switch(G__32997) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args32992.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__33002 = y;
        var G__33003 = cljs.core.first(more);
        var G__33004 = cljs.core.next(more);
        x = G__33002;
        y = G__33003;
        more = G__33004;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq32993) {
  var G__32994 = cljs.core.first(seq32993);
  var seq32993__$1 = cljs.core.next(seq32993);
  var G__32995 = cljs.core.first(seq32993__$1);
  var seq32993__$2 = cljs.core.next(seq32993__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__32994, G__32995, seq32993__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args33005 = [];
  var len__31204__auto___33011 = arguments.length;
  var i__31205__auto___33012 = 0;
  while (true) {
    if (i__31205__auto___33012 < len__31204__auto___33011) {
      args33005.push(arguments[i__31205__auto___33012]);
      var G__33013 = i__31205__auto___33012 + 1;
      i__31205__auto___33012 = G__33013;
      continue;
    } else {
    }
    break;
  }
  var G__33010 = args33005.length;
  switch(G__33010) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33005.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__30427__auto__ = x;
  var y__30428__auto__ = y;
  return x__30427__auto__ > y__30428__auto__ ? x__30427__auto__ : y__30428__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__30427__auto__ = x;
    var y__30428__auto__ = y;
    return x__30427__auto__ > y__30428__auto__ ? x__30427__auto__ : y__30428__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq33006) {
  var G__33007 = cljs.core.first(seq33006);
  var seq33006__$1 = cljs.core.next(seq33006);
  var G__33008 = cljs.core.first(seq33006__$1);
  var seq33006__$2 = cljs.core.next(seq33006__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__33007, G__33008, seq33006__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args33015 = [];
  var len__31204__auto___33021 = arguments.length;
  var i__31205__auto___33022 = 0;
  while (true) {
    if (i__31205__auto___33022 < len__31204__auto___33021) {
      args33015.push(arguments[i__31205__auto___33022]);
      var G__33023 = i__31205__auto___33022 + 1;
      i__31205__auto___33022 = G__33023;
      continue;
    } else {
    }
    break;
  }
  var G__33020 = args33015.length;
  switch(G__33020) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33015.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__30434__auto__ = x;
  var y__30435__auto__ = y;
  return x__30434__auto__ < y__30435__auto__ ? x__30434__auto__ : y__30435__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__30434__auto__ = x;
    var y__30435__auto__ = y;
    return x__30434__auto__ < y__30435__auto__ ? x__30434__auto__ : y__30435__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq33016) {
  var G__33017 = cljs.core.first(seq33016);
  var seq33016__$1 = cljs.core.next(seq33016);
  var G__33018 = cljs.core.first(seq33016__$1);
  var seq33016__$2 = cljs.core.next(seq33016__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__33017, G__33018, seq33016__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args33025 = [];
  var len__31204__auto___33031 = arguments.length;
  var i__31205__auto___33032 = 0;
  while (true) {
    if (i__31205__auto___33032 < len__31204__auto___33031) {
      args33025.push(arguments[i__31205__auto___33032]);
      var G__33033 = i__31205__auto___33032 + 1;
      i__31205__auto___33032 = G__33033;
      continue;
    } else {
    }
    break;
  }
  var G__33030 = args33025.length;
  switch(G__33030) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33025.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq33026) {
  var G__33027 = cljs.core.first(seq33026);
  var seq33026__$1 = cljs.core.next(seq33026);
  var G__33028 = cljs.core.first(seq33026__$1);
  var seq33026__$2 = cljs.core.next(seq33026__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__33027, G__33028, seq33026__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args33035 = [];
  var len__31204__auto___33041 = arguments.length;
  var i__31205__auto___33042 = 0;
  while (true) {
    if (i__31205__auto___33042 < len__31204__auto___33041) {
      args33035.push(arguments[i__31205__auto___33042]);
      var G__33043 = i__31205__auto___33042 + 1;
      i__31205__auto___33042 = G__33043;
      continue;
    } else {
    }
    break;
  }
  var G__33040 = args33035.length;
  switch(G__33040) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33035.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq33036) {
  var G__33037 = cljs.core.first(seq33036);
  var seq33036__$1 = cljs.core.next(seq33036);
  var G__33038 = cljs.core.first(seq33036__$1);
  var seq33036__$2 = cljs.core.next(seq33036__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__33037, G__33038, seq33036__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args33045 = [];
  var len__31204__auto___33051 = arguments.length;
  var i__31205__auto___33052 = 0;
  while (true) {
    if (i__31205__auto___33052 < len__31204__auto___33051) {
      args33045.push(arguments[i__31205__auto___33052]);
      var G__33053 = i__31205__auto___33052 + 1;
      i__31205__auto___33052 = G__33053;
      continue;
    } else {
    }
    break;
  }
  var G__33050 = args33045.length;
  switch(G__33050) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33045.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq33046) {
  var G__33047 = cljs.core.first(seq33046);
  var seq33046__$1 = cljs.core.next(seq33046);
  var G__33048 = cljs.core.first(seq33046__$1);
  var seq33046__$2 = cljs.core.next(seq33046__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__33047, G__33048, seq33046__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args33055 = [];
  var len__31204__auto___33061 = arguments.length;
  var i__31205__auto___33062 = 0;
  while (true) {
    if (i__31205__auto___33062 < len__31204__auto___33061) {
      args33055.push(arguments[i__31205__auto___33062]);
      var G__33063 = i__31205__auto___33062 + 1;
      i__31205__auto___33062 = G__33063;
      continue;
    } else {
    }
    break;
  }
  var G__33060 = args33055.length;
  switch(G__33060) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33055.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq33056) {
  var G__33057 = cljs.core.first(seq33056);
  var seq33056__$1 = cljs.core.next(seq33056);
  var G__33058 = cljs.core.first(seq33056__$1);
  var seq33056__$2 = cljs.core.next(seq33056__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__33057, G__33058, seq33056__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args33065 = [];
  var len__31204__auto___33071 = arguments.length;
  var i__31205__auto___33072 = 0;
  while (true) {
    if (i__31205__auto___33072 < len__31204__auto___33071) {
      args33065.push(arguments[i__31205__auto___33072]);
      var G__33073 = i__31205__auto___33072 + 1;
      i__31205__auto___33072 = G__33073;
      continue;
    } else {
    }
    break;
  }
  var G__33070 = args33065.length;
  switch(G__33070) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33065.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq33066) {
  var G__33067 = cljs.core.first(seq33066);
  var seq33066__$1 = cljs.core.next(seq33066);
  var G__33068 = cljs.core.first(seq33066__$1);
  var seq33066__$2 = cljs.core.next(seq33066__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__33067, G__33068, seq33066__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args33075 = [];
  var len__31204__auto___33081 = arguments.length;
  var i__31205__auto___33082 = 0;
  while (true) {
    if (i__31205__auto___33082 < len__31204__auto___33081) {
      args33075.push(arguments[i__31205__auto___33082]);
      var G__33083 = i__31205__auto___33082 + 1;
      i__31205__auto___33082 = G__33083;
      continue;
    } else {
    }
    break;
  }
  var G__33080 = args33075.length;
  switch(G__33080) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33075.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq33076) {
  var G__33077 = cljs.core.first(seq33076);
  var seq33076__$1 = cljs.core.next(seq33076);
  var G__33078 = cljs.core.first(seq33076__$1);
  var seq33076__$2 = cljs.core.next(seq33076__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__33077, G__33078, seq33076__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args33085 = [];
  var len__31204__auto___33091 = arguments.length;
  var i__31205__auto___33092 = 0;
  while (true) {
    if (i__31205__auto___33092 < len__31204__auto___33091) {
      args33085.push(arguments[i__31205__auto___33092]);
      var G__33093 = i__31205__auto___33092 + 1;
      i__31205__auto___33092 = G__33093;
      continue;
    } else {
    }
    break;
  }
  var G__33090 = args33085.length;
  switch(G__33090) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33085.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq33086) {
  var G__33087 = cljs.core.first(seq33086);
  var seq33086__$1 = cljs.core.next(seq33086);
  var G__33088 = cljs.core.first(seq33086__$1);
  var seq33086__$2 = cljs.core.next(seq33086__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__33087, G__33088, seq33086__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args33095 = [];
  var len__31204__auto___33101 = arguments.length;
  var i__31205__auto___33102 = 0;
  while (true) {
    if (i__31205__auto___33102 < len__31204__auto___33101) {
      args33095.push(arguments[i__31205__auto___33102]);
      var G__33103 = i__31205__auto___33102 + 1;
      i__31205__auto___33102 = G__33103;
      continue;
    } else {
    }
    break;
  }
  var G__33100 = args33095.length;
  switch(G__33100) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33095.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq33096) {
  var G__33097 = cljs.core.first(seq33096);
  var seq33096__$1 = cljs.core.next(seq33096);
  var G__33098 = cljs.core.first(seq33096__$1);
  var seq33096__$2 = cljs.core.next(seq33096__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__33097, G__33098, seq33096__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args33105 = [];
  var len__31204__auto___33111 = arguments.length;
  var i__31205__auto___33112 = 0;
  while (true) {
    if (i__31205__auto___33112 < len__31204__auto___33111) {
      args33105.push(arguments[i__31205__auto___33112]);
      var G__33113 = i__31205__auto___33112 + 1;
      i__31205__auto___33112 = G__33113;
      continue;
    } else {
    }
    break;
  }
  var G__33110 = args33105.length;
  switch(G__33110) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33105.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq33106) {
  var G__33107 = cljs.core.first(seq33106);
  var seq33106__$1 = cljs.core.next(seq33106);
  var G__33108 = cljs.core.first(seq33106__$1);
  var seq33106__$2 = cljs.core.next(seq33106__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__33107, G__33108, seq33106__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args33115 = [];
  var len__31204__auto___33121 = arguments.length;
  var i__31205__auto___33122 = 0;
  while (true) {
    if (i__31205__auto___33122 < len__31204__auto___33121) {
      args33115.push(arguments[i__31205__auto___33122]);
      var G__33123 = i__31205__auto___33122 + 1;
      i__31205__auto___33122 = G__33123;
      continue;
    } else {
    }
    break;
  }
  var G__33120 = args33115.length;
  switch(G__33120) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33115.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq33116) {
  var G__33117 = cljs.core.first(seq33116);
  var seq33116__$1 = cljs.core.next(seq33116);
  var G__33118 = cljs.core.first(seq33116__$1);
  var seq33116__$2 = cljs.core.next(seq33116__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__33117, G__33118, seq33116__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args33125 = [];
  var len__31204__auto___33131 = arguments.length;
  var i__31205__auto___33132 = 0;
  while (true) {
    if (i__31205__auto___33132 < len__31204__auto___33131) {
      args33125.push(arguments[i__31205__auto___33132]);
      var G__33133 = i__31205__auto___33132 + 1;
      i__31205__auto___33132 = G__33133;
      continue;
    } else {
    }
    break;
  }
  var G__33130 = args33125.length;
  switch(G__33130) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33125.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq33126) {
  var G__33127 = cljs.core.first(seq33126);
  var seq33126__$1 = cljs.core.next(seq33126);
  var G__33128 = cljs.core.first(seq33126__$1);
  var seq33126__$2 = cljs.core.next(seq33126__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__33127, G__33128, seq33126__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args33135 = [];
  var len__31204__auto___33141 = arguments.length;
  var i__31205__auto___33142 = 0;
  while (true) {
    if (i__31205__auto___33142 < len__31204__auto___33141) {
      args33135.push(arguments[i__31205__auto___33142]);
      var G__33143 = i__31205__auto___33142 + 1;
      i__31205__auto___33142 = G__33143;
      continue;
    } else {
    }
    break;
  }
  var G__33140 = args33135.length;
  switch(G__33140) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33135.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__33145 = y;
        var G__33146 = cljs.core.first(more);
        var G__33147 = cljs.core.next(more);
        x = G__33145;
        y = G__33146;
        more = G__33147;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq33136) {
  var G__33137 = cljs.core.first(seq33136);
  var seq33136__$1 = cljs.core.next(seq33136);
  var G__33138 = cljs.core.first(seq33136__$1);
  var seq33136__$2 = cljs.core.next(seq33136__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__33137, G__33138, seq33136__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__33148 = n__$1 - 1;
      var G__33149 = cljs.core.next(xs);
      n__$1 = G__33148;
      xs = G__33149;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args33150 = [];
  var len__31204__auto___33155 = arguments.length;
  var i__31205__auto___33156 = 0;
  while (true) {
    if (i__31205__auto___33156 < len__31204__auto___33155) {
      args33150.push(arguments[i__31205__auto___33156]);
      var G__33157 = i__31205__auto___33156 + 1;
      i__31205__auto___33156 = G__33157;
      continue;
    } else {
    }
    break;
  }
  var G__33154 = args33150.length;
  switch(G__33154) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33150.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31223__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__33159 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__33160 = cljs.core.next(more);
      sb = G__33159;
      more = G__33160;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq33151) {
  var G__33152 = cljs.core.first(seq33151);
  var seq33151__$1 = cljs.core.next(seq33151);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__33152, seq33151__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args33161 = [];
  var len__31204__auto___33164 = arguments.length;
  var i__31205__auto___33165 = 0;
  while (true) {
    if (i__31205__auto___33165 < len__31204__auto___33164) {
      args33161.push(arguments[i__31205__auto___33165]);
      var G__33166 = i__31205__auto___33165 + 1;
      i__31205__auto___33165 = G__33166;
      continue;
    } else {
    }
    break;
  }
  var G__33163 = args33161.length;
  switch(G__33163) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33161.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__33168 = cljs.core.next(xs);
            var G__33169 = cljs.core.next(ys);
            xs = G__33168;
            ys = G__33169;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__33170 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__33171 = cljs.core.next(s);
        res = G__33170;
        s = G__33171;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__33172 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__33173 = cljs.core.next(s);
      h = G__33172;
      s = G__33173;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__33174 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__33175 = cljs.core.next(s__$1);
      h = G__33174;
      s__$1 = G__33175;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__33186_33196 = cljs.core.seq(fn_map);
  var chunk__33187_33197 = null;
  var count__33188_33198 = 0;
  var i__33189_33199 = 0;
  while (true) {
    if (i__33189_33199 < count__33188_33198) {
      var vec__33190_33200 = chunk__33187_33197.cljs$core$IIndexed$_nth$arity$2(null, i__33189_33199);
      var key_name_33201 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33190_33200, 0, null);
      var f_33202 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33190_33200, 1, null);
      var str_name_33203 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_33201) : cljs.core.name.call(null, key_name_33201);
      obj[str_name_33203] = f_33202;
      var G__33204 = seq__33186_33196;
      var G__33205 = chunk__33187_33197;
      var G__33206 = count__33188_33198;
      var G__33207 = i__33189_33199 + 1;
      seq__33186_33196 = G__33204;
      chunk__33187_33197 = G__33205;
      count__33188_33198 = G__33206;
      i__33189_33199 = G__33207;
      continue;
    } else {
      var temp__4657__auto___33208 = cljs.core.seq(seq__33186_33196);
      if (temp__4657__auto___33208) {
        var seq__33186_33209__$1 = temp__4657__auto___33208;
        if (cljs.core.chunked_seq_QMARK_(seq__33186_33209__$1)) {
          var c__30910__auto___33210 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__33186_33209__$1) : cljs.core.chunk_first.call(null, seq__33186_33209__$1);
          var G__33211 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__33186_33209__$1) : cljs.core.chunk_rest.call(null, seq__33186_33209__$1);
          var G__33212 = c__30910__auto___33210;
          var G__33213 = cljs.core.count(c__30910__auto___33210);
          var G__33214 = 0;
          seq__33186_33196 = G__33211;
          chunk__33187_33197 = G__33212;
          count__33188_33198 = G__33213;
          i__33189_33199 = G__33214;
          continue;
        } else {
          var vec__33193_33215 = cljs.core.first(seq__33186_33209__$1);
          var key_name_33216 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33193_33215, 0, null);
          var f_33217 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33193_33215, 1, null);
          var str_name_33218 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_33216) : cljs.core.name.call(null, key_name_33216);
          obj[str_name_33218] = f_33217;
          var G__33219 = cljs.core.next(seq__33186_33209__$1);
          var G__33220 = null;
          var G__33221 = 0;
          var G__33222 = 0;
          seq__33186_33196 = G__33219;
          chunk__33187_33197 = G__33220;
          count__33188_33198 = G__33221;
          i__33189_33199 = G__33222;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__33223 = null;
  var G__33223__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__33223__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33223 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33223__1.call(this, x);
      case 2:
        return G__33223__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33223.cljs$core$IFn$_invoke$arity$1 = G__33223__1;
  G__33223.cljs$core$IFn$_invoke$arity$2 = G__33223__2;
  return G__33223;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__33224 = null;
  var G__33224__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__33224__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33224 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33224__1.call(this, x);
      case 2:
        return G__33224__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33224.cljs$core$IFn$_invoke$arity$1 = G__33224__1;
  G__33224.cljs$core$IFn$_invoke$arity$2 = G__33224__2;
  return G__33224;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__33227 = null;
  var G__33227__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__33227__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33227 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33227__1.call(this, x);
      case 2:
        return G__33227__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33227.cljs$core$IFn$_invoke$arity$1 = G__33227__1;
  G__33227.cljs$core$IFn$_invoke$arity$2 = G__33227__2;
  return G__33227;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__33228 = null;
  var G__33228__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__33228__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33228 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33228__1.call(this, x);
      case 2:
        return G__33228__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33228.cljs$core$IFn$_invoke$arity$1 = G__33228__1;
  G__33228.cljs$core$IFn$_invoke$arity$2 = G__33228__2;
  return G__33228;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___33232 = arguments.length;
  var i__31205__auto___33233 = 0;
  while (true) {
    if (i__31205__auto___33233 < len__31204__auto___33232) {
      args__31211__auto__.push(arguments[i__31205__auto___33233]);
      var G__33234 = i__31205__auto___33233 + 1;
      i__31205__auto___33233 = G__33234;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__33235 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__33235;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__33236 = i - 1;
      var G__33237 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__33236;
      r = G__33237;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq33231) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq33231));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__33238 = null;
  var G__33238__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__33238__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33238 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33238__1.call(this, x);
      case 2:
        return G__33238__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33238.cljs$core$IFn$_invoke$arity$1 = G__33238__1;
  G__33238.cljs$core$IFn$_invoke$arity$2 = G__33238__2;
  return G__33238;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__33239 = null;
  var G__33239__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__33239__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33239 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33239__1.call(this, x);
      case 2:
        return G__33239__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33239.cljs$core$IFn$_invoke$arity$1 = G__33239__1;
  G__33239.cljs$core$IFn$_invoke$arity$2 = G__33239__2;
  return G__33239;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__30096__auto__ = coll == null;
    if (or__30096__auto__) {
      return or__30096__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__30084__auto__ = cljs.core.not(a.ns);
      if (and__30084__auto__) {
        return b.ns;
      } else {
        return and__30084__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__33250 = a.ns;
            var G__33251 = b.ns;
            return goog.array.defaultCompare(G__33250, G__33251);
          }();
          if (0 === nsc) {
            var G__33252 = a.name;
            var G__33253 = b.name;
            return goog.array.defaultCompare(G__33252, G__33253);
          } else {
            return nsc;
          }
        }
      } else {
        var G__33254 = a.name;
        var G__33255 = b.name;
        return goog.array.defaultCompare(G__33254, G__33255);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__33257 = null;
  var G__33257__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__33257__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__33257 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__33257__2.call(this, self__, coll);
      case 3:
        return G__33257__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33257.cljs$core$IFn$_invoke$arity$2 = G__33257__2;
  G__33257.cljs$core$IFn$_invoke$arity$3 = G__33257__3;
  return G__33257;
}();
cljs.core.Keyword.prototype.apply = function(self__, args33256) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args33256)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__30531__auto__ = self__._hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  var and__30084__auto__ = cljs.core.ident_QMARK_(x);
  if (and__30084__auto__) {
    var and__30084__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__30084__auto____$1)) {
      return true;
    } else {
      return and__30084__auto____$1;
    }
  } else {
    return and__30084__auto__;
  }
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  var and__30084__auto__ = x instanceof cljs.core.Symbol;
  if (and__30084__auto__) {
    var and__30084__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__30084__auto____$1)) {
      return true;
    } else {
      return and__30084__auto____$1;
    }
  } else {
    return and__30084__auto__;
  }
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  var and__30084__auto__ = x instanceof cljs.core.Keyword;
  if (and__30084__auto__) {
    var and__30084__auto____$1 = cljs.core.namespace(x);
    if (cljs.core.truth_(and__30084__auto____$1)) {
      return true;
    } else {
      return and__30084__auto____$1;
    }
  } else {
    return and__30084__auto__;
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args33260 = [];
  var len__31204__auto___33263 = arguments.length;
  var i__31205__auto___33264 = 0;
  while (true) {
    if (i__31205__auto___33264 < len__31204__auto___33263) {
      args33260.push(arguments[i__31205__auto___33264]);
      var G__33265 = i__31205__auto___33264 + 1;
      i__31205__auto___33264 = G__33265;
      continue;
    } else {
    }
    break;
  }
  var G__33262 = args33260.length;
  switch(G__33262) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33260.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(ns) : cljs.core.name.call(null, ns) : ns instanceof cljs.core.Symbol ? cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(ns) : cljs.core.name.call(null, ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name) : name instanceof cljs.core.Symbol ? cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.str(cljs.core.truth_(ns__$1) ? [cljs.core.str(ns__$1), cljs.core.str("/")].join("") : null), cljs.core.str(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__33267 = null;
  var G__33267__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__33267__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33267 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33267__1.call(this, x);
      case 2:
        return G__33267__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33267.cljs$core$IFn$_invoke$arity$1 = G__33267__1;
  G__33267.cljs$core$IFn$_invoke$arity$2 = G__33267__2;
  return G__33267;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__33268 = null;
  var G__33268__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__33268__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33268 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33268__1.call(this, x);
      case 2:
        return G__33268__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33268.cljs$core$IFn$_invoke$arity$1 = G__33268__1;
  G__33268.cljs$core$IFn$_invoke$arity$2 = G__33268__2;
  return G__33268;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__33269 = ls.sval();
        ls = G__33269;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args33270 = [];
  var len__31204__auto___33273 = arguments.length;
  var i__31205__auto___33274 = 0;
  while (true) {
    if (i__31205__auto___33274 < len__31204__auto___33273) {
      args33270.push(arguments[i__31205__auto___33274]);
      var G__33275 = i__31205__auto___33274 + 1;
      i__31205__auto___33274 = G__33275;
      continue;
    } else {
    }
    break;
  }
  var G__33272 = args33270.length;
  switch(G__33272) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33270.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__33277 = null;
  var G__33277__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__33277__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33277 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33277__1.call(this, x);
      case 2:
        return G__33277__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33277.cljs$core$IFn$_invoke$arity$1 = G__33277__1;
  G__33277.cljs$core$IFn$_invoke$arity$2 = G__33277__2;
  return G__33277;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__33278 = null;
  var G__33278__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__33278__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33278 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33278__1.call(this, x);
      case 2:
        return G__33278__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33278.cljs$core$IFn$_invoke$arity$1 = G__33278__1;
  G__33278.cljs$core$IFn$_invoke$arity$2 = G__33278__2;
  return G__33278;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__33281 = cljs.core.next(s__$1);
      s__$1 = G__33281;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_33282 = 0;
  var xs_33283 = cljs.core.seq(coll);
  while (true) {
    if (xs_33283) {
      ret[i_33282] = cljs.core.to_array(cljs.core.first(xs_33283));
      var G__33284 = i_33282 + 1;
      var G__33285 = cljs.core.next(xs_33283);
      i_33282 = G__33284;
      xs_33283 = G__33285;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args33286 = [];
  var len__31204__auto___33289 = arguments.length;
  var i__31205__auto___33290 = 0;
  while (true) {
    if (i__31205__auto___33290 < len__31204__auto___33289) {
      args33286.push(arguments[i__31205__auto___33290]);
      var G__33291 = i__31205__auto___33290 + 1;
      i__31205__auto___33290 = G__33291;
      continue;
    } else {
    }
    break;
  }
  var G__33288 = args33286.length;
  switch(G__33288) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33286.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__33293 = i + 1;
        var G__33294 = cljs.core.next(s__$1);
        i = G__33293;
        s__$1 = G__33294;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__31014__auto___33295 = size;
    var i_33296 = 0;
    while (true) {
      if (i_33296 < n__31014__auto___33295) {
        a[i_33296] = init_val_or_seq;
        var G__33297 = i_33296 + 1;
        i_33296 = G__33297;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args33298 = [];
  var len__31204__auto___33301 = arguments.length;
  var i__31205__auto___33302 = 0;
  while (true) {
    if (i__31205__auto___33302 < len__31204__auto___33301) {
      args33298.push(arguments[i__31205__auto___33302]);
      var G__33303 = i__31205__auto___33302 + 1;
      i__31205__auto___33302 = G__33303;
      continue;
    } else {
    }
    break;
  }
  var G__33300 = args33298.length;
  switch(G__33300) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33298.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__33305 = i + 1;
        var G__33306 = cljs.core.next(s__$1);
        i = G__33305;
        s__$1 = G__33306;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__31014__auto___33307 = size;
    var i_33308 = 0;
    while (true) {
      if (i_33308 < n__31014__auto___33307) {
        a[i_33308] = init_val_or_seq;
        var G__33309 = i_33308 + 1;
        i_33308 = G__33309;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args33310 = [];
  var len__31204__auto___33313 = arguments.length;
  var i__31205__auto___33314 = 0;
  while (true) {
    if (i__31205__auto___33314 < len__31204__auto___33313) {
      args33310.push(arguments[i__31205__auto___33314]);
      var G__33315 = i__31205__auto___33314 + 1;
      i__31205__auto___33314 = G__33315;
      continue;
    } else {
    }
    break;
  }
  var G__33312 = args33310.length;
  switch(G__33312) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33310.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__33317 = i + 1;
        var G__33318 = cljs.core.next(s__$1);
        i = G__33317;
        s__$1 = G__33318;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__31014__auto___33319 = size;
    var i_33320 = 0;
    while (true) {
      if (i_33320 < n__31014__auto___33319) {
        a[i_33320] = init_val_or_seq;
        var G__33321 = i_33320 + 1;
        i_33320 = G__33321;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args33322 = [];
  var len__31204__auto___33325 = arguments.length;
  var i__31205__auto___33326 = 0;
  while (true) {
    if (i__31205__auto___33326 < len__31204__auto___33325) {
      args33322.push(arguments[i__31205__auto___33326]);
      var G__33327 = i__31205__auto___33326 + 1;
      i__31205__auto___33326 = G__33327;
      continue;
    } else {
    }
    break;
  }
  var G__33324 = args33322.length;
  switch(G__33324) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33322.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__33329 = i + 1;
        var G__33330 = cljs.core.next(s__$1);
        i = G__33329;
        s__$1 = G__33330;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__31014__auto___33331 = size;
    var i_33332 = 0;
    while (true) {
      if (i_33332 < n__31014__auto___33331) {
        a[i_33332] = init_val_or_seq;
        var G__33333 = i_33332 + 1;
        i_33332 = G__33333;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__33334 = i + 1;
        var G__33335 = cljs.core.next(s);
        i = G__33334;
        s = G__33335;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), function() {
        var G__33337 = cljs.core.next(arglist);
        return cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(G__33337) : cljs.core.spread.call(null, G__33337);
      }());
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args33338 = [];
  var len__31204__auto___33350 = arguments.length;
  var i__31205__auto___33351 = 0;
  while (true) {
    if (i__31205__auto___33351 < len__31204__auto___33350) {
      args33338.push(arguments[i__31205__auto___33351]);
      var G__33352 = i__31205__auto___33351 + 1;
      i__31205__auto___33351 = G__33352;
      continue;
    } else {
    }
    break;
  }
  var G__33343 = args33338.length;
  switch(G__33343) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33338.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq33339) {
  var G__33340 = cljs.core.first(seq33339);
  var seq33339__$1 = cljs.core.next(seq33339);
  var G__33341 = cljs.core.first(seq33339__$1);
  var seq33339__$2 = cljs.core.next(seq33339__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__33340, G__33341, seq33339__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args33354 = [];
  var len__31204__auto___33362 = arguments.length;
  var i__31205__auto___33363 = 0;
  while (true) {
    if (i__31205__auto___33363 < len__31204__auto___33362) {
      args33354.push(arguments[i__31205__auto___33363]);
      var G__33364 = i__31205__auto___33363 + 1;
      i__31205__auto___33363 = G__33364;
      continue;
    } else {
    }
    break;
  }
  var G__33361 = args33354.length;
  switch(G__33361) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33354.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__31223__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq33355) {
  var G__33356 = cljs.core.first(seq33355);
  var seq33355__$1 = cljs.core.next(seq33355);
  var G__33357 = cljs.core.first(seq33355__$1);
  var seq33355__$2 = cljs.core.next(seq33355__$1);
  var G__33358 = cljs.core.first(seq33355__$2);
  var seq33355__$3 = cljs.core.next(seq33355__$2);
  var G__33359 = cljs.core.first(seq33355__$3);
  var seq33355__$4 = cljs.core.next(seq33355__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__33356, G__33357, G__33358, G__33359, seq33355__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args33366 = [];
  var len__31204__auto___33372 = arguments.length;
  var i__31205__auto___33373 = 0;
  while (true) {
    if (i__31205__auto___33373 < len__31204__auto___33372) {
      args33366.push(arguments[i__31205__auto___33373]);
      var G__33374 = i__31205__auto___33373 + 1;
      i__31205__auto___33373 = G__33374;
      continue;
    } else {
    }
    break;
  }
  var G__33371 = args33366.length;
  switch(G__33371) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33366.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__33376 = ntcoll;
      var G__33377 = cljs.core.first(vals);
      var G__33378 = cljs.core.next(vals);
      tcoll = G__33376;
      val = G__33377;
      vals = G__33378;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq33367) {
  var G__33368 = cljs.core.first(seq33367);
  var seq33367__$1 = cljs.core.next(seq33367);
  var G__33369 = cljs.core.first(seq33367__$1);
  var seq33367__$2 = cljs.core.next(seq33367__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__33368, G__33369, seq33367__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args33379 = [];
  var len__31204__auto___33386 = arguments.length;
  var i__31205__auto___33387 = 0;
  while (true) {
    if (i__31205__auto___33387 < len__31204__auto___33386) {
      args33379.push(arguments[i__31205__auto___33387]);
      var G__33388 = i__31205__auto___33387 + 1;
      i__31205__auto___33387 = G__33388;
      continue;
    } else {
    }
    break;
  }
  var G__33385 = args33379.length;
  switch(G__33385) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33379.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__33390 = ntcoll;
      var G__33391 = cljs.core.first(kvs);
      var G__33392 = cljs.core.second(kvs);
      var G__33393 = cljs.core.nnext(kvs);
      tcoll = G__33390;
      key = G__33391;
      val = G__33392;
      kvs = G__33393;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq33380) {
  var G__33381 = cljs.core.first(seq33380);
  var seq33380__$1 = cljs.core.next(seq33380);
  var G__33382 = cljs.core.first(seq33380__$1);
  var seq33380__$2 = cljs.core.next(seq33380__$1);
  var G__33383 = cljs.core.first(seq33380__$2);
  var seq33380__$3 = cljs.core.next(seq33380__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__33381, G__33382, G__33383, seq33380__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args33394 = [];
  var len__31204__auto___33400 = arguments.length;
  var i__31205__auto___33401 = 0;
  while (true) {
    if (i__31205__auto___33401 < len__31204__auto___33400) {
      args33394.push(arguments[i__31205__auto___33401]);
      var G__33402 = i__31205__auto___33401 + 1;
      i__31205__auto___33401 = G__33402;
      continue;
    } else {
    }
    break;
  }
  var G__33399 = args33394.length;
  switch(G__33399) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33394.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__33404 = ntcoll;
      var G__33405 = cljs.core.first(ks);
      var G__33406 = cljs.core.next(ks);
      tcoll = G__33404;
      key = G__33405;
      ks = G__33406;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq33395) {
  var G__33396 = cljs.core.first(seq33395);
  var seq33395__$1 = cljs.core.next(seq33395);
  var G__33397 = cljs.core.first(seq33395__$1);
  var seq33395__$2 = cljs.core.next(seq33395__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__33396, G__33397, seq33395__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args33407 = [];
  var len__31204__auto___33413 = arguments.length;
  var i__31205__auto___33414 = 0;
  while (true) {
    if (i__31205__auto___33414 < len__31204__auto___33413) {
      args33407.push(arguments[i__31205__auto___33414]);
      var G__33415 = i__31205__auto___33414 + 1;
      i__31205__auto___33414 = G__33415;
      continue;
    } else {
    }
    break;
  }
  var G__33412 = args33407.length;
  switch(G__33412) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33407.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__33417 = ntcoll;
      var G__33418 = cljs.core.first(vals);
      var G__33419 = cljs.core.next(vals);
      tcoll = G__33417;
      val = G__33418;
      vals = G__33419;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq33408) {
  var G__33409 = cljs.core.first(seq33408);
  var seq33408__$1 = cljs.core.next(seq33408);
  var G__33410 = cljs.core.first(seq33408__$1);
  var seq33408__$2 = cljs.core.next(seq33408__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__33409, G__33410, seq33408__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a31058 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a31058);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a31058) : f.call(null, a31058);
      }
    } else {
      var b31059 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a31058, b31059);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a31058, b31059) : f.call(null, a31058, b31059);
        }
      } else {
        var c31060 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a31058, b31059, c31060);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a31058, b31059, c31060) : f.call(null, a31058, b31059, c31060);
          }
        } else {
          var d31061 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a31058, b31059, c31060, d31061);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a31058, b31059, c31060, d31061) : f.call(null, a31058, b31059, c31060, d31061);
            }
          } else {
            var e31062 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a31058, b31059, c31060, d31061, e31062);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a31058, b31059, c31060, d31061, e31062) : f.call(null, a31058, b31059, c31060, d31061, e31062);
              }
            } else {
              var f31063 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a31058, b31059, c31060, d31061, e31062, f31063);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a31058, b31059, c31060, d31061, e31062, f31063) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063);
                }
              } else {
                var g31064 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a31058, b31059, c31060, d31061, e31062, f31063, g31064);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a31058, b31059, c31060, d31061, e31062, f31063, g31064) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064);
                  }
                } else {
                  var h31065 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065);
                    }
                  } else {
                    var i31066 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066);
                      }
                    } else {
                      var j31067 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067);
                        }
                      } else {
                        var k31068 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068);
                          }
                        } else {
                          var l31069 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069);
                            }
                          } else {
                            var m31070 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070);
                              }
                            } else {
                              var n31071 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071);
                                }
                              } else {
                                var o31072 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072);
                                  }
                                } else {
                                  var p31073 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073);
                                    }
                                  } else {
                                    var q31074 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074);
                                      }
                                    } else {
                                      var r31075 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075);
                                        }
                                      } else {
                                        var s31076 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075, s31076);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075, s31076) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075, s31076);
                                          }
                                        } else {
                                          var t31077 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075, s31076, t31077);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075, s31076, t31077) : f.call(null, a31058, b31059, c31060, d31061, e31062, f31063, g31064, h31065, i31066, j31067, k31068, l31069, m31070, n31071, o31072, p31073, q31074, r31075, s31076, t31077);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args33420 = [];
  var len__31204__auto___33429 = arguments.length;
  var i__31205__auto___33430 = 0;
  while (true) {
    if (i__31205__auto___33430 < len__31204__auto___33429) {
      args33420.push(arguments[i__31205__auto___33430]);
      var G__33431 = i__31205__auto___33430 + 1;
      i__31205__auto___33430 = G__33431;
      continue;
    } else {
    }
    break;
  }
  var G__33428 = args33420.length;
  switch(G__33428) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33420.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__31223__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(fixed_arity + 1, arglist);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq33421) {
  var G__33422 = cljs.core.first(seq33421);
  var seq33421__$1 = cljs.core.next(seq33421);
  var G__33423 = cljs.core.first(seq33421__$1);
  var seq33421__$2 = cljs.core.next(seq33421__$1);
  var G__33424 = cljs.core.first(seq33421__$2);
  var seq33421__$3 = cljs.core.next(seq33421__$2);
  var G__33425 = cljs.core.first(seq33421__$3);
  var seq33421__$4 = cljs.core.next(seq33421__$3);
  var G__33426 = cljs.core.first(seq33421__$4);
  var seq33421__$5 = cljs.core.next(seq33421__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__33422, G__33423, G__33424, G__33425, G__33426, seq33421__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args33433 = [];
  var len__31204__auto___33458 = arguments.length;
  var i__31205__auto___33459 = 0;
  while (true) {
    if (i__31205__auto___33459 < len__31204__auto___33458) {
      args33433.push(arguments[i__31205__auto___33459]);
      var G__33460 = i__31205__auto___33459 + 1;
      i__31205__auto___33459 = G__33460;
      continue;
    } else {
    }
    break;
  }
  var G__33442 = args33433.length;
  switch(G__33442) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33433.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__31223__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__33443 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33443) : f.call(null, G__33443);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__33444 = cljs.core.meta(obj);
    var G__33445 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33444, G__33445) : f.call(null, G__33444, G__33445);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__33446 = cljs.core.meta(obj);
    var G__33447 = a;
    var G__33448 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33446, G__33447, G__33448) : f.call(null, G__33446, G__33447, G__33448);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__33449 = cljs.core.meta(obj);
    var G__33450 = a;
    var G__33451 = b;
    var G__33452 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33449, G__33450, G__33451, G__33452) : f.call(null, G__33449, G__33450, G__33451, G__33452);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__33453 = cljs.core.meta(obj);
    var G__33454 = a;
    var G__33455 = b;
    var G__33456 = c;
    var G__33457 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33453, G__33454, G__33455, G__33456, G__33457) : f.call(null, G__33453, G__33454, G__33455, G__33456, G__33457);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq33434) {
  var G__33435 = cljs.core.first(seq33434);
  var seq33434__$1 = cljs.core.next(seq33434);
  var G__33436 = cljs.core.first(seq33434__$1);
  var seq33434__$2 = cljs.core.next(seq33434__$1);
  var G__33437 = cljs.core.first(seq33434__$2);
  var seq33434__$3 = cljs.core.next(seq33434__$2);
  var G__33438 = cljs.core.first(seq33434__$3);
  var seq33434__$4 = cljs.core.next(seq33434__$3);
  var G__33439 = cljs.core.first(seq33434__$4);
  var seq33434__$5 = cljs.core.next(seq33434__$4);
  var G__33440 = cljs.core.first(seq33434__$5);
  var seq33434__$6 = cljs.core.next(seq33434__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__33435, G__33436, G__33437, G__33438, G__33439, G__33440, seq33434__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args33462 = [];
  var len__31204__auto___33468 = arguments.length;
  var i__31205__auto___33469 = 0;
  while (true) {
    if (i__31205__auto___33469 < len__31204__auto___33468) {
      args33462.push(arguments[i__31205__auto___33469]);
      var G__33470 = i__31205__auto___33469 + 1;
      i__31205__auto___33469 = G__33470;
      continue;
    } else {
    }
    break;
  }
  var G__33467 = args33462.length;
  switch(G__33467) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33462.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq33463) {
  var G__33464 = cljs.core.first(seq33463);
  var seq33463__$1 = cljs.core.next(seq33463);
  var G__33465 = cljs.core.first(seq33463__$1);
  var seq33463__$2 = cljs.core.next(seq33463__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__33464, G__33465, seq33463__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core33475 !== "undefined") {
  } else {
    cljs.core.t_cljs$core33475 = function(meta33476) {
      this.meta33476 = meta33476;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core33475.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33477, meta33476__$1) {
      var self__ = this;
      var _33477__$1 = this;
      return new cljs.core.t_cljs$core33475(meta33476__$1);
    };
    cljs.core.t_cljs$core33475.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33477) {
      var self__ = this;
      var _33477__$1 = this;
      return self__.meta33476;
    };
    cljs.core.t_cljs$core33475.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core33475.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core33475.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core33475.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta33476", "meta33476", 1166484122, null)], null);
    };
    cljs.core.t_cljs$core33475.cljs$lang$type = true;
    cljs.core.t_cljs$core33475.cljs$lang$ctorStr = "cljs.core/t_cljs$core33475";
    cljs.core.t_cljs$core33475.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
      return cljs.core._write(writer__30703__auto__, "cljs.core/t_cljs$core33475");
    };
    cljs.core.__GT_t_cljs$core33475 = function cljs$core$nil_iter_$___GT_t_cljs$core33475(meta33476) {
      return new cljs.core.t_cljs$core33475(meta33476);
    };
  }
  return new cljs.core.t_cljs$core33475(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__30084__auto__ = !(lt.stepper == null);
      if (and__30084__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__30084__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__33478 = lt;
        var G__33479 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__33478, G__33479) : self__.xform.call(null, G__33478, G__33479);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__33480 = cljs.core.next(iters__$1);
        iters__$1 = G__33480;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__31014__auto___33481 = self__.iters.length;
  var i_33482 = 0;
  while (true) {
    if (i_33482 < n__31014__auto___33481) {
      self__.nexts[i_33482] = self__.iters[i_33482].next();
      var G__33483 = i_33482 + 1;
      i_33482 = G__33483;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__30084__auto__ = !(lt.stepper == null);
      if (and__30084__auto__) {
        return this$.hasNext();
      } else {
        return and__30084__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args33484 = [];
  var len__31204__auto___33487 = arguments.length;
  var i__31205__auto___33488 = 0;
  while (true) {
    if (i__31205__auto___33488 < len__31204__auto___33487) {
      args33484.push(arguments[i__31205__auto___33488]);
      var G__33489 = i__31205__auto___33488 + 1;
      i__31205__auto___33488 = G__33489;
      continue;
    } else {
    }
    break;
  }
  var G__33486 = args33484.length;
  switch(G__33486) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33484.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.indexOf = function() {
  var G__33491 = null;
  var G__33491__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__33491__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33491 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33491__1.call(this, x);
      case 2:
        return G__33491__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33491.cljs$core$IFn$_invoke$arity$1 = G__33491__1;
  G__33491.cljs$core$IFn$_invoke$arity$2 = G__33491__2;
  return G__33491;
}();
cljs.core.LazyTransformer.prototype.lastIndexOf = function() {
  var G__33492 = null;
  var G__33492__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__33492__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__33492 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__33492__1.call(this, x);
      case 2:
        return G__33492__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__33492.cljs$core$IFn$_invoke$arity$1 = G__33492__1;
  G__33492.cljs$core$IFn$_invoke$arity$2 = G__33492__2;
  return G__33492;
}();
cljs.core.LazyTransformer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__33493_33497 = cljs.core.seq(colls);
  var chunk__33494_33498 = null;
  var count__33495_33499 = 0;
  var i__33496_33500 = 0;
  while (true) {
    if (i__33496_33500 < count__33495_33499) {
      var coll_33501 = chunk__33494_33498.cljs$core$IIndexed$_nth$arity$2(null, i__33496_33500);
      iters.push(cljs.core.iter(coll_33501));
      var G__33502 = seq__33493_33497;
      var G__33503 = chunk__33494_33498;
      var G__33504 = count__33495_33499;
      var G__33505 = i__33496_33500 + 1;
      seq__33493_33497 = G__33502;
      chunk__33494_33498 = G__33503;
      count__33495_33499 = G__33504;
      i__33496_33500 = G__33505;
      continue;
    } else {
      var temp__4657__auto___33506 = cljs.core.seq(seq__33493_33497);
      if (temp__4657__auto___33506) {
        var seq__33493_33507__$1 = temp__4657__auto___33506;
        if (cljs.core.chunked_seq_QMARK_(seq__33493_33507__$1)) {
          var c__30910__auto___33508 = cljs.core.chunk_first(seq__33493_33507__$1);
          var G__33509 = cljs.core.chunk_rest(seq__33493_33507__$1);
          var G__33510 = c__30910__auto___33508;
          var G__33511 = cljs.core.count(c__30910__auto___33508);
          var G__33512 = 0;
          seq__33493_33497 = G__33509;
          chunk__33494_33498 = G__33510;
          count__33495_33499 = G__33511;
          i__33496_33500 = G__33512;
          continue;
        } else {
          var coll_33513 = cljs.core.first(seq__33493_33507__$1);
          iters.push(cljs.core.iter(coll_33513));
          var G__33514 = cljs.core.next(seq__33493_33507__$1);
          var G__33515 = null;
          var G__33516 = 0;
          var G__33517 = 0;
          seq__33493_33497 = G__33514;
          chunk__33494_33498 = G__33515;
          count__33495_33499 = G__33516;
          i__33496_33500 = G__33517;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args33518 = [];
  var len__31204__auto___33524 = arguments.length;
  var i__31205__auto___33525 = 0;
  while (true) {
    if (i__31205__auto___33525 < len__31204__auto___33524) {
      args33518.push(arguments[i__31205__auto___33525]);
      var G__33526 = i__31205__auto___33525 + 1;
      i__31205__auto___33525 = G__33526;
      continue;
    } else {
    }
    break;
  }
  var G__33523 = args33518.length;
  switch(G__33523) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33518.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__30096__auto__ = cljs.core.seq(coll);
    if (or__30096__auto__) {
      return or__30096__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq33519) {
  var G__33520 = cljs.core.first(seq33519);
  var seq33519__$1 = cljs.core.next(seq33519);
  var G__33521 = cljs.core.first(seq33519__$1);
  var seq33519__$2 = cljs.core.next(seq33519__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__33520, G__33521, seq33519__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__33529 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33529) : pred.call(null, G__33529);
      }())) {
        var G__33530 = pred;
        var G__33531 = cljs.core.next(coll);
        pred = G__33530;
        coll = G__33531;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__30096__auto__ = function() {
        var G__33535 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33535) : pred.call(null, G__33535);
      }();
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        var G__33536 = pred;
        var G__33537 = cljs.core.next(coll);
        pred = G__33536;
        coll = G__33537;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__33538 = null;
    var G__33538__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__33538__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__33538__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__33538__3 = function() {
      var G__33539__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__33539 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__33540__i = 0, G__33540__a = new Array(arguments.length - 2);
          while (G__33540__i < G__33540__a.length) {
            G__33540__a[G__33540__i] = arguments[G__33540__i + 2];
            ++G__33540__i;
          }
          zs = new cljs.core.IndexedSeq(G__33540__a, 0);
        }
        return G__33539__delegate.call(this, x, y, zs);
      };
      G__33539.cljs$lang$maxFixedArity = 2;
      G__33539.cljs$lang$applyTo = function(arglist__33541) {
        var x = cljs.core.first(arglist__33541);
        arglist__33541 = cljs.core.next(arglist__33541);
        var y = cljs.core.first(arglist__33541);
        var zs = cljs.core.rest(arglist__33541);
        return G__33539__delegate(x, y, zs);
      };
      G__33539.cljs$core$IFn$_invoke$arity$variadic = G__33539__delegate;
      return G__33539;
    }();
    G__33538 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__33538__0.call(this);
        case 1:
          return G__33538__1.call(this, x);
        case 2:
          return G__33538__2.call(this, x, y);
        default:
          var G__33542 = null;
          if (arguments.length > 2) {
            var G__33543__i = 0, G__33543__a = new Array(arguments.length - 2);
            while (G__33543__i < G__33543__a.length) {
              G__33543__a[G__33543__i] = arguments[G__33543__i + 2];
              ++G__33543__i;
            }
            G__33542 = new cljs.core.IndexedSeq(G__33543__a, 0);
          }
          return G__33538__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__33542);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33538.cljs$lang$maxFixedArity = 2;
    G__33538.cljs$lang$applyTo = G__33538__3.cljs$lang$applyTo;
    G__33538.cljs$core$IFn$_invoke$arity$0 = G__33538__0;
    G__33538.cljs$core$IFn$_invoke$arity$1 = G__33538__1;
    G__33538.cljs$core$IFn$_invoke$arity$2 = G__33538__2;
    G__33538.cljs$core$IFn$_invoke$arity$variadic = G__33538__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__33538;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__33544__delegate = function(args) {
      return x;
    };
    var G__33544 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__33545__i = 0, G__33545__a = new Array(arguments.length - 0);
        while (G__33545__i < G__33545__a.length) {
          G__33545__a[G__33545__i] = arguments[G__33545__i + 0];
          ++G__33545__i;
        }
        args = new cljs.core.IndexedSeq(G__33545__a, 0);
      }
      return G__33544__delegate.call(this, args);
    };
    G__33544.cljs$lang$maxFixedArity = 0;
    G__33544.cljs$lang$applyTo = function(arglist__33546) {
      var args = cljs.core.seq(arglist__33546);
      return G__33544__delegate(args);
    };
    G__33544.cljs$core$IFn$_invoke$arity$variadic = G__33544__delegate;
    return G__33544;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args33547 = [];
  var len__31204__auto___33569 = arguments.length;
  var i__31205__auto___33570 = 0;
  while (true) {
    if (i__31205__auto___33570 < len__31204__auto___33569) {
      args33547.push(arguments[i__31205__auto___33570]);
      var G__33571 = i__31205__auto___33570 + 1;
      i__31205__auto___33570 = G__33571;
      continue;
    } else {
    }
    break;
  }
  var G__33553 = args33547.length;
  switch(G__33553) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33547.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__33573 = null;
    var G__33573__0 = function() {
      var G__33554 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33554) : f.call(null, G__33554);
    };
    var G__33573__1 = function(x) {
      var G__33555 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33555) : f.call(null, G__33555);
    };
    var G__33573__2 = function(x, y) {
      var G__33556 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33556) : f.call(null, G__33556);
    };
    var G__33573__3 = function(x, y, z) {
      var G__33557 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33557) : f.call(null, G__33557);
    };
    var G__33573__4 = function() {
      var G__33574__delegate = function(x, y, z, args) {
        var G__33558 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33558) : f.call(null, G__33558);
      };
      var G__33574 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33575__i = 0, G__33575__a = new Array(arguments.length - 3);
          while (G__33575__i < G__33575__a.length) {
            G__33575__a[G__33575__i] = arguments[G__33575__i + 3];
            ++G__33575__i;
          }
          args = new cljs.core.IndexedSeq(G__33575__a, 0);
        }
        return G__33574__delegate.call(this, x, y, z, args);
      };
      G__33574.cljs$lang$maxFixedArity = 3;
      G__33574.cljs$lang$applyTo = function(arglist__33576) {
        var x = cljs.core.first(arglist__33576);
        arglist__33576 = cljs.core.next(arglist__33576);
        var y = cljs.core.first(arglist__33576);
        arglist__33576 = cljs.core.next(arglist__33576);
        var z = cljs.core.first(arglist__33576);
        var args = cljs.core.rest(arglist__33576);
        return G__33574__delegate(x, y, z, args);
      };
      G__33574.cljs$core$IFn$_invoke$arity$variadic = G__33574__delegate;
      return G__33574;
    }();
    G__33573 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__33573__0.call(this);
        case 1:
          return G__33573__1.call(this, x);
        case 2:
          return G__33573__2.call(this, x, y);
        case 3:
          return G__33573__3.call(this, x, y, z);
        default:
          var G__33577 = null;
          if (arguments.length > 3) {
            var G__33578__i = 0, G__33578__a = new Array(arguments.length - 3);
            while (G__33578__i < G__33578__a.length) {
              G__33578__a[G__33578__i] = arguments[G__33578__i + 3];
              ++G__33578__i;
            }
            G__33577 = new cljs.core.IndexedSeq(G__33578__a, 0);
          }
          return G__33573__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33577);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33573.cljs$lang$maxFixedArity = 3;
    G__33573.cljs$lang$applyTo = G__33573__4.cljs$lang$applyTo;
    G__33573.cljs$core$IFn$_invoke$arity$0 = G__33573__0;
    G__33573.cljs$core$IFn$_invoke$arity$1 = G__33573__1;
    G__33573.cljs$core$IFn$_invoke$arity$2 = G__33573__2;
    G__33573.cljs$core$IFn$_invoke$arity$3 = G__33573__3;
    G__33573.cljs$core$IFn$_invoke$arity$variadic = G__33573__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__33573;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__33579 = null;
    var G__33579__0 = function() {
      var G__33559 = function() {
        var G__33560 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33560) : g.call(null, G__33560);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33559) : f.call(null, G__33559);
    };
    var G__33579__1 = function(x) {
      var G__33561 = function() {
        var G__33562 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33562) : g.call(null, G__33562);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33561) : f.call(null, G__33561);
    };
    var G__33579__2 = function(x, y) {
      var G__33563 = function() {
        var G__33564 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33564) : g.call(null, G__33564);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33563) : f.call(null, G__33563);
    };
    var G__33579__3 = function(x, y, z) {
      var G__33565 = function() {
        var G__33566 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33566) : g.call(null, G__33566);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33565) : f.call(null, G__33565);
    };
    var G__33579__4 = function() {
      var G__33580__delegate = function(x, y, z, args) {
        var G__33567 = function() {
          var G__33568 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33568) : g.call(null, G__33568);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33567) : f.call(null, G__33567);
      };
      var G__33580 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33581__i = 0, G__33581__a = new Array(arguments.length - 3);
          while (G__33581__i < G__33581__a.length) {
            G__33581__a[G__33581__i] = arguments[G__33581__i + 3];
            ++G__33581__i;
          }
          args = new cljs.core.IndexedSeq(G__33581__a, 0);
        }
        return G__33580__delegate.call(this, x, y, z, args);
      };
      G__33580.cljs$lang$maxFixedArity = 3;
      G__33580.cljs$lang$applyTo = function(arglist__33582) {
        var x = cljs.core.first(arglist__33582);
        arglist__33582 = cljs.core.next(arglist__33582);
        var y = cljs.core.first(arglist__33582);
        arglist__33582 = cljs.core.next(arglist__33582);
        var z = cljs.core.first(arglist__33582);
        var args = cljs.core.rest(arglist__33582);
        return G__33580__delegate(x, y, z, args);
      };
      G__33580.cljs$core$IFn$_invoke$arity$variadic = G__33580__delegate;
      return G__33580;
    }();
    G__33579 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__33579__0.call(this);
        case 1:
          return G__33579__1.call(this, x);
        case 2:
          return G__33579__2.call(this, x, y);
        case 3:
          return G__33579__3.call(this, x, y, z);
        default:
          var G__33583 = null;
          if (arguments.length > 3) {
            var G__33584__i = 0, G__33584__a = new Array(arguments.length - 3);
            while (G__33584__i < G__33584__a.length) {
              G__33584__a[G__33584__i] = arguments[G__33584__i + 3];
              ++G__33584__i;
            }
            G__33583 = new cljs.core.IndexedSeq(G__33584__a, 0);
          }
          return G__33579__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33583);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33579.cljs$lang$maxFixedArity = 3;
    G__33579.cljs$lang$applyTo = G__33579__4.cljs$lang$applyTo;
    G__33579.cljs$core$IFn$_invoke$arity$0 = G__33579__0;
    G__33579.cljs$core$IFn$_invoke$arity$1 = G__33579__1;
    G__33579.cljs$core$IFn$_invoke$arity$2 = G__33579__2;
    G__33579.cljs$core$IFn$_invoke$arity$3 = G__33579__3;
    G__33579.cljs$core$IFn$_invoke$arity$variadic = G__33579__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__33579;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__33585__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__33586 = cljs.core.first(fs__$2).call(null, ret);
            var G__33587 = cljs.core.next(fs__$2);
            ret = G__33586;
            fs__$2 = G__33587;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__33585 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__33588__i = 0, G__33588__a = new Array(arguments.length - 0);
          while (G__33588__i < G__33588__a.length) {
            G__33588__a[G__33588__i] = arguments[G__33588__i + 0];
            ++G__33588__i;
          }
          args = new cljs.core.IndexedSeq(G__33588__a, 0);
        }
        return G__33585__delegate.call(this, args);
      };
      G__33585.cljs$lang$maxFixedArity = 0;
      G__33585.cljs$lang$applyTo = function(arglist__33589) {
        var args = cljs.core.seq(arglist__33589);
        return G__33585__delegate(args);
      };
      G__33585.cljs$core$IFn$_invoke$arity$variadic = G__33585__delegate;
      return G__33585;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq33548) {
  var G__33549 = cljs.core.first(seq33548);
  var seq33548__$1 = cljs.core.next(seq33548);
  var G__33550 = cljs.core.first(seq33548__$1);
  var seq33548__$2 = cljs.core.next(seq33548__$1);
  var G__33551 = cljs.core.first(seq33548__$2);
  var seq33548__$3 = cljs.core.next(seq33548__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__33549, G__33550, G__33551, seq33548__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args33590 = [];
  var len__31204__auto___33598 = arguments.length;
  var i__31205__auto___33599 = 0;
  while (true) {
    if (i__31205__auto___33599 < len__31204__auto___33598) {
      args33590.push(arguments[i__31205__auto___33599]);
      var G__33600 = i__31205__auto___33599 + 1;
      i__31205__auto___33599 = G__33600;
      continue;
    } else {
    }
    break;
  }
  var G__33597 = args33590.length;
  switch(G__33597) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33590.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__31223__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__33602 = null;
    var G__33602__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__33602__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__33602__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__33602__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__33602__4 = function() {
      var G__33603__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__33603 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33604__i = 0, G__33604__a = new Array(arguments.length - 3);
          while (G__33604__i < G__33604__a.length) {
            G__33604__a[G__33604__i] = arguments[G__33604__i + 3];
            ++G__33604__i;
          }
          args = new cljs.core.IndexedSeq(G__33604__a, 0);
        }
        return G__33603__delegate.call(this, x, y, z, args);
      };
      G__33603.cljs$lang$maxFixedArity = 3;
      G__33603.cljs$lang$applyTo = function(arglist__33605) {
        var x = cljs.core.first(arglist__33605);
        arglist__33605 = cljs.core.next(arglist__33605);
        var y = cljs.core.first(arglist__33605);
        arglist__33605 = cljs.core.next(arglist__33605);
        var z = cljs.core.first(arglist__33605);
        var args = cljs.core.rest(arglist__33605);
        return G__33603__delegate(x, y, z, args);
      };
      G__33603.cljs$core$IFn$_invoke$arity$variadic = G__33603__delegate;
      return G__33603;
    }();
    G__33602 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__33602__0.call(this);
        case 1:
          return G__33602__1.call(this, x);
        case 2:
          return G__33602__2.call(this, x, y);
        case 3:
          return G__33602__3.call(this, x, y, z);
        default:
          var G__33606 = null;
          if (arguments.length > 3) {
            var G__33607__i = 0, G__33607__a = new Array(arguments.length - 3);
            while (G__33607__i < G__33607__a.length) {
              G__33607__a[G__33607__i] = arguments[G__33607__i + 3];
              ++G__33607__i;
            }
            G__33606 = new cljs.core.IndexedSeq(G__33607__a, 0);
          }
          return G__33602__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33606);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33602.cljs$lang$maxFixedArity = 3;
    G__33602.cljs$lang$applyTo = G__33602__4.cljs$lang$applyTo;
    G__33602.cljs$core$IFn$_invoke$arity$0 = G__33602__0;
    G__33602.cljs$core$IFn$_invoke$arity$1 = G__33602__1;
    G__33602.cljs$core$IFn$_invoke$arity$2 = G__33602__2;
    G__33602.cljs$core$IFn$_invoke$arity$3 = G__33602__3;
    G__33602.cljs$core$IFn$_invoke$arity$variadic = G__33602__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__33602;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__33608 = null;
    var G__33608__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__33608__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__33608__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__33608__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__33608__4 = function() {
      var G__33609__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__33609 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33610__i = 0, G__33610__a = new Array(arguments.length - 3);
          while (G__33610__i < G__33610__a.length) {
            G__33610__a[G__33610__i] = arguments[G__33610__i + 3];
            ++G__33610__i;
          }
          args = new cljs.core.IndexedSeq(G__33610__a, 0);
        }
        return G__33609__delegate.call(this, x, y, z, args);
      };
      G__33609.cljs$lang$maxFixedArity = 3;
      G__33609.cljs$lang$applyTo = function(arglist__33611) {
        var x = cljs.core.first(arglist__33611);
        arglist__33611 = cljs.core.next(arglist__33611);
        var y = cljs.core.first(arglist__33611);
        arglist__33611 = cljs.core.next(arglist__33611);
        var z = cljs.core.first(arglist__33611);
        var args = cljs.core.rest(arglist__33611);
        return G__33609__delegate(x, y, z, args);
      };
      G__33609.cljs$core$IFn$_invoke$arity$variadic = G__33609__delegate;
      return G__33609;
    }();
    G__33608 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__33608__0.call(this);
        case 1:
          return G__33608__1.call(this, x);
        case 2:
          return G__33608__2.call(this, x, y);
        case 3:
          return G__33608__3.call(this, x, y, z);
        default:
          var G__33612 = null;
          if (arguments.length > 3) {
            var G__33613__i = 0, G__33613__a = new Array(arguments.length - 3);
            while (G__33613__i < G__33613__a.length) {
              G__33613__a[G__33613__i] = arguments[G__33613__i + 3];
              ++G__33613__i;
            }
            G__33612 = new cljs.core.IndexedSeq(G__33613__a, 0);
          }
          return G__33608__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33612);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33608.cljs$lang$maxFixedArity = 3;
    G__33608.cljs$lang$applyTo = G__33608__4.cljs$lang$applyTo;
    G__33608.cljs$core$IFn$_invoke$arity$0 = G__33608__0;
    G__33608.cljs$core$IFn$_invoke$arity$1 = G__33608__1;
    G__33608.cljs$core$IFn$_invoke$arity$2 = G__33608__2;
    G__33608.cljs$core$IFn$_invoke$arity$3 = G__33608__3;
    G__33608.cljs$core$IFn$_invoke$arity$variadic = G__33608__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__33608;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__33614 = null;
    var G__33614__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__33614__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__33614__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__33614__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__33614__4 = function() {
      var G__33615__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__33615 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33616__i = 0, G__33616__a = new Array(arguments.length - 3);
          while (G__33616__i < G__33616__a.length) {
            G__33616__a[G__33616__i] = arguments[G__33616__i + 3];
            ++G__33616__i;
          }
          args = new cljs.core.IndexedSeq(G__33616__a, 0);
        }
        return G__33615__delegate.call(this, x, y, z, args);
      };
      G__33615.cljs$lang$maxFixedArity = 3;
      G__33615.cljs$lang$applyTo = function(arglist__33617) {
        var x = cljs.core.first(arglist__33617);
        arglist__33617 = cljs.core.next(arglist__33617);
        var y = cljs.core.first(arglist__33617);
        arglist__33617 = cljs.core.next(arglist__33617);
        var z = cljs.core.first(arglist__33617);
        var args = cljs.core.rest(arglist__33617);
        return G__33615__delegate(x, y, z, args);
      };
      G__33615.cljs$core$IFn$_invoke$arity$variadic = G__33615__delegate;
      return G__33615;
    }();
    G__33614 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__33614__0.call(this);
        case 1:
          return G__33614__1.call(this, x);
        case 2:
          return G__33614__2.call(this, x, y);
        case 3:
          return G__33614__3.call(this, x, y, z);
        default:
          var G__33618 = null;
          if (arguments.length > 3) {
            var G__33619__i = 0, G__33619__a = new Array(arguments.length - 3);
            while (G__33619__i < G__33619__a.length) {
              G__33619__a[G__33619__i] = arguments[G__33619__i + 3];
              ++G__33619__i;
            }
            G__33618 = new cljs.core.IndexedSeq(G__33619__a, 0);
          }
          return G__33614__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33618);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33614.cljs$lang$maxFixedArity = 3;
    G__33614.cljs$lang$applyTo = G__33614__4.cljs$lang$applyTo;
    G__33614.cljs$core$IFn$_invoke$arity$0 = G__33614__0;
    G__33614.cljs$core$IFn$_invoke$arity$1 = G__33614__1;
    G__33614.cljs$core$IFn$_invoke$arity$2 = G__33614__2;
    G__33614.cljs$core$IFn$_invoke$arity$3 = G__33614__3;
    G__33614.cljs$core$IFn$_invoke$arity$variadic = G__33614__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__33614;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__33620__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__33620 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__33621__i = 0, G__33621__a = new Array(arguments.length - 0);
        while (G__33621__i < G__33621__a.length) {
          G__33621__a[G__33621__i] = arguments[G__33621__i + 0];
          ++G__33621__i;
        }
        args = new cljs.core.IndexedSeq(G__33621__a, 0);
      }
      return G__33620__delegate.call(this, args);
    };
    G__33620.cljs$lang$maxFixedArity = 0;
    G__33620.cljs$lang$applyTo = function(arglist__33622) {
      var args = cljs.core.seq(arglist__33622);
      return G__33620__delegate(args);
    };
    G__33620.cljs$core$IFn$_invoke$arity$variadic = G__33620__delegate;
    return G__33620;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq33591) {
  var G__33592 = cljs.core.first(seq33591);
  var seq33591__$1 = cljs.core.next(seq33591);
  var G__33593 = cljs.core.first(seq33591__$1);
  var seq33591__$2 = cljs.core.next(seq33591__$1);
  var G__33594 = cljs.core.first(seq33591__$2);
  var seq33591__$3 = cljs.core.next(seq33591__$2);
  var G__33595 = cljs.core.first(seq33591__$3);
  var seq33591__$4 = cljs.core.next(seq33591__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__33592, G__33593, G__33594, G__33595, seq33591__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args33623 = [];
  var len__31204__auto___33642 = arguments.length;
  var i__31205__auto___33643 = 0;
  while (true) {
    if (i__31205__auto___33643 < len__31204__auto___33642) {
      args33623.push(arguments[i__31205__auto___33643]);
      var G__33644 = i__31205__auto___33643 + 1;
      i__31205__auto___33643 = G__33644;
      continue;
    } else {
    }
    break;
  }
  var G__33625 = args33623.length;
  switch(G__33625) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33623.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__33646 = null;
    var G__33646__1 = function(a) {
      var G__33626 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33626) : f.call(null, G__33626);
    };
    var G__33646__2 = function(a, b) {
      var G__33627 = a == null ? x : a;
      var G__33628 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33627, G__33628) : f.call(null, G__33627, G__33628);
    };
    var G__33646__3 = function(a, b, c) {
      var G__33629 = a == null ? x : a;
      var G__33630 = b;
      var G__33631 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33629, G__33630, G__33631) : f.call(null, G__33629, G__33630, G__33631);
    };
    var G__33646__4 = function() {
      var G__33647__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__33647 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__33648__i = 0, G__33648__a = new Array(arguments.length - 3);
          while (G__33648__i < G__33648__a.length) {
            G__33648__a[G__33648__i] = arguments[G__33648__i + 3];
            ++G__33648__i;
          }
          ds = new cljs.core.IndexedSeq(G__33648__a, 0);
        }
        return G__33647__delegate.call(this, a, b, c, ds);
      };
      G__33647.cljs$lang$maxFixedArity = 3;
      G__33647.cljs$lang$applyTo = function(arglist__33649) {
        var a = cljs.core.first(arglist__33649);
        arglist__33649 = cljs.core.next(arglist__33649);
        var b = cljs.core.first(arglist__33649);
        arglist__33649 = cljs.core.next(arglist__33649);
        var c = cljs.core.first(arglist__33649);
        var ds = cljs.core.rest(arglist__33649);
        return G__33647__delegate(a, b, c, ds);
      };
      G__33647.cljs$core$IFn$_invoke$arity$variadic = G__33647__delegate;
      return G__33647;
    }();
    G__33646 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__33646__1.call(this, a);
        case 2:
          return G__33646__2.call(this, a, b);
        case 3:
          return G__33646__3.call(this, a, b, c);
        default:
          var G__33650 = null;
          if (arguments.length > 3) {
            var G__33651__i = 0, G__33651__a = new Array(arguments.length - 3);
            while (G__33651__i < G__33651__a.length) {
              G__33651__a[G__33651__i] = arguments[G__33651__i + 3];
              ++G__33651__i;
            }
            G__33650 = new cljs.core.IndexedSeq(G__33651__a, 0);
          }
          return G__33646__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__33650);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33646.cljs$lang$maxFixedArity = 3;
    G__33646.cljs$lang$applyTo = G__33646__4.cljs$lang$applyTo;
    G__33646.cljs$core$IFn$_invoke$arity$1 = G__33646__1;
    G__33646.cljs$core$IFn$_invoke$arity$2 = G__33646__2;
    G__33646.cljs$core$IFn$_invoke$arity$3 = G__33646__3;
    G__33646.cljs$core$IFn$_invoke$arity$variadic = G__33646__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__33646;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__33652 = null;
    var G__33652__2 = function(a, b) {
      var G__33632 = a == null ? x : a;
      var G__33633 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33632, G__33633) : f.call(null, G__33632, G__33633);
    };
    var G__33652__3 = function(a, b, c) {
      var G__33634 = a == null ? x : a;
      var G__33635 = b == null ? y : b;
      var G__33636 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33634, G__33635, G__33636) : f.call(null, G__33634, G__33635, G__33636);
    };
    var G__33652__4 = function() {
      var G__33653__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__33653 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__33654__i = 0, G__33654__a = new Array(arguments.length - 3);
          while (G__33654__i < G__33654__a.length) {
            G__33654__a[G__33654__i] = arguments[G__33654__i + 3];
            ++G__33654__i;
          }
          ds = new cljs.core.IndexedSeq(G__33654__a, 0);
        }
        return G__33653__delegate.call(this, a, b, c, ds);
      };
      G__33653.cljs$lang$maxFixedArity = 3;
      G__33653.cljs$lang$applyTo = function(arglist__33655) {
        var a = cljs.core.first(arglist__33655);
        arglist__33655 = cljs.core.next(arglist__33655);
        var b = cljs.core.first(arglist__33655);
        arglist__33655 = cljs.core.next(arglist__33655);
        var c = cljs.core.first(arglist__33655);
        var ds = cljs.core.rest(arglist__33655);
        return G__33653__delegate(a, b, c, ds);
      };
      G__33653.cljs$core$IFn$_invoke$arity$variadic = G__33653__delegate;
      return G__33653;
    }();
    G__33652 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__33652__2.call(this, a, b);
        case 3:
          return G__33652__3.call(this, a, b, c);
        default:
          var G__33656 = null;
          if (arguments.length > 3) {
            var G__33657__i = 0, G__33657__a = new Array(arguments.length - 3);
            while (G__33657__i < G__33657__a.length) {
              G__33657__a[G__33657__i] = arguments[G__33657__i + 3];
              ++G__33657__i;
            }
            G__33656 = new cljs.core.IndexedSeq(G__33657__a, 0);
          }
          return G__33652__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__33656);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33652.cljs$lang$maxFixedArity = 3;
    G__33652.cljs$lang$applyTo = G__33652__4.cljs$lang$applyTo;
    G__33652.cljs$core$IFn$_invoke$arity$2 = G__33652__2;
    G__33652.cljs$core$IFn$_invoke$arity$3 = G__33652__3;
    G__33652.cljs$core$IFn$_invoke$arity$variadic = G__33652__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__33652;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__33658 = null;
    var G__33658__2 = function(a, b) {
      var G__33637 = a == null ? x : a;
      var G__33638 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33637, G__33638) : f.call(null, G__33637, G__33638);
    };
    var G__33658__3 = function(a, b, c) {
      var G__33639 = a == null ? x : a;
      var G__33640 = b == null ? y : b;
      var G__33641 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33639, G__33640, G__33641) : f.call(null, G__33639, G__33640, G__33641);
    };
    var G__33658__4 = function() {
      var G__33659__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__33659 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__33660__i = 0, G__33660__a = new Array(arguments.length - 3);
          while (G__33660__i < G__33660__a.length) {
            G__33660__a[G__33660__i] = arguments[G__33660__i + 3];
            ++G__33660__i;
          }
          ds = new cljs.core.IndexedSeq(G__33660__a, 0);
        }
        return G__33659__delegate.call(this, a, b, c, ds);
      };
      G__33659.cljs$lang$maxFixedArity = 3;
      G__33659.cljs$lang$applyTo = function(arglist__33661) {
        var a = cljs.core.first(arglist__33661);
        arglist__33661 = cljs.core.next(arglist__33661);
        var b = cljs.core.first(arglist__33661);
        arglist__33661 = cljs.core.next(arglist__33661);
        var c = cljs.core.first(arglist__33661);
        var ds = cljs.core.rest(arglist__33661);
        return G__33659__delegate(a, b, c, ds);
      };
      G__33659.cljs$core$IFn$_invoke$arity$variadic = G__33659__delegate;
      return G__33659;
    }();
    G__33658 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__33658__2.call(this, a, b);
        case 3:
          return G__33658__3.call(this, a, b, c);
        default:
          var G__33662 = null;
          if (arguments.length > 3) {
            var G__33663__i = 0, G__33663__a = new Array(arguments.length - 3);
            while (G__33663__i < G__33663__a.length) {
              G__33663__a[G__33663__i] = arguments[G__33663__i + 3];
              ++G__33663__i;
            }
            G__33662 = new cljs.core.IndexedSeq(G__33663__a, 0);
          }
          return G__33658__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__33662);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__33658.cljs$lang$maxFixedArity = 3;
    G__33658.cljs$lang$applyTo = G__33658__4.cljs$lang$applyTo;
    G__33658.cljs$core$IFn$_invoke$arity$2 = G__33658__2;
    G__33658.cljs$core$IFn$_invoke$arity$3 = G__33658__3;
    G__33658.cljs$core$IFn$_invoke$arity$variadic = G__33658__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__33658;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args33664 = [];
  var len__31204__auto___33695 = arguments.length;
  var i__31205__auto___33696 = 0;
  while (true) {
    if (i__31205__auto___33696 < len__31204__auto___33695) {
      args33664.push(arguments[i__31205__auto___33696]);
      var G__33697 = i__31205__auto___33696 + 1;
      i__31205__auto___33696 = G__33697;
      continue;
    } else {
    }
    break;
  }
  var G__33666 = args33664.length;
  switch(G__33666) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33664.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__33699 = null;
        var G__33699__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__33699__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__33699__2 = function(result, input) {
          var G__33667 = result;
          var G__33668 = function() {
            var G__33669 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__33670 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33669, G__33670) : f.call(null, G__33669, G__33670);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33667, G__33668) : rf.call(null, G__33667, G__33668);
        };
        G__33699 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__33699__0.call(this);
            case 1:
              return G__33699__1.call(this, result);
            case 2:
              return G__33699__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__33699.cljs$core$IFn$_invoke$arity$0 = G__33699__0;
        G__33699.cljs$core$IFn$_invoke$arity$1 = G__33699__1;
        G__33699.cljs$core$IFn$_invoke$arity$2 = G__33699__2;
        return G__33699;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__31014__auto___33700 = size;
          var i_33701 = 0;
          while (true) {
            if (i_33701 < n__31014__auto___33700) {
              cljs.core.chunk_append(b, function() {
                var G__33691 = idx + i_33701;
                var G__33692 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_33701);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33691, G__33692) : f.call(null, G__33691, G__33692);
              }());
              var G__33702 = i_33701 + 1;
              i_33701 = G__33702;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__33693 = idx;
            var G__33694 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33693, G__33694) : f.call(null, G__33693, G__33694);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args33703 = [];
  var len__31204__auto___33708 = arguments.length;
  var i__31205__auto___33709 = 0;
  while (true) {
    if (i__31205__auto___33709 < len__31204__auto___33708) {
      args33703.push(arguments[i__31205__auto___33709]);
      var G__33710 = i__31205__auto___33709 + 1;
      i__31205__auto___33709 = G__33710;
      continue;
    } else {
    }
    break;
  }
  var G__33705 = args33703.length;
  switch(G__33705) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33703.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__33712 = null;
      var G__33712__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__33712__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__33712__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__33712 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__33712__0.call(this);
          case 1:
            return G__33712__1.call(this, result);
          case 2:
            return G__33712__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__33712.cljs$core$IFn$_invoke$arity$0 = G__33712__0;
      G__33712.cljs$core$IFn$_invoke$arity$1 = G__33712__1;
      G__33712.cljs$core$IFn$_invoke$arity$2 = G__33712__2;
      return G__33712;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__31014__auto___33713 = size;
        var i_33714 = 0;
        while (true) {
          if (i_33714 < n__31014__auto___33713) {
            var x_33715 = function() {
              var G__33706 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_33714);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33706) : f.call(null, G__33706);
            }();
            if (x_33715 == null) {
            } else {
              cljs.core.chunk_append(b, x_33715);
            }
            var G__33716 = i_33714 + 1;
            i_33714 = G__33716;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__33707 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33707) : f.call(null, G__33707);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__33717 = cljs.core.seq(self__.watches);
  var chunk__33718 = null;
  var count__33719 = 0;
  var i__33720 = 0;
  while (true) {
    if (i__33720 < count__33719) {
      var vec__33721 = chunk__33718.cljs$core$IIndexed$_nth$arity$2(null, i__33720);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33721, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33721, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__33727 = seq__33717;
      var G__33728 = chunk__33718;
      var G__33729 = count__33719;
      var G__33730 = i__33720 + 1;
      seq__33717 = G__33727;
      chunk__33718 = G__33728;
      count__33719 = G__33729;
      i__33720 = G__33730;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__33717);
      if (temp__4657__auto__) {
        var seq__33717__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__33717__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first(seq__33717__$1);
          var G__33731 = cljs.core.chunk_rest(seq__33717__$1);
          var G__33732 = c__30910__auto__;
          var G__33733 = cljs.core.count(c__30910__auto__);
          var G__33734 = 0;
          seq__33717 = G__33731;
          chunk__33718 = G__33732;
          count__33719 = G__33733;
          i__33720 = G__33734;
          continue;
        } else {
          var vec__33724 = cljs.core.first(seq__33717__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33724, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33724, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__33735 = cljs.core.next(seq__33717__$1);
          var G__33736 = null;
          var G__33737 = 0;
          var G__33738 = 0;
          seq__33717 = G__33735;
          chunk__33718 = G__33736;
          count__33719 = G__33737;
          i__33720 = G__33738;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args33739 = [];
  var len__31204__auto___33747 = arguments.length;
  var i__31205__auto___33748 = 0;
  while (true) {
    if (i__31205__auto___33748 < len__31204__auto___33747) {
      args33739.push(arguments[i__31205__auto___33748]);
      var G__33749 = i__31205__auto___33748 + 1;
      i__31205__auto___33748 = G__33749;
      continue;
    } else {
    }
    break;
  }
  var G__33743 = args33739.length;
  switch(G__33743) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33739.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31223__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__33744) {
  var map__33745 = p__33744;
  var map__33745__$1 = (!(map__33745 == null) ? map__33745.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__33745.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__33745) : map__33745;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33745__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33745__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq33740) {
  var G__33741 = cljs.core.first(seq33740);
  var seq33740__$1 = cljs.core.next(seq33740);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__33741, seq33740__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args33751 = [];
  var len__31204__auto___33765 = arguments.length;
  var i__31205__auto___33766 = 0;
  while (true) {
    if (i__31205__auto___33766 < len__31204__auto___33765) {
      args33751.push(arguments[i__31205__auto___33766]);
      var G__33767 = i__31205__auto___33766 + 1;
      i__31205__auto___33766 = G__33767;
      continue;
    } else {
    }
    break;
  }
  var G__33758 = args33751.length;
  switch(G__33758) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33751.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__31223__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__33759 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33759) : f.call(null, G__33759);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__33760 = a.state;
      var G__33761 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33760, G__33761) : f.call(null, G__33760, G__33761);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__33762 = a.state;
      var G__33763 = x;
      var G__33764 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33762, G__33763, G__33764) : f.call(null, G__33762, G__33763, G__33764);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq33752) {
  var G__33753 = cljs.core.first(seq33752);
  var seq33752__$1 = cljs.core.next(seq33752);
  var G__33754 = cljs.core.first(seq33752__$1);
  var seq33752__$2 = cljs.core.next(seq33752__$1);
  var G__33755 = cljs.core.first(seq33752__$2);
  var seq33752__$3 = cljs.core.next(seq33752__$2);
  var G__33756 = cljs.core.first(seq33752__$3);
  var seq33752__$4 = cljs.core.next(seq33752__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__33753, G__33754, G__33755, G__33756, seq33752__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args33769 = [];
  var len__31204__auto___33800 = arguments.length;
  var i__31205__auto___33801 = 0;
  while (true) {
    if (i__31205__auto___33801 < len__31204__auto___33800) {
      args33769.push(arguments[i__31205__auto___33801]);
      var G__33802 = i__31205__auto___33801 + 1;
      i__31205__auto___33801 = G__33802;
      continue;
    } else {
    }
    break;
  }
  var G__33771 = args33769.length;
  switch(G__33771) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33769.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__33804 = null;
        var G__33804__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__33804__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__33804__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__33804 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__33804__0.call(this);
            case 1:
              return G__33804__1.call(this, result);
            case 2:
              return G__33804__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__33804.cljs$core$IFn$_invoke$arity$0 = G__33804__0;
        G__33804.cljs$core$IFn$_invoke$arity$1 = G__33804__1;
        G__33804.cljs$core$IFn$_invoke$arity$2 = G__33804__2;
        return G__33804;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__31014__auto___33805 = size;
          var i_33806 = 0;
          while (true) {
            if (i_33806 < n__31014__auto___33805) {
              var x_33807 = function() {
                var G__33796 = idx + i_33806;
                var G__33797 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_33806);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33796, G__33797) : f.call(null, G__33796, G__33797);
              }();
              if (x_33807 == null) {
              } else {
                cljs.core.chunk_append(b, x_33807);
              }
              var G__33808 = i_33806 + 1;
              i_33806 = G__33808;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__33798 = idx;
            var G__33799 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33798, G__33799) : f.call(null, G__33798, G__33799);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args33815 = [];
  var len__31204__auto___33822 = arguments.length;
  var i__31205__auto___33823 = 0;
  while (true) {
    if (i__31205__auto___33823 < len__31204__auto___33822) {
      args33815.push(arguments[i__31205__auto___33823]);
      var G__33824 = i__31205__auto___33823 + 1;
      i__31205__auto___33823 = G__33824;
      continue;
    } else {
    }
    break;
  }
  var G__33821 = args33815.length;
  switch(G__33821) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33815.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__30084__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__30084__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__30084__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__30084__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__30084__auto__)) {
          var and__30084__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__30084__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__30084__auto____$1;
          }
        } else {
          return and__30084__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__33826__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__30084__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__30084__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__30084__auto__;
          }
        }());
      };
      var G__33826 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33827__i = 0, G__33827__a = new Array(arguments.length - 3);
          while (G__33827__i < G__33827__a.length) {
            G__33827__a[G__33827__i] = arguments[G__33827__i + 3];
            ++G__33827__i;
          }
          args = new cljs.core.IndexedSeq(G__33827__a, 0);
        }
        return G__33826__delegate.call(this, x, y, z, args);
      };
      G__33826.cljs$lang$maxFixedArity = 3;
      G__33826.cljs$lang$applyTo = function(arglist__33828) {
        var x = cljs.core.first(arglist__33828);
        arglist__33828 = cljs.core.next(arglist__33828);
        var y = cljs.core.first(arglist__33828);
        arglist__33828 = cljs.core.next(arglist__33828);
        var z = cljs.core.first(arglist__33828);
        var args = cljs.core.rest(arglist__33828);
        return G__33826__delegate(x, y, z, args);
      };
      G__33826.cljs$core$IFn$_invoke$arity$variadic = G__33826__delegate;
      return G__33826;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__33829 = null;
          if (arguments.length > 3) {
            var G__33830__i = 0, G__33830__a = new Array(arguments.length - 3);
            while (G__33830__i < G__33830__a.length) {
              G__33830__a[G__33830__i] = arguments[G__33830__i + 3];
              ++G__33830__i;
            }
            G__33829 = new cljs.core.IndexedSeq(G__33830__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33829);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__30084__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__30084__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__30084__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__30084__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__30084__auto__)) {
          var and__30084__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__30084__auto____$1)) {
            var and__30084__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__30084__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__30084__auto____$2;
            }
          } else {
            return and__30084__auto____$1;
          }
        } else {
          return and__30084__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__30084__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__30084__auto__)) {
          var and__30084__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__30084__auto____$1)) {
            var and__30084__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__30084__auto____$2)) {
              var and__30084__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__30084__auto____$3)) {
                var and__30084__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__30084__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__30084__auto____$4;
                }
              } else {
                return and__30084__auto____$3;
              }
            } else {
              return and__30084__auto____$2;
            }
          } else {
            return and__30084__auto____$1;
          }
        } else {
          return and__30084__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__33831__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__30084__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__30084__auto__)) {
            return cljs.core.every_QMARK_(function(and__30084__auto__) {
              return function(p1__33809_SHARP_) {
                var and__30084__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__33809_SHARP_) : p1.call(null, p1__33809_SHARP_);
                if (cljs.core.truth_(and__30084__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__33809_SHARP_) : p2.call(null, p1__33809_SHARP_);
                } else {
                  return and__30084__auto____$1;
                }
              };
            }(and__30084__auto__), args);
          } else {
            return and__30084__auto__;
          }
        }());
      };
      var G__33831 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33832__i = 0, G__33832__a = new Array(arguments.length - 3);
          while (G__33832__i < G__33832__a.length) {
            G__33832__a[G__33832__i] = arguments[G__33832__i + 3];
            ++G__33832__i;
          }
          args = new cljs.core.IndexedSeq(G__33832__a, 0);
        }
        return G__33831__delegate.call(this, x, y, z, args);
      };
      G__33831.cljs$lang$maxFixedArity = 3;
      G__33831.cljs$lang$applyTo = function(arglist__33833) {
        var x = cljs.core.first(arglist__33833);
        arglist__33833 = cljs.core.next(arglist__33833);
        var y = cljs.core.first(arglist__33833);
        arglist__33833 = cljs.core.next(arglist__33833);
        var z = cljs.core.first(arglist__33833);
        var args = cljs.core.rest(arglist__33833);
        return G__33831__delegate(x, y, z, args);
      };
      G__33831.cljs$core$IFn$_invoke$arity$variadic = G__33831__delegate;
      return G__33831;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__33834 = null;
          if (arguments.length > 3) {
            var G__33835__i = 0, G__33835__a = new Array(arguments.length - 3);
            while (G__33835__i < G__33835__a.length) {
              G__33835__a[G__33835__i] = arguments[G__33835__i + 3];
              ++G__33835__i;
            }
            G__33834 = new cljs.core.IndexedSeq(G__33835__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33834);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__30084__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__30084__auto__)) {
          var and__30084__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__30084__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__30084__auto____$1;
          }
        } else {
          return and__30084__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__30084__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__30084__auto__)) {
          var and__30084__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__30084__auto____$1)) {
            var and__30084__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__30084__auto____$2)) {
              var and__30084__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__30084__auto____$3)) {
                var and__30084__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__30084__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__30084__auto____$4;
                }
              } else {
                return and__30084__auto____$3;
              }
            } else {
              return and__30084__auto____$2;
            }
          } else {
            return and__30084__auto____$1;
          }
        } else {
          return and__30084__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__30084__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__30084__auto__)) {
          var and__30084__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__30084__auto____$1)) {
            var and__30084__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__30084__auto____$2)) {
              var and__30084__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__30084__auto____$3)) {
                var and__30084__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__30084__auto____$4)) {
                  var and__30084__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__30084__auto____$5)) {
                    var and__30084__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__30084__auto____$6)) {
                      var and__30084__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__30084__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__30084__auto____$7;
                      }
                    } else {
                      return and__30084__auto____$6;
                    }
                  } else {
                    return and__30084__auto____$5;
                  }
                } else {
                  return and__30084__auto____$4;
                }
              } else {
                return and__30084__auto____$3;
              }
            } else {
              return and__30084__auto____$2;
            }
          } else {
            return and__30084__auto____$1;
          }
        } else {
          return and__30084__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__33836__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__30084__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__30084__auto__)) {
            return cljs.core.every_QMARK_(function(and__30084__auto__) {
              return function(p1__33810_SHARP_) {
                var and__30084__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__33810_SHARP_) : p1.call(null, p1__33810_SHARP_);
                if (cljs.core.truth_(and__30084__auto____$1)) {
                  var and__30084__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__33810_SHARP_) : p2.call(null, p1__33810_SHARP_);
                  if (cljs.core.truth_(and__30084__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__33810_SHARP_) : p3.call(null, p1__33810_SHARP_);
                  } else {
                    return and__30084__auto____$2;
                  }
                } else {
                  return and__30084__auto____$1;
                }
              };
            }(and__30084__auto__), args);
          } else {
            return and__30084__auto__;
          }
        }());
      };
      var G__33836 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33837__i = 0, G__33837__a = new Array(arguments.length - 3);
          while (G__33837__i < G__33837__a.length) {
            G__33837__a[G__33837__i] = arguments[G__33837__i + 3];
            ++G__33837__i;
          }
          args = new cljs.core.IndexedSeq(G__33837__a, 0);
        }
        return G__33836__delegate.call(this, x, y, z, args);
      };
      G__33836.cljs$lang$maxFixedArity = 3;
      G__33836.cljs$lang$applyTo = function(arglist__33838) {
        var x = cljs.core.first(arglist__33838);
        arglist__33838 = cljs.core.next(arglist__33838);
        var y = cljs.core.first(arglist__33838);
        arglist__33838 = cljs.core.next(arglist__33838);
        var z = cljs.core.first(arglist__33838);
        var args = cljs.core.rest(arglist__33838);
        return G__33836__delegate(x, y, z, args);
      };
      G__33836.cljs$core$IFn$_invoke$arity$variadic = G__33836__delegate;
      return G__33836;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__33839 = null;
          if (arguments.length > 3) {
            var G__33840__i = 0, G__33840__a = new Array(arguments.length - 3);
            while (G__33840__i < G__33840__a.length) {
              G__33840__a[G__33840__i] = arguments[G__33840__i + 3];
              ++G__33840__i;
            }
            G__33839 = new cljs.core.IndexedSeq(G__33840__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33839);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__33811_SHARP_) {
            return p1__33811_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33811_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__33811_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__33812_SHARP_) {
            var and__30084__auto__ = p1__33812_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33812_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__33812_SHARP_.call(null, x);
            if (cljs.core.truth_(and__30084__auto__)) {
              return p1__33812_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33812_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__33812_SHARP_.call(null, y);
            } else {
              return and__30084__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__33813_SHARP_) {
            var and__30084__auto__ = p1__33813_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33813_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__33813_SHARP_.call(null, x);
            if (cljs.core.truth_(and__30084__auto__)) {
              var and__30084__auto____$1 = p1__33813_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33813_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__33813_SHARP_.call(null, y);
              if (cljs.core.truth_(and__30084__auto____$1)) {
                return p1__33813_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33813_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__33813_SHARP_.call(null, z);
              } else {
                return and__30084__auto____$1;
              }
            } else {
              return and__30084__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__33841__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__30084__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__30084__auto__)) {
              return cljs.core.every_QMARK_(function(and__30084__auto__, ps__$1) {
                return function(p1__33814_SHARP_) {
                  return cljs.core.every_QMARK_(p1__33814_SHARP_, args);
                };
              }(and__30084__auto__, ps__$1), ps__$1);
            } else {
              return and__30084__auto__;
            }
          }());
        };
        var G__33841 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__33842__i = 0, G__33842__a = new Array(arguments.length - 3);
            while (G__33842__i < G__33842__a.length) {
              G__33842__a[G__33842__i] = arguments[G__33842__i + 3];
              ++G__33842__i;
            }
            args = new cljs.core.IndexedSeq(G__33842__a, 0);
          }
          return G__33841__delegate.call(this, x, y, z, args);
        };
        G__33841.cljs$lang$maxFixedArity = 3;
        G__33841.cljs$lang$applyTo = function(arglist__33843) {
          var x = cljs.core.first(arglist__33843);
          arglist__33843 = cljs.core.next(arglist__33843);
          var y = cljs.core.first(arglist__33843);
          arglist__33843 = cljs.core.next(arglist__33843);
          var z = cljs.core.first(arglist__33843);
          var args = cljs.core.rest(arglist__33843);
          return G__33841__delegate(x, y, z, args);
        };
        G__33841.cljs$core$IFn$_invoke$arity$variadic = G__33841__delegate;
        return G__33841;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__33844 = null;
            if (arguments.length > 3) {
              var G__33845__i = 0, G__33845__a = new Array(arguments.length - 3);
              while (G__33845__i < G__33845__a.length) {
                G__33845__a[G__33845__i] = arguments[G__33845__i + 3];
                ++G__33845__i;
              }
              G__33844 = new cljs.core.IndexedSeq(G__33845__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33844);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq33816) {
  var G__33817 = cljs.core.first(seq33816);
  var seq33816__$1 = cljs.core.next(seq33816);
  var G__33818 = cljs.core.first(seq33816__$1);
  var seq33816__$2 = cljs.core.next(seq33816__$1);
  var G__33819 = cljs.core.first(seq33816__$2);
  var seq33816__$3 = cljs.core.next(seq33816__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__33817, G__33818, G__33819, seq33816__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args33852 = [];
  var len__31204__auto___33859 = arguments.length;
  var i__31205__auto___33860 = 0;
  while (true) {
    if (i__31205__auto___33860 < len__31204__auto___33859) {
      args33852.push(arguments[i__31205__auto___33860]);
      var G__33861 = i__31205__auto___33860 + 1;
      i__31205__auto___33860 = G__33861;
      continue;
    } else {
    }
    break;
  }
  var G__33858 = args33852.length;
  switch(G__33858) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33852.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__30096__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__30096__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        var or__30096__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__30096__auto____$1)) {
          return or__30096__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__33863__delegate = function(x, y, z, args) {
        var or__30096__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__30096__auto__)) {
          return or__30096__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__33863 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33864__i = 0, G__33864__a = new Array(arguments.length - 3);
          while (G__33864__i < G__33864__a.length) {
            G__33864__a[G__33864__i] = arguments[G__33864__i + 3];
            ++G__33864__i;
          }
          args = new cljs.core.IndexedSeq(G__33864__a, 0);
        }
        return G__33863__delegate.call(this, x, y, z, args);
      };
      G__33863.cljs$lang$maxFixedArity = 3;
      G__33863.cljs$lang$applyTo = function(arglist__33865) {
        var x = cljs.core.first(arglist__33865);
        arglist__33865 = cljs.core.next(arglist__33865);
        var y = cljs.core.first(arglist__33865);
        arglist__33865 = cljs.core.next(arglist__33865);
        var z = cljs.core.first(arglist__33865);
        var args = cljs.core.rest(arglist__33865);
        return G__33863__delegate(x, y, z, args);
      };
      G__33863.cljs$core$IFn$_invoke$arity$variadic = G__33863__delegate;
      return G__33863;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__33866 = null;
          if (arguments.length > 3) {
            var G__33867__i = 0, G__33867__a = new Array(arguments.length - 3);
            while (G__33867__i < G__33867__a.length) {
              G__33867__a[G__33867__i] = arguments[G__33867__i + 3];
              ++G__33867__i;
            }
            G__33866 = new cljs.core.IndexedSeq(G__33867__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33866);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__30096__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__30096__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        var or__30096__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__30096__auto____$1)) {
          return or__30096__auto____$1;
        } else {
          var or__30096__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__30096__auto____$2)) {
            return or__30096__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__30096__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        var or__30096__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__30096__auto____$1)) {
          return or__30096__auto____$1;
        } else {
          var or__30096__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__30096__auto____$2)) {
            return or__30096__auto____$2;
          } else {
            var or__30096__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__30096__auto____$3)) {
              return or__30096__auto____$3;
            } else {
              var or__30096__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__30096__auto____$4)) {
                return or__30096__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__33868__delegate = function(x, y, z, args) {
        var or__30096__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__30096__auto__)) {
          return or__30096__auto__;
        } else {
          return cljs.core.some(function(or__30096__auto__) {
            return function(p1__33846_SHARP_) {
              var or__30096__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__33846_SHARP_) : p1.call(null, p1__33846_SHARP_);
              if (cljs.core.truth_(or__30096__auto____$1)) {
                return or__30096__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__33846_SHARP_) : p2.call(null, p1__33846_SHARP_);
              }
            };
          }(or__30096__auto__), args);
        }
      };
      var G__33868 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33869__i = 0, G__33869__a = new Array(arguments.length - 3);
          while (G__33869__i < G__33869__a.length) {
            G__33869__a[G__33869__i] = arguments[G__33869__i + 3];
            ++G__33869__i;
          }
          args = new cljs.core.IndexedSeq(G__33869__a, 0);
        }
        return G__33868__delegate.call(this, x, y, z, args);
      };
      G__33868.cljs$lang$maxFixedArity = 3;
      G__33868.cljs$lang$applyTo = function(arglist__33870) {
        var x = cljs.core.first(arglist__33870);
        arglist__33870 = cljs.core.next(arglist__33870);
        var y = cljs.core.first(arglist__33870);
        arglist__33870 = cljs.core.next(arglist__33870);
        var z = cljs.core.first(arglist__33870);
        var args = cljs.core.rest(arglist__33870);
        return G__33868__delegate(x, y, z, args);
      };
      G__33868.cljs$core$IFn$_invoke$arity$variadic = G__33868__delegate;
      return G__33868;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__33871 = null;
          if (arguments.length > 3) {
            var G__33872__i = 0, G__33872__a = new Array(arguments.length - 3);
            while (G__33872__i < G__33872__a.length) {
              G__33872__a[G__33872__i] = arguments[G__33872__i + 3];
              ++G__33872__i;
            }
            G__33871 = new cljs.core.IndexedSeq(G__33872__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33871);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__30096__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        var or__30096__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__30096__auto____$1)) {
          return or__30096__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__30096__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        var or__30096__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__30096__auto____$1)) {
          return or__30096__auto____$1;
        } else {
          var or__30096__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__30096__auto____$2)) {
            return or__30096__auto____$2;
          } else {
            var or__30096__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__30096__auto____$3)) {
              return or__30096__auto____$3;
            } else {
              var or__30096__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__30096__auto____$4)) {
                return or__30096__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__30096__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        var or__30096__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__30096__auto____$1)) {
          return or__30096__auto____$1;
        } else {
          var or__30096__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__30096__auto____$2)) {
            return or__30096__auto____$2;
          } else {
            var or__30096__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__30096__auto____$3)) {
              return or__30096__auto____$3;
            } else {
              var or__30096__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__30096__auto____$4)) {
                return or__30096__auto____$4;
              } else {
                var or__30096__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__30096__auto____$5)) {
                  return or__30096__auto____$5;
                } else {
                  var or__30096__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__30096__auto____$6)) {
                    return or__30096__auto____$6;
                  } else {
                    var or__30096__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__30096__auto____$7)) {
                      return or__30096__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__33873__delegate = function(x, y, z, args) {
        var or__30096__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__30096__auto__)) {
          return or__30096__auto__;
        } else {
          return cljs.core.some(function(or__30096__auto__) {
            return function(p1__33847_SHARP_) {
              var or__30096__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__33847_SHARP_) : p1.call(null, p1__33847_SHARP_);
              if (cljs.core.truth_(or__30096__auto____$1)) {
                return or__30096__auto____$1;
              } else {
                var or__30096__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__33847_SHARP_) : p2.call(null, p1__33847_SHARP_);
                if (cljs.core.truth_(or__30096__auto____$2)) {
                  return or__30096__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__33847_SHARP_) : p3.call(null, p1__33847_SHARP_);
                }
              }
            };
          }(or__30096__auto__), args);
        }
      };
      var G__33873 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__33874__i = 0, G__33874__a = new Array(arguments.length - 3);
          while (G__33874__i < G__33874__a.length) {
            G__33874__a[G__33874__i] = arguments[G__33874__i + 3];
            ++G__33874__i;
          }
          args = new cljs.core.IndexedSeq(G__33874__a, 0);
        }
        return G__33873__delegate.call(this, x, y, z, args);
      };
      G__33873.cljs$lang$maxFixedArity = 3;
      G__33873.cljs$lang$applyTo = function(arglist__33875) {
        var x = cljs.core.first(arglist__33875);
        arglist__33875 = cljs.core.next(arglist__33875);
        var y = cljs.core.first(arglist__33875);
        arglist__33875 = cljs.core.next(arglist__33875);
        var z = cljs.core.first(arglist__33875);
        var args = cljs.core.rest(arglist__33875);
        return G__33873__delegate(x, y, z, args);
      };
      G__33873.cljs$core$IFn$_invoke$arity$variadic = G__33873__delegate;
      return G__33873;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__33876 = null;
          if (arguments.length > 3) {
            var G__33877__i = 0, G__33877__a = new Array(arguments.length - 3);
            while (G__33877__i < G__33877__a.length) {
              G__33877__a[G__33877__i] = arguments[G__33877__i + 3];
              ++G__33877__i;
            }
            G__33876 = new cljs.core.IndexedSeq(G__33877__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33876);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__33848_SHARP_) {
            return p1__33848_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33848_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__33848_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__33849_SHARP_) {
            var or__30096__auto__ = p1__33849_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33849_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__33849_SHARP_.call(null, x);
            if (cljs.core.truth_(or__30096__auto__)) {
              return or__30096__auto__;
            } else {
              return p1__33849_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33849_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__33849_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__33850_SHARP_) {
            var or__30096__auto__ = p1__33850_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33850_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__33850_SHARP_.call(null, x);
            if (cljs.core.truth_(or__30096__auto__)) {
              return or__30096__auto__;
            } else {
              var or__30096__auto____$1 = p1__33850_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33850_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__33850_SHARP_.call(null, y);
              if (cljs.core.truth_(or__30096__auto____$1)) {
                return or__30096__auto____$1;
              } else {
                return p1__33850_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33850_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__33850_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__33878__delegate = function(x, y, z, args) {
          var or__30096__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__30096__auto__)) {
            return or__30096__auto__;
          } else {
            return cljs.core.some(function(or__30096__auto__, ps__$1) {
              return function(p1__33851_SHARP_) {
                return cljs.core.some(p1__33851_SHARP_, args);
              };
            }(or__30096__auto__, ps__$1), ps__$1);
          }
        };
        var G__33878 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__33879__i = 0, G__33879__a = new Array(arguments.length - 3);
            while (G__33879__i < G__33879__a.length) {
              G__33879__a[G__33879__i] = arguments[G__33879__i + 3];
              ++G__33879__i;
            }
            args = new cljs.core.IndexedSeq(G__33879__a, 0);
          }
          return G__33878__delegate.call(this, x, y, z, args);
        };
        G__33878.cljs$lang$maxFixedArity = 3;
        G__33878.cljs$lang$applyTo = function(arglist__33880) {
          var x = cljs.core.first(arglist__33880);
          arglist__33880 = cljs.core.next(arglist__33880);
          var y = cljs.core.first(arglist__33880);
          arglist__33880 = cljs.core.next(arglist__33880);
          var z = cljs.core.first(arglist__33880);
          var args = cljs.core.rest(arglist__33880);
          return G__33878__delegate(x, y, z, args);
        };
        G__33878.cljs$core$IFn$_invoke$arity$variadic = G__33878__delegate;
        return G__33878;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__33881 = null;
            if (arguments.length > 3) {
              var G__33882__i = 0, G__33882__a = new Array(arguments.length - 3);
              while (G__33882__i < G__33882__a.length) {
                G__33882__a[G__33882__i] = arguments[G__33882__i + 3];
                ++G__33882__i;
              }
              G__33881 = new cljs.core.IndexedSeq(G__33882__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__33881);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq33853) {
  var G__33854 = cljs.core.first(seq33853);
  var seq33853__$1 = cljs.core.next(seq33853);
  var G__33855 = cljs.core.first(seq33853__$1);
  var seq33853__$2 = cljs.core.next(seq33853__$1);
  var G__33856 = cljs.core.first(seq33853__$2);
  var seq33853__$3 = cljs.core.next(seq33853__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__33854, G__33855, G__33856, seq33853__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args33884 = [];
  var len__31204__auto___33904 = arguments.length;
  var i__31205__auto___33905 = 0;
  while (true) {
    if (i__31205__auto___33905 < len__31204__auto___33904) {
      args33884.push(arguments[i__31205__auto___33905]);
      var G__33906 = i__31205__auto___33905 + 1;
      i__31205__auto___33905 = G__33906;
      continue;
    } else {
    }
    break;
  }
  var G__33891 = args33884.length;
  switch(G__33891) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33884.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__31223__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__33908 = null;
      var G__33908__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__33908__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__33908__2 = function(result, input) {
        var G__33892 = result;
        var G__33893 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33892, G__33893) : rf.call(null, G__33892, G__33893);
      };
      var G__33908__3 = function() {
        var G__33909__delegate = function(result, input, inputs) {
          var G__33894 = result;
          var G__33895 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33894, G__33895) : rf.call(null, G__33894, G__33895);
        };
        var G__33909 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__33910__i = 0, G__33910__a = new Array(arguments.length - 2);
            while (G__33910__i < G__33910__a.length) {
              G__33910__a[G__33910__i] = arguments[G__33910__i + 2];
              ++G__33910__i;
            }
            inputs = new cljs.core.IndexedSeq(G__33910__a, 0);
          }
          return G__33909__delegate.call(this, result, input, inputs);
        };
        G__33909.cljs$lang$maxFixedArity = 2;
        G__33909.cljs$lang$applyTo = function(arglist__33911) {
          var result = cljs.core.first(arglist__33911);
          arglist__33911 = cljs.core.next(arglist__33911);
          var input = cljs.core.first(arglist__33911);
          var inputs = cljs.core.rest(arglist__33911);
          return G__33909__delegate(result, input, inputs);
        };
        G__33909.cljs$core$IFn$_invoke$arity$variadic = G__33909__delegate;
        return G__33909;
      }();
      G__33908 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__33908__0.call(this);
          case 1:
            return G__33908__1.call(this, result);
          case 2:
            return G__33908__2.call(this, result, input);
          default:
            var G__33912 = null;
            if (arguments.length > 2) {
              var G__33913__i = 0, G__33913__a = new Array(arguments.length - 2);
              while (G__33913__i < G__33913__a.length) {
                G__33913__a[G__33913__i] = arguments[G__33913__i + 2];
                ++G__33913__i;
              }
              G__33912 = new cljs.core.IndexedSeq(G__33913__a, 0);
            }
            return G__33908__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__33912);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__33908.cljs$lang$maxFixedArity = 2;
      G__33908.cljs$lang$applyTo = G__33908__3.cljs$lang$applyTo;
      G__33908.cljs$core$IFn$_invoke$arity$0 = G__33908__0;
      G__33908.cljs$core$IFn$_invoke$arity$1 = G__33908__1;
      G__33908.cljs$core$IFn$_invoke$arity$2 = G__33908__2;
      G__33908.cljs$core$IFn$_invoke$arity$variadic = G__33908__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__33908;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__31014__auto___33914 = size;
        var i_33915 = 0;
        while (true) {
          if (i_33915 < n__31014__auto___33914) {
            cljs.core.chunk_append(b, function() {
              var G__33896 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_33915);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33896) : f.call(null, G__33896);
            }());
            var G__33916 = i_33915 + 1;
            i_33915 = G__33916;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__33897 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33897) : f.call(null, G__33897);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__33898 = cljs.core.first(s1);
        var G__33899 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33898, G__33899) : f.call(null, G__33898, G__33899);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__33900 = cljs.core.first(s1);
        var G__33901 = cljs.core.first(s2);
        var G__33902 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33900, G__33901, G__33902) : f.call(null, G__33900, G__33901, G__33902);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__33883_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__33883_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq33885) {
  var G__33886 = cljs.core.first(seq33885);
  var seq33885__$1 = cljs.core.next(seq33885);
  var G__33887 = cljs.core.first(seq33885__$1);
  var seq33885__$2 = cljs.core.next(seq33885__$1);
  var G__33888 = cljs.core.first(seq33885__$2);
  var seq33885__$3 = cljs.core.next(seq33885__$2);
  var G__33889 = cljs.core.first(seq33885__$3);
  var seq33885__$4 = cljs.core.next(seq33885__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__33886, G__33887, G__33888, G__33889, seq33885__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args33917 = [];
  var len__31204__auto___33920 = arguments.length;
  var i__31205__auto___33921 = 0;
  while (true) {
    if (i__31205__auto___33921 < len__31204__auto___33920) {
      args33917.push(arguments[i__31205__auto___33921]);
      var G__33922 = i__31205__auto___33921 + 1;
      i__31205__auto___33921 = G__33922;
      continue;
    } else {
    }
    break;
  }
  var G__33919 = args33917.length;
  switch(G__33919) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33917.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__33924 = null;
        var G__33924__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__33924__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__33924__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__33924 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__33924__0.call(this);
            case 1:
              return G__33924__1.call(this, result);
            case 2:
              return G__33924__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__33924.cljs$core$IFn$_invoke$arity$0 = G__33924__0;
        G__33924.cljs$core$IFn$_invoke$arity$1 = G__33924__1;
        G__33924.cljs$core$IFn$_invoke$arity$2 = G__33924__2;
        return G__33924;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args33925 = [];
  var len__31204__auto___33928 = arguments.length;
  var i__31205__auto___33929 = 0;
  while (true) {
    if (i__31205__auto___33929 < len__31204__auto___33928) {
      args33925.push(arguments[i__31205__auto___33929]);
      var G__33930 = i__31205__auto___33929 + 1;
      i__31205__auto___33929 = G__33930;
      continue;
    } else {
    }
    break;
  }
  var G__33927 = args33925.length;
  switch(G__33927) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33925.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__33932 = null;
        var G__33932__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__33932__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__33932__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__33932 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__33932__0.call(this);
            case 1:
              return G__33932__1.call(this, result);
            case 2:
              return G__33932__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__33932.cljs$core$IFn$_invoke$arity$0 = G__33932__0;
        G__33932.cljs$core$IFn$_invoke$arity$1 = G__33932__1;
        G__33932.cljs$core$IFn$_invoke$arity$2 = G__33932__2;
        return G__33932;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__33933 = n__$1 - 1;
        var G__33934 = cljs.core.rest(s);
        n__$1 = G__33933;
        coll__$1 = G__33934;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args33935 = [];
  var len__31204__auto___33938 = arguments.length;
  var i__31205__auto___33939 = 0;
  while (true) {
    if (i__31205__auto___33939 < len__31204__auto___33938) {
      args33935.push(arguments[i__31205__auto___33939]);
      var G__33940 = i__31205__auto___33939 + 1;
      i__31205__auto___33939 = G__33940;
      continue;
    } else {
    }
    break;
  }
  var G__33937 = args33935.length;
  switch(G__33937) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33935.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__33942 = cljs.core.next(s);
      var G__33943 = cljs.core.next(lead);
      s = G__33942;
      lead = G__33943;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args33944 = [];
  var len__31204__auto___33949 = arguments.length;
  var i__31205__auto___33950 = 0;
  while (true) {
    if (i__31205__auto___33950 < len__31204__auto___33949) {
      args33944.push(arguments[i__31205__auto___33950]);
      var G__33951 = i__31205__auto___33950 + 1;
      i__31205__auto___33950 = G__33951;
      continue;
    } else {
    }
    break;
  }
  var G__33946 = args33944.length;
  switch(G__33946) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33944.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__33953 = null;
        var G__33953__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__33953__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__33953__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__30084__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__30084__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__30084__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__33953 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__33953__0.call(this);
            case 1:
              return G__33953__1.call(this, result);
            case 2:
              return G__33953__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__33953.cljs$core$IFn$_invoke$arity$0 = G__33953__0;
        G__33953.cljs$core$IFn$_invoke$arity$1 = G__33953__1;
        G__33953.cljs$core$IFn$_invoke$arity$2 = G__33953__2;
        return G__33953;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__30084__auto__ = s;
        if (and__30084__auto__) {
          var G__33948 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__33948) : pred__$1.call(null, G__33948);
        } else {
          return and__30084__auto__;
        }
      }())) {
        var G__33954 = pred__$1;
        var G__33955 = cljs.core.rest(s);
        pred__$1 = G__33954;
        coll__$1 = G__33955;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs.core.cycle.cljs$core$IFn$_invoke$arity$1 ? cljs.core.cycle.cljs$core$IFn$_invoke$arity$1(s) : cljs.core.cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args33956 = [];
  var len__31204__auto___33959 = arguments.length;
  var i__31205__auto___33960 = 0;
  while (true) {
    if (i__31205__auto___33960 < len__31204__auto___33959) {
      args33956.push(arguments[i__31205__auto___33960]);
      var G__33961 = i__31205__auto___33960 + 1;
      i__31205__auto___33960 = G__33961;
      continue;
    } else {
    }
    break;
  }
  var G__33958 = args33956.length;
  switch(G__33958) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33956.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args33963 = [];
  var len__31204__auto___33966 = arguments.length;
  var i__31205__auto___33967 = 0;
  while (true) {
    if (i__31205__auto___33967 < len__31204__auto___33966) {
      args33963.push(arguments[i__31205__auto___33967]);
      var G__33968 = i__31205__auto___33967 + 1;
      i__31205__auto___33967 = G__33968;
      continue;
    } else {
    }
    break;
  }
  var G__33965 = args33963.length;
  switch(G__33965) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33963.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    var G__33972 = f;
    var G__33973 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.iterate.cljs$core$IFn$_invoke$arity$2 ? cljs.core.iterate.cljs$core$IFn$_invoke$arity$2(G__33972, G__33973) : cljs.core.iterate.call(null, G__33972, G__33973);
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args33974 = [];
  var len__31204__auto___33980 = arguments.length;
  var i__31205__auto___33981 = 0;
  while (true) {
    if (i__31205__auto___33981 < len__31204__auto___33980) {
      args33974.push(arguments[i__31205__auto___33981]);
      var G__33982 = i__31205__auto___33981 + 1;
      i__31205__auto___33981 = G__33982;
      continue;
    } else {
    }
    break;
  }
  var G__33979 = args33974.length;
  switch(G__33979) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args33974.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq33975) {
  var G__33976 = cljs.core.first(seq33975);
  var seq33975__$1 = cljs.core.next(seq33975);
  var G__33977 = cljs.core.first(seq33975__$1);
  var seq33975__$2 = cljs.core.next(seq33975__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__33976, G__33977, seq33975__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args33984 = [];
  var len__31204__auto___33987 = arguments.length;
  var i__31205__auto___33988 = 0;
  while (true) {
    if (i__31205__auto___33988 < len__31204__auto___33987) {
      args33984.push(arguments[i__31205__auto___33988]);
      var G__33989 = i__31205__auto___33988 + 1;
      i__31205__auto___33988 = G__33989;
      continue;
    } else {
    }
    break;
  }
  var G__33986 = args33984.length;
  switch(G__33986) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33984.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__33991 = null;
        var G__33991__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__33991__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__33991__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__33991 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__33991__0.call(this);
            case 1:
              return G__33991__1.call(this, result);
            case 2:
              return G__33991__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__33991.cljs$core$IFn$_invoke$arity$0 = G__33991__0;
        G__33991.cljs$core$IFn$_invoke$arity$1 = G__33991__1;
        G__33991.cljs$core$IFn$_invoke$arity$2 = G__33991__2;
        return G__33991;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args34000 = [];
  var len__31204__auto___34005 = arguments.length;
  var i__31205__auto___34006 = 0;
  while (true) {
    if (i__31205__auto___34006 < len__31204__auto___34005) {
      args34000.push(arguments[i__31205__auto___34006]);
      var G__34007 = i__31205__auto___34006 + 1;
      i__31205__auto___34006 = G__34007;
      continue;
    } else {
    }
    break;
  }
  var G__34004 = args34000.length;
  switch(G__34004) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args34000.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31223__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq34001) {
  var G__34002 = cljs.core.first(seq34001);
  var seq34001__$1 = cljs.core.next(seq34001);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__34002, seq34001__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args34009 = [];
  var len__31204__auto___34013 = arguments.length;
  var i__31205__auto___34014 = 0;
  while (true) {
    if (i__31205__auto___34014 < len__31204__auto___34013) {
      args34009.push(arguments[i__31205__auto___34014]);
      var G__34015 = i__31205__auto___34014 + 1;
      i__31205__auto___34014 = G__34015;
      continue;
    } else {
    }
    break;
  }
  var G__34011 = args34009.length;
  switch(G__34011) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34009.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__34017 = null;
      var G__34017__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__34017__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__34017__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__34017 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__34017__0.call(this);
          case 1:
            return G__34017__1.call(this, result);
          case 2:
            return G__34017__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__34017.cljs$core$IFn$_invoke$arity$0 = G__34017__0;
      G__34017.cljs$core$IFn$_invoke$arity$1 = G__34017__1;
      G__34017.cljs$core$IFn$_invoke$arity$2 = G__34017__2;
      return G__34017;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__31014__auto___34018 = size;
        var i_34019 = 0;
        while (true) {
          if (i_34019 < n__31014__auto___34018) {
            if (cljs.core.truth_(function() {
              var G__34012 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_34019);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34012) : pred.call(null, G__34012);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_34019));
            } else {
            }
            var G__34020 = i_34019 + 1;
            i_34019 = G__34020;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args34021 = [];
  var len__31204__auto___34024 = arguments.length;
  var i__31205__auto___34025 = 0;
  while (true) {
    if (i__31205__auto___34025 < len__31204__auto___34024) {
      args34021.push(arguments[i__31205__auto___34025]);
      var G__34026 = i__31205__auto___34025 + 1;
      i__31205__auto___34025 = G__34026;
      continue;
    } else {
    }
    break;
  }
  var G__34023 = args34021.length;
  switch(G__34023) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34021.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__34028_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__34028_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args34029 = [];
  var len__31204__auto___34034 = arguments.length;
  var i__31205__auto___34035 = 0;
  while (true) {
    if (i__31205__auto___34035 < len__31204__auto___34034) {
      args34029.push(arguments[i__31205__auto___34035]);
      var G__34036 = i__31205__auto___34035 + 1;
      i__31205__auto___34035 = G__34036;
      continue;
    } else {
    }
    break;
  }
  var G__34031 = args34029.length;
  switch(G__34031) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34029.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args34038 = [];
  var len__31204__auto___34046 = arguments.length;
  var i__31205__auto___34047 = 0;
  while (true) {
    if (i__31205__auto___34047 < len__31204__auto___34046) {
      args34038.push(arguments[i__31205__auto___34047]);
      var G__34048 = i__31205__auto___34047 + 1;
      i__31205__auto___34047 = G__34048;
      continue;
    } else {
    }
    break;
  }
  var G__34045 = args34038.length;
  switch(G__34045) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args34038.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__31223__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq34039) {
  var G__34040 = cljs.core.first(seq34039);
  var seq34039__$1 = cljs.core.next(seq34039);
  var G__34041 = cljs.core.first(seq34039__$1);
  var seq34039__$2 = cljs.core.next(seq34039__$1);
  var G__34042 = cljs.core.first(seq34039__$2);
  var seq34039__$3 = cljs.core.next(seq34039__$2);
  var G__34043 = cljs.core.first(seq34039__$3);
  var seq34039__$4 = cljs.core.next(seq34039__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__34040, G__34041, G__34042, G__34043, seq34039__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args34050 = [];
  var len__31204__auto___34053 = arguments.length;
  var i__31205__auto___34054 = 0;
  while (true) {
    if (i__31205__auto___34054 < len__31204__auto___34053) {
      args34050.push(arguments[i__31205__auto___34054]);
      var G__34055 = i__31205__auto___34054 + 1;
      i__31205__auto___34054 = G__34055;
      continue;
    } else {
    }
    break;
  }
  var G__34052 = args34050.length;
  switch(G__34052) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34050.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        var x__30933__auto__ = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad));
        return cljs.core._conj(cljs.core.List.EMPTY, x__30933__auto__);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args34057 = [];
  var len__31204__auto___34060 = arguments.length;
  var i__31205__auto___34061 = 0;
  while (true) {
    if (i__31205__auto___34061 < len__31204__auto___34060) {
      args34057.push(arguments[i__31205__auto___34061]);
      var G__34062 = i__31205__auto___34061 + 1;
      i__31205__auto___34061 = G__34062;
      continue;
    } else {
    }
    break;
  }
  var G__34059 = args34057.length;
  switch(G__34059) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34057.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__34064 = sentinel;
        var G__34065 = m__$2;
        var G__34066 = cljs.core.next(ks__$1);
        sentinel = G__34064;
        m__$1 = G__34065;
        ks__$1 = G__34066;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__34067, v) {
  var vec__34074 = p__34067;
  var seq__34075 = cljs.core.seq(vec__34074);
  var first__34076 = cljs.core.first(seq__34075);
  var seq__34075__$1 = cljs.core.next(seq__34075);
  var k = first__34076;
  var ks = seq__34075__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__34077 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__34078 = ks;
      var G__34079 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__34077, G__34078, G__34079) : cljs.core.assoc_in.call(null, G__34077, G__34078, G__34079);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args34080 = [];
  var len__31204__auto___34120 = arguments.length;
  var i__31205__auto___34121 = 0;
  while (true) {
    if (i__31205__auto___34121 < len__31204__auto___34120) {
      args34080.push(arguments[i__31205__auto___34121]);
      var G__34122 = i__31205__auto___34121 + 1;
      i__31205__auto___34121 = G__34122;
      continue;
    } else {
    }
    break;
  }
  var G__34089 = args34080.length;
  switch(G__34089) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args34080.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__31223__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__34090, f) {
  var vec__34091 = p__34090;
  var seq__34092 = cljs.core.seq(vec__34091);
  var first__34093 = cljs.core.first(seq__34092);
  var seq__34092__$1 = cljs.core.next(seq__34092);
  var k = first__34093;
  var ks = seq__34092__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__34094 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34094) : f.call(null, G__34094);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__34095, f, a) {
  var vec__34096 = p__34095;
  var seq__34097 = cljs.core.seq(vec__34096);
  var first__34098 = cljs.core.first(seq__34097);
  var seq__34097__$1 = cljs.core.next(seq__34097);
  var k = first__34098;
  var ks = seq__34097__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__34099 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__34100 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34099, G__34100) : f.call(null, G__34099, G__34100);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__34101, f, a, b) {
  var vec__34102 = p__34101;
  var seq__34103 = cljs.core.seq(vec__34102);
  var first__34104 = cljs.core.first(seq__34103);
  var seq__34103__$1 = cljs.core.next(seq__34103);
  var k = first__34104;
  var ks = seq__34103__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__34105 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__34106 = a;
      var G__34107 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34105, G__34106, G__34107) : f.call(null, G__34105, G__34106, G__34107);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__34108, f, a, b, c) {
  var vec__34109 = p__34108;
  var seq__34110 = cljs.core.seq(vec__34109);
  var first__34111 = cljs.core.first(seq__34110);
  var seq__34110__$1 = cljs.core.next(seq__34110);
  var k = first__34111;
  var ks = seq__34110__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__34112 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__34113 = a;
      var G__34114 = b;
      var G__34115 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34112, G__34113, G__34114, G__34115) : f.call(null, G__34112, G__34113, G__34114, G__34115);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__34116, f, a, b, c, args) {
  var vec__34117 = p__34116;
  var seq__34118 = cljs.core.seq(vec__34117);
  var first__34119 = cljs.core.first(seq__34118);
  var seq__34118__$1 = cljs.core.next(seq__34118);
  var k = first__34119;
  var ks = seq__34118__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq34081) {
  var G__34082 = cljs.core.first(seq34081);
  var seq34081__$1 = cljs.core.next(seq34081);
  var G__34083 = cljs.core.first(seq34081__$1);
  var seq34081__$2 = cljs.core.next(seq34081__$1);
  var G__34084 = cljs.core.first(seq34081__$2);
  var seq34081__$3 = cljs.core.next(seq34081__$2);
  var G__34085 = cljs.core.first(seq34081__$3);
  var seq34081__$4 = cljs.core.next(seq34081__$3);
  var G__34086 = cljs.core.first(seq34081__$4);
  var seq34081__$5 = cljs.core.next(seq34081__$4);
  var G__34087 = cljs.core.first(seq34081__$5);
  var seq34081__$6 = cljs.core.next(seq34081__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__34082, G__34083, G__34084, G__34085, G__34086, G__34087, seq34081__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args34124 = [];
  var len__31204__auto___34144 = arguments.length;
  var i__31205__auto___34145 = 0;
  while (true) {
    if (i__31205__auto___34145 < len__31204__auto___34144) {
      args34124.push(arguments[i__31205__auto___34145]);
      var G__34146 = i__31205__auto___34145 + 1;
      i__31205__auto___34145 = G__34146;
      continue;
    } else {
    }
    break;
  }
  var G__34133 = args34124.length;
  switch(G__34133) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args34124.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__31223__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__34134 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34134) : f.call(null, G__34134);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__34135 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__34136 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34135, G__34136) : f.call(null, G__34135, G__34136);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__34137 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__34138 = x;
    var G__34139 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34137, G__34138, G__34139) : f.call(null, G__34137, G__34138, G__34139);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__34140 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__34141 = x;
    var G__34142 = y;
    var G__34143 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34140, G__34141, G__34142, G__34143) : f.call(null, G__34140, G__34141, G__34142, G__34143);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq34125) {
  var G__34126 = cljs.core.first(seq34125);
  var seq34125__$1 = cljs.core.next(seq34125);
  var G__34127 = cljs.core.first(seq34125__$1);
  var seq34125__$2 = cljs.core.next(seq34125__$1);
  var G__34128 = cljs.core.first(seq34125__$2);
  var seq34125__$3 = cljs.core.next(seq34125__$2);
  var G__34129 = cljs.core.first(seq34125__$3);
  var seq34125__$4 = cljs.core.next(seq34125__$3);
  var G__34130 = cljs.core.first(seq34125__$4);
  var seq34125__$5 = cljs.core.next(seq34125__$4);
  var G__34131 = cljs.core.first(seq34125__$5);
  var seq34125__$6 = cljs.core.next(seq34125__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__34126, G__34127, G__34128, G__34129, G__34130, G__34131, seq34125__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__34148 = ll - 5;
      var G__34149 = r;
      ll = G__34148;
      ret = G__34149;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__34154 = pv;
        var G__34155 = level - 5;
        var G__34156 = child;
        var G__34157 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__34154, G__34155, G__34156, G__34157) : cljs.core.push_tail.call(null, G__34154, G__34155, G__34156, G__34157);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__34158 = cljs.core.pv_aget(node, 0);
      var G__34159 = level - 5;
      node = G__34158;
      level = G__34159;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__34160 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__34161 = level - 5;
        node = G__34160;
        level = G__34161;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__34167 = pv;
      var G__34168 = level - 5;
      var G__34169 = cljs.core.pv_aget(node, subidx);
      var G__34170 = i;
      var G__34171 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__34167, G__34168, G__34169, G__34170, G__34171) : cljs.core.do_assoc.call(null, G__34167, G__34168, G__34169, G__34170, G__34171);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__34175 = pv;
      var G__34176 = level - 5;
      var G__34177 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__34175, G__34176, G__34177) : cljs.core.pop_tail.call(null, G__34175, G__34176, G__34177);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__34188 = null;
  var G__34188__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34188__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34188 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34188__1.call(this, x);
      case 2:
        return G__34188__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34188.cljs$core$IFn$_invoke$arity$1 = G__34188__1;
  G__34188.cljs$core$IFn$_invoke$arity$2 = G__34188__2;
  return G__34188;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__34189 = null;
  var G__34189__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34189__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34189 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34189__1.call(this, x);
      case 2:
        return G__34189__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34189.cljs$core$IFn$_invoke$arity$1 = G__34189__1;
  G__34189.cljs$core$IFn$_invoke$arity$2 = G__34189__2;
  return G__34189;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__34179 = init__$2;
              var G__34180 = j + i;
              var G__34181 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34179, G__34180, G__34181) : f.call(null, G__34179, G__34180, G__34181);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__34190 = j + 1;
              var G__34191 = init__$3;
              j = G__34190;
              init__$2 = G__34191;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__34192 = i + len;
        var G__34193 = init__$2;
        i = G__34192;
        init__$1 = G__34193;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__34182 = init__$2;
              var G__34183 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34182, G__34183) : f.call(null, G__34182, G__34183);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__34194 = j + 1;
              var G__34195 = init__$3;
              j = G__34194;
              init__$2 = G__34195;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__34196 = i + len;
        var G__34197 = init__$2;
        i = G__34196;
        init__$1 = G__34197;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__34184 = coll__$1;
      var G__34185 = cljs.core.first_array_for_longvec(coll__$1);
      var G__34186 = 0;
      var G__34187 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34184, G__34185, G__34186, G__34187) : cljs.core.chunked_seq.call(null, G__34184, G__34185, G__34186, G__34187);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__31014__auto___34198 = len;
    var i_34199 = 0;
    while (true) {
      if (i_34199 < n__31014__auto___34198) {
        new_tail[i_34199] = self__.tail[i_34199];
        var G__34200 = i_34199 + 1;
        i_34199 = G__34200;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__34201 = null;
  var G__34201__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__34201__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__34201 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34201__2.call(this, self__, k);
      case 3:
        return G__34201__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34201.cljs$core$IFn$_invoke$arity$2 = G__34201__2;
  G__34201.cljs$core$IFn$_invoke$arity$3 = G__34201__3;
  return G__34201;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args34178) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34178)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__34202 = i + 1;
        var G__34203 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__34202;
        out = G__34203;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34205 = arguments.length;
  var i__31205__auto___34206 = 0;
  while (true) {
    if (i__31205__auto___34206 < len__31204__auto___34205) {
      args__31211__auto__.push(arguments[i__31205__auto___34206]);
      var G__34207 = i__31205__auto___34206 + 1;
      i__31205__auto___34206 = G__34207;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq34204) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34204));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__34230 = null;
  var G__34230__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34230__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34230 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34230__1.call(this, x);
      case 2:
        return G__34230__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34230.cljs$core$IFn$_invoke$arity$1 = G__34230__1;
  G__34230.cljs$core$IFn$_invoke$arity$2 = G__34230__2;
  return G__34230;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__34231 = null;
  var G__34231__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34231__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34231 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34231__1.call(this, x);
      case 2:
        return G__34231__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34231.cljs$core$IFn$_invoke$arity$1 = G__34231__1;
  G__34231.cljs$core$IFn$_invoke$arity$2 = G__34231__2;
  return G__34231;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__34208 = self__.vec;
      var G__34209 = self__.node;
      var G__34210 = self__.i;
      var G__34211 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34208, G__34209, G__34210, G__34211) : cljs.core.chunked_seq.call(null, G__34208, G__34209, G__34210, G__34211);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__34212 = self__.vec;
    var G__34213 = self__.i + self__.off;
    var G__34214 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34212, G__34213, G__34214) : cljs.core.subvec.call(null, G__34212, G__34213, G__34214);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__34215 = self__.vec;
    var G__34216 = self__.i + self__.off;
    var G__34217 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34215, G__34216, G__34217) : cljs.core.subvec.call(null, G__34215, G__34216, G__34217);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__34218 = self__.vec;
      var G__34219 = self__.node;
      var G__34220 = self__.i;
      var G__34221 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34218, G__34219, G__34220, G__34221) : cljs.core.chunked_seq.call(null, G__34218, G__34219, G__34220, G__34221);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__34222 = self__.vec;
    var G__34223 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__34224 = end;
    var G__34225 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34222, G__34223, G__34224, G__34225) : cljs.core.chunked_seq.call(null, G__34222, G__34223, G__34224, G__34225);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__34226 = self__.vec;
    var G__34227 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__34228 = end;
    var G__34229 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34226, G__34227, G__34228, G__34229) : cljs.core.chunked_seq.call(null, G__34226, G__34227, G__34228, G__34229);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args34232 = [];
  var len__31204__auto___34235 = arguments.length;
  var i__31205__auto___34236 = 0;
  while (true) {
    if (i__31205__auto___34236 < len__31204__auto___34235) {
      args34232.push(arguments[i__31205__auto___34236]);
      var G__34237 = i__31205__auto___34236 + 1;
      i__31205__auto___34236 = G__34237;
      continue;
    } else {
    }
    break;
  }
  var G__34234 = args34232.length;
  switch(G__34234) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34232.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__34259 = null;
  var G__34259__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34259__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__34259 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__34259__1.call(this, x);
      case 2:
        return G__34259__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34259.cljs$core$IFn$_invoke$arity$1 = G__34259__1;
  G__34259.cljs$core$IFn$_invoke$arity$2 = G__34259__2;
  return G__34259;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__34260 = null;
  var G__34260__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34260__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__34260 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__34260__1.call(this, x);
      case 2:
        return G__34260__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34260.cljs$core$IFn$_invoke$arity$1 = G__34260__1;
  G__34260.cljs$core$IFn$_invoke$arity$2 = G__34260__2;
  return G__34260;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__34240 = init__$1;
        var G__34241 = j;
        var G__34242 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34240, G__34241, G__34242) : f.call(null, G__34240, G__34241, G__34242);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__34261 = i + 1;
        var G__34262 = j + 1;
        var G__34263 = init__$2;
        i = G__34261;
        j = G__34262;
        init__$1 = G__34263;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__34243 = self__.meta;
  var G__34244 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__34245 = self__.start;
  var G__34246 = function() {
    var x__30427__auto__ = self__.end;
    var y__30428__auto__ = v_pos + 1;
    return x__30427__auto__ > y__30428__auto__ ? x__30427__auto__ : y__30428__auto__;
  }();
  var G__34247 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34243, G__34244, G__34245, G__34246, G__34247) : cljs.core.build_subvec.call(null, G__34243, G__34244, G__34245, G__34246, G__34247);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__34248 = self__.meta;
    var G__34249 = self__.v;
    var G__34250 = self__.start;
    var G__34251 = self__.end - 1;
    var G__34252 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34248, G__34249, G__34250, G__34251, G__34252) : cljs.core.build_subvec.call(null, G__34248, G__34249, G__34250, G__34251, G__34252);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__34254 = self__.meta;
  var G__34255 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__34256 = self__.start;
  var G__34257 = self__.end + 1;
  var G__34258 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34254, G__34255, G__34256, G__34257, G__34258) : cljs.core.build_subvec.call(null, G__34254, G__34255, G__34256, G__34257, G__34258);
};
cljs.core.Subvec.prototype.call = function() {
  var G__34264 = null;
  var G__34264__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__34264__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__34264 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34264__2.call(this, self__, k);
      case 3:
        return G__34264__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34264.cljs$core$IFn$_invoke$arity$2 = G__34264__2;
  G__34264.cljs$core$IFn$_invoke$arity$3 = G__34264__3;
  return G__34264;
}();
cljs.core.Subvec.prototype.apply = function(self__, args34239) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34239)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__34265 = meta;
      var G__34266 = v.v;
      var G__34267 = v.start + start;
      var G__34268 = v.start + end;
      var G__34269 = __hash;
      meta = G__34265;
      v = G__34266;
      start = G__34267;
      end = G__34268;
      __hash = G__34269;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args34270 = [];
  var len__31204__auto___34273 = arguments.length;
  var i__31205__auto___34274 = 0;
  while (true) {
    if (i__31205__auto___34274 < len__31204__auto___34273) {
      args34270.push(arguments[i__31205__auto___34274]);
      var G__34275 = i__31205__auto___34274 + 1;
      i__31205__auto___34274 = G__34275;
      continue;
    } else {
    }
    break;
  }
  var G__34272 = args34270.length;
  switch(G__34272) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34270.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__34285 = tv;
      var G__34286 = level - 5;
      var G__34287 = child;
      var G__34288 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__34285, G__34286, G__34287, G__34288) : cljs.core.tv_push_tail.call(null, G__34285, G__34286, G__34287, G__34288);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__34292 = tv;
      var G__34293 = level - 5;
      var G__34294 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__34292, G__34293, G__34294) : cljs.core.tv_pop_tail.call(null, G__34292, G__34293, G__34294);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__34295 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__34296 = level - 5;
        node = G__34295;
        level = G__34296;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__34300 = null;
  var G__34300__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34300__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34300 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34300__2.call(this, self__, k);
      case 3:
        return G__34300__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34300.cljs$core$IFn$_invoke$arity$2 = G__34300__2;
  G__34300.cljs$core$IFn$_invoke$arity$3 = G__34300__3;
  return G__34300;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args34297) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34297)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__30096__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__30096__auto__) {
    return or__30096__auto__;
  } else {
    var and__30084__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__30084__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__30084__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__34301 = null;
  var G__34301__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34301__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34301 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34301__1.call(this, x);
      case 2:
        return G__34301__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34301.cljs$core$IFn$_invoke$arity$1 = G__34301__1;
  G__34301.cljs$core$IFn$_invoke$arity$2 = G__34301__2;
  return G__34301;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__34302 = null;
  var G__34302__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34302__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34302 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34302__1.call(this, x);
      case 2:
        return G__34302__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34302.cljs$core$IFn$_invoke$arity$1 = G__34302__1;
  G__34302.cljs$core$IFn$_invoke$arity$2 = G__34302__2;
  return G__34302;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__34303 = null;
  var G__34303__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34303__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34303 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34303__1.call(this, x);
      case 2:
        return G__34303__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34303.cljs$core$IFn$_invoke$arity$1 = G__34303__1;
  G__34303.cljs$core$IFn$_invoke$arity$2 = G__34303__2;
  return G__34303;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__34304 = null;
  var G__34304__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__34304__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34304 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34304__1.call(this, x);
      case 2:
        return G__34304__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34304.cljs$core$IFn$_invoke$arity$1 = G__34304__1;
  G__34304.cljs$core$IFn$_invoke$arity$2 = G__34304__2;
  return G__34304;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__30096__auto__ = self__.front;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__30096__auto__ = self__.rear;
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__34305 = i + incr;
        i = G__34305;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__34306 = i + 1;
      var G__34307 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__34306;
      out = G__34307;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_34312 = 0;
  while (true) {
    if (i_34312 < l) {
      var k_34313 = ks[i_34312];
      new_obj[k_34313] = obj[k_34313];
      var G__34314 = i_34312 + 1;
      i_34312 = G__34314;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__34317 = init__$1;
        var G__34318 = k;
        var G__34319 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34317, G__34318, G__34319) : f.call(null, G__34317, G__34318, G__34319);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__34320 = cljs.core.rest(keys__$1);
        var G__34321 = init__$2;
        keys__$1 = G__34320;
        init__$1 = G__34321;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__34315_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__34315_SHARP_, self__.strobj[p1__34315_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__34322 = null;
  var G__34322__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34322__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34322 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34322__2.call(this, self__, k);
      case 3:
        return G__34322__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34322.cljs$core$IFn$_invoke$arity$2 = G__34322__2;
  G__34322.cljs$core$IFn$_invoke$arity$3 = G__34322__3;
  return G__34322;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args34316) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34316)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__30096__auto__ = self__.i < self__.base_count;
  if (or__30096__auto__) {
    return or__30096__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__34325 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34325, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34325, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__34328 = i + 2;
        i = G__34328;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__34329 = i + 2;
        i = G__34329;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__34330 = i + 2;
        i = G__34330;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__34331 = i + 2;
        i = G__34331;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__34332 = i + 2;
        i = G__34332;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_34333 = 0;
  while (true) {
    if (i_34333 < l) {
      narr[i_34333] = arr[i_34333];
      var G__34334 = i_34333 + 1;
      i_34333 = G__34334;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__34335 = null;
  var G__34335__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34335__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34335 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34335__1.call(this, x);
      case 2:
        return G__34335__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34335.cljs$core$IFn$_invoke$arity$1 = G__34335__1;
  G__34335.cljs$core$IFn$_invoke$arity$2 = G__34335__2;
  return G__34335;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__34336 = null;
  var G__34336__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34336__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34336 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34336__1.call(this, x);
      case 2:
        return G__34336__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34336.cljs$core$IFn$_invoke$arity$1 = G__34336__1;
  G__34336.cljs$core$IFn$_invoke$arity$2 = G__34336__2;
  return G__34336;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__34338 = cljs.core.seq(coll);
  var chunk__34339 = null;
  var count__34340 = 0;
  var i__34341 = 0;
  while (true) {
    if (i__34341 < count__34340) {
      var vec__34342 = chunk__34339.cljs$core$IIndexed$_nth$arity$2(null, i__34341);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34342, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34342, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__34355 = seq__34338;
      var G__34356 = chunk__34339;
      var G__34357 = count__34340;
      var G__34358 = i__34341 + 1;
      seq__34338 = G__34355;
      chunk__34339 = G__34356;
      count__34340 = G__34357;
      i__34341 = G__34358;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__34338);
      if (temp__4657__auto__) {
        var seq__34338__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__34338__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first(seq__34338__$1);
          var G__34359 = cljs.core.chunk_rest(seq__34338__$1);
          var G__34360 = c__30910__auto__;
          var G__34361 = cljs.core.count(c__30910__auto__);
          var G__34362 = 0;
          seq__34338 = G__34359;
          chunk__34339 = G__34360;
          count__34340 = G__34361;
          i__34341 = G__34362;
          continue;
        } else {
          var vec__34345 = cljs.core.first(seq__34338__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34345, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34345, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__34363 = cljs.core.next(seq__34338__$1);
          var G__34364 = null;
          var G__34365 = 0;
          var G__34366 = 0;
          seq__34338 = G__34363;
          chunk__34339 = G__34364;
          count__34340 = G__34365;
          i__34341 = G__34366;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__34348 = init__$1;
        var G__34349 = self__.arr[i];
        var G__34350 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34348, G__34349, G__34350) : f.call(null, G__34348, G__34349, G__34350);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__34367 = i + 2;
        var G__34368 = init__$2;
        i = G__34367;
        init__$1 = G__34368;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__34369 = i + 2;
              i = G__34369;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__34370 = s + 2;
            var G__34371 = d;
            s = G__34370;
            d = G__34371;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__34372 = s + 2;
            var G__34373 = d + 2;
            s = G__34372;
            d = G__34373;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__34354 = cljs.core.aclone(self__.arr);
        G__34354[idx + 1] = v;
        return G__34354;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__34374 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__34375 = cljs.core.next(es);
          ret = G__34374;
          es = G__34375;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__34376 = null;
  var G__34376__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34376__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34376 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34376__2.call(this, self__, k);
      case 3:
        return G__34376__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34376.cljs$core$IFn$_invoke$arity$2 = G__34376__2;
  G__34376.cljs$core$IFn$_invoke$arity$3 = G__34376__3;
  return G__34376;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args34337) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34337)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_34377 = 0;
    while (true) {
      if (i_34377 < arr__$1.length) {
        var k_34378 = arr__$1[i_34377];
        var v_34379 = arr__$1[i_34377 + 1];
        var idx_34380 = cljs.core.array_index_of(ret, k_34378);
        if (idx_34380 === -1) {
          ret.push(k_34378);
          ret.push(v_34379);
        } else {
        }
        var G__34381 = i_34377 + 2;
        i_34377 = G__34381;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__34384 = cljs.core.next(es);
          var G__34385 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__34384;
          tcoll__$2 = G__34385;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__34383_34386 = self__.arr;
      G__34383_34386.pop();
      G__34383_34386.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__34387 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__34388 = i + 2;
      out = G__34387;
      i = G__34388;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args34389 = [];
  var len__31204__auto___34394 = arguments.length;
  var i__31205__auto___34395 = 0;
  while (true) {
    if (i__31205__auto___34395 < len__31204__auto___34394) {
      args34389.push(arguments[i__31205__auto___34395]);
      var G__34396 = i__31205__auto___34395 + 1;
      i__31205__auto___34395 = G__34396;
      continue;
    } else {
    }
    break;
  }
  var G__34391 = args34389.length;
  switch(G__34391) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34389.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__34392 = cljs.core.aclone(arr);
  G__34392[i] = a;
  return G__34392;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__34393 = cljs.core.aclone(arr);
  G__34393[i] = a;
  G__34393[j] = b;
  return G__34393;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args34398 = [];
  var len__31204__auto___34401 = arguments.length;
  var i__31205__auto___34402 = 0;
  while (true) {
    if (i__31205__auto___34402 < len__31204__auto___34401) {
      args34398.push(arguments[i__31205__auto___34402]);
      var G__34403 = i__31205__auto___34402 + 1;
      i__31205__auto___34402 = G__34403;
      continue;
    } else {
    }
    break;
  }
  var G__34400 = args34398.length;
  switch(G__34400) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34398.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__34408 = init__$1;
          var G__34409 = k;
          var G__34410 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34408, G__34409, G__34410) : f.call(null, G__34408, G__34409, G__34410);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__34411 = i + 2;
        var G__34412 = init__$2;
        i = G__34411;
        init__$1 = G__34412;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__30096__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__30096__auto__) {
    return or__30096__auto__;
  } else {
    var or__30096__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__30096__auto____$1) {
      return or__30096__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_34426 = 0;
        var j_34427 = 0;
        while (true) {
          if (i_34426 < 32) {
            if ((self__.bitmap >>> i_34426 & 1) === 0) {
              var G__34428 = i_34426 + 1;
              var G__34429 = j_34427;
              i_34426 = G__34428;
              j_34427 = G__34429;
              continue;
            } else {
              nodes[i_34426] = !(self__.arr[j_34427] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_34427]), self__.arr[j_34427], self__.arr[j_34427 + 1], added_leaf_QMARK_) : self__.arr[j_34427 + 1];
              var G__34430 = i_34426 + 1;
              var G__34431 = j_34427 + 2;
              i_34426 = G__34430;
              j_34427 = G__34431;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__34413 = edit__$1;
          var G__34414 = shift + 5;
          var G__34415 = key_or_nil;
          var G__34416 = val_or_node;
          var G__34417 = hash;
          var G__34418 = key;
          var G__34419 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__34413, G__34414, G__34415, G__34416, G__34417, G__34418, G__34419) : cljs.core.create_node.call(null, G__34413, G__34414, G__34415, G__34416, G__34417, G__34418, G__34419);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_34432 = 0;
      var j_34433 = 0;
      while (true) {
        if (i_34432 < 32) {
          if ((self__.bitmap >>> i_34432 & 1) === 0) {
            var G__34434 = i_34432 + 1;
            var G__34435 = j_34433;
            i_34432 = G__34434;
            j_34433 = G__34435;
            continue;
          } else {
            nodes[i_34432] = !(self__.arr[j_34433] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_34433]), self__.arr[j_34433], self__.arr[j_34433 + 1], added_leaf_QMARK_) : self__.arr[j_34433 + 1];
            var G__34436 = i_34432 + 1;
            var G__34437 = j_34433 + 2;
            i_34432 = G__34436;
            j_34433 = G__34437;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__34420 = shift + 5;
          var G__34421 = key_or_nil;
          var G__34422 = val_or_node;
          var G__34423 = hash;
          var G__34424 = key;
          var G__34425 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__34420, G__34421, G__34422, G__34423, G__34424, G__34425) : cljs.core.create_node.call(null, G__34420, G__34421, G__34422, G__34423, G__34424, G__34425);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__34438 = i + 1;
        var G__34439 = j + 2;
        var G__34440 = bitmap | 1 << i;
        i = G__34438;
        j = G__34439;
        bitmap = G__34440;
        continue;
      } else {
        var G__34441 = i + 1;
        var G__34442 = j;
        var G__34443 = bitmap;
        i = G__34441;
        j = G__34442;
        bitmap = G__34443;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__34444 = i + 1;
          var G__34445 = init__$2;
          i = G__34444;
          init__$1 = G__34445;
          continue;
        }
      } else {
        var G__34446 = i + 1;
        var G__34447 = init__$1;
        i = G__34446;
        init__$1 = G__34447;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__34448 = i + 2;
        i = G__34448;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args34449 = [];
  var len__31204__auto___34452 = arguments.length;
  var i__31205__auto___34453 = 0;
  while (true) {
    if (i__31205__auto___34453 < len__31204__auto___34452) {
      args34449.push(arguments[i__31205__auto___34453]);
      var G__34454 = i__31205__auto___34453 + 1;
      i__31205__auto___34453 = G__34454;
      continue;
    } else {
    }
    break;
  }
  var G__34451 = args34449.length;
  switch(G__34451) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34449.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__34462 = null;
  var G__34462__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34462__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34462 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34462__1.call(this, x);
      case 2:
        return G__34462__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34462.cljs$core$IFn$_invoke$arity$1 = G__34462__1;
  G__34462.cljs$core$IFn$_invoke$arity$2 = G__34462__2;
  return G__34462;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__34463 = null;
  var G__34463__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34463__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34463 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34463__1.call(this, x);
      case 2:
        return G__34463__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34463.cljs$core$IFn$_invoke$arity$1 = G__34463__1;
  G__34463.cljs$core$IFn$_invoke$arity$2 = G__34463__2;
  return G__34463;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? function() {
    var G__34456 = self__.nodes;
    var G__34457 = self__.i + 2;
    var G__34458 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__34456, G__34457, G__34458) : cljs.core.create_inode_seq.call(null, G__34456, G__34457, G__34458);
  }() : function() {
    var G__34459 = self__.nodes;
    var G__34460 = self__.i;
    var G__34461 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__34459, G__34460, G__34461) : cljs.core.create_inode_seq.call(null, G__34459, G__34460, G__34461);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args34464 = [];
  var len__31204__auto___34467 = arguments.length;
  var i__31205__auto___34468 = 0;
  while (true) {
    if (i__31205__auto___34468 < len__31204__auto___34467) {
      args34464.push(arguments[i__31205__auto___34468]);
      var G__34469 = i__31205__auto___34468 + 1;
      i__31205__auto___34468 = G__34469;
      continue;
    } else {
    }
    break;
  }
  var G__34466 = args34464.length;
  switch(G__34466) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34464.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__34471 = j + 2;
              j = G__34471;
              continue;
            }
          } else {
            var G__34472 = j + 2;
            j = G__34472;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__34477 = null;
  var G__34477__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34477__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34477 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34477__1.call(this, x);
      case 2:
        return G__34477__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34477.cljs$core$IFn$_invoke$arity$1 = G__34477__1;
  G__34477.cljs$core$IFn$_invoke$arity$2 = G__34477__2;
  return G__34477;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__34478 = null;
  var G__34478__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34478__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34478 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34478__1.call(this, x);
      case 2:
        return G__34478__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34478.cljs$core$IFn$_invoke$arity$1 = G__34478__1;
  G__34478.cljs$core$IFn$_invoke$arity$2 = G__34478__2;
  return G__34478;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = function() {
    var G__34473 = null;
    var G__34474 = self__.nodes;
    var G__34475 = self__.i;
    var G__34476 = cljs.core.next(self__.s);
    return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__34473, G__34474, G__34475, G__34476) : cljs.core.create_array_node_seq.call(null, G__34473, G__34474, G__34475, G__34476);
  }();
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args34479 = [];
  var len__31204__auto___34482 = arguments.length;
  var i__31205__auto___34483 = 0;
  while (true) {
    if (i__31205__auto___34483 < len__31204__auto___34482) {
      args34479.push(arguments[i__31205__auto___34483]);
      var G__34484 = i__31205__auto___34483 + 1;
      i__31205__auto___34483 = G__34484;
      continue;
    } else {
    }
    break;
  }
  var G__34481 = args34479.length;
  switch(G__34481) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34479.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__34486 = j + 1;
            j = G__34486;
            continue;
          }
        } else {
          var G__34487 = j + 1;
          j = G__34487;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.not(self__.seen) || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__34489 = cljs.core.seq(coll);
  var chunk__34490 = null;
  var count__34491 = 0;
  var i__34492 = 0;
  while (true) {
    if (i__34492 < count__34491) {
      var vec__34493 = chunk__34490.cljs$core$IIndexed$_nth$arity$2(null, i__34492);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34493, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34493, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__34501 = seq__34489;
      var G__34502 = chunk__34490;
      var G__34503 = count__34491;
      var G__34504 = i__34492 + 1;
      seq__34489 = G__34501;
      chunk__34490 = G__34502;
      count__34491 = G__34503;
      i__34492 = G__34504;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__34489);
      if (temp__4657__auto__) {
        var seq__34489__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__34489__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first(seq__34489__$1);
          var G__34505 = cljs.core.chunk_rest(seq__34489__$1);
          var G__34506 = c__30910__auto__;
          var G__34507 = cljs.core.count(c__30910__auto__);
          var G__34508 = 0;
          seq__34489 = G__34505;
          chunk__34490 = G__34506;
          count__34491 = G__34507;
          i__34492 = G__34508;
          continue;
        } else {
          var vec__34496 = cljs.core.first(seq__34489__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34496, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34496, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__34509 = cljs.core.next(seq__34489__$1);
          var G__34510 = null;
          var G__34511 = 0;
          var G__34512 = 0;
          seq__34489 = G__34509;
          chunk__34490 = G__34510;
          count__34491 = G__34511;
          i__34492 = G__34512;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__34513 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__34514 = cljs.core.next(es);
          ret = G__34513;
          es = G__34514;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__34515 = null;
  var G__34515__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34515__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34515 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34515__2.call(this, self__, k);
      case 3:
        return G__34515__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34515.cljs$core$IFn$_invoke$arity$2 = G__34515__2;
  G__34515.cljs$core$IFn$_invoke$arity$3 = G__34515__3;
  return G__34515;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args34488) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34488)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__34516 = i + 2;
      var G__34517 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__34516;
      ret = G__34517;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__34518 = i + 1;
      var G__34519 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__34518;
      out = G__34519;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__34521 = cljs.core.next(es);
          var G__34522 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__34521;
          tcoll__$1 = G__34522;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__34523 = ascending_QMARK_ ? t.left : t.right;
      var G__34524 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__34523;
      stack__$1 = G__34524;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__34525 = null;
  var G__34525__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34525__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34525 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34525__1.call(this, x);
      case 2:
        return G__34525__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34525.cljs$core$IFn$_invoke$arity$1 = G__34525__1;
  G__34525.cljs$core$IFn$_invoke$arity$2 = G__34525__2;
  return G__34525;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__34526 = null;
  var G__34526__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34526__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34526 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34526__1.call(this, x);
      case 2:
        return G__34526__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34526.cljs$core$IFn$_invoke$arity$1 = G__34526__1;
  G__34526.cljs$core$IFn$_invoke$arity$2 = G__34526__2;
  return G__34526;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__34536 = node.left;
    var G__34537 = f;
    var G__34538 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__34536, G__34537, G__34538) : cljs.core.tree_map_kv_reduce.call(null, G__34536, G__34537, G__34538);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__34539 = init__$1;
      var G__34540 = node.key;
      var G__34541 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34539, G__34540, G__34541) : f.call(null, G__34539, G__34540, G__34541);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? function() {
        var G__34542 = node.right;
        var G__34543 = f;
        var G__34544 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__34542, G__34543, G__34544) : cljs.core.tree_map_kv_reduce.call(null, G__34542, G__34543, G__34544);
      }() : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__34546 = null;
  var G__34546__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34546__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34546 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34546__1.call(this, x);
      case 2:
        return G__34546__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34546.cljs$core$IFn$_invoke$arity$1 = G__34546__1;
  G__34546.cljs$core$IFn$_invoke$arity$2 = G__34546__2;
  return G__34546;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__34547 = null;
  var G__34547__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34547__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34547 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34547__1.call(this, x);
      case 2:
        return G__34547__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34547.cljs$core$IFn$_invoke$arity$1 = G__34547__1;
  G__34547.cljs$core$IFn$_invoke$arity$2 = G__34547__2;
  return G__34547;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__30933__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__30933__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__30933__auto____$1);
  }(), x__30933__auto__);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__34548 = null;
  var G__34548__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34548__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34548 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34548__2.call(this, self__, k);
      case 3:
        return G__34548__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34548.cljs$core$IFn$_invoke$arity$2 = G__34548__2;
  G__34548.cljs$core$IFn$_invoke$arity$3 = G__34548__3;
  return G__34548;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args34545) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34545)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__34550 = null;
  var G__34550__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34550__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34550 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34550__1.call(this, x);
      case 2:
        return G__34550__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34550.cljs$core$IFn$_invoke$arity$1 = G__34550__1;
  G__34550.cljs$core$IFn$_invoke$arity$2 = G__34550__2;
  return G__34550;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__34551 = null;
  var G__34551__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34551__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34551 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34551__1.call(this, x);
      case 2:
        return G__34551__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34551.cljs$core$IFn$_invoke$arity$1 = G__34551__1;
  G__34551.cljs$core$IFn$_invoke$arity$2 = G__34551__2;
  return G__34551;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__30933__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__30933__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__30933__auto____$1);
  }(), x__30933__auto__);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__34552 = null;
  var G__34552__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34552__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34552 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34552__2.call(this, self__, k);
      case 3:
        return G__34552__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34552.cljs$core$IFn$_invoke$arity$2 = G__34552__2;
  G__34552.cljs$core$IFn$_invoke$arity$3 = G__34552__3;
  return G__34552;
}();
cljs.core.RedNode.prototype.apply = function(self__, args34549) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34549)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__34565 = k;
      var G__34566 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34565, G__34566) : comp.call(null, G__34565, G__34566);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__34567 = comp;
          var G__34568 = tree.left;
          var G__34569 = k;
          var G__34570 = v;
          var G__34571 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__34567, G__34568, G__34569, G__34570, G__34571) : cljs.core.tree_map_add.call(null, G__34567, G__34568, G__34569, G__34570, G__34571);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__34572 = comp;
          var G__34573 = tree.right;
          var G__34574 = k;
          var G__34575 = v;
          var G__34576 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__34572, G__34573, G__34574, G__34575, G__34576) : cljs.core.tree_map_add.call(null, G__34572, G__34573, G__34574, G__34575, G__34576);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__34585 = left.right;
            var G__34586 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__34585, G__34586) : cljs.core.tree_map_append.call(null, G__34585, G__34586);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__34587 = left.right;
            var G__34588 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__34587, G__34588) : cljs.core.tree_map_append.call(null, G__34587, G__34588);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__34589 = left;
            var G__34590 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__34589, G__34590) : cljs.core.tree_map_append.call(null, G__34589, G__34590);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__34591 = left.right;
            var G__34592 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__34591, G__34592) : cljs.core.tree_map_append.call(null, G__34591, G__34592);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__34603 = k;
      var G__34604 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34603, G__34604) : comp.call(null, G__34603, G__34604);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__34605 = comp;
          var G__34606 = tree.left;
          var G__34607 = k;
          var G__34608 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__34605, G__34606, G__34607, G__34608) : cljs.core.tree_map_remove.call(null, G__34605, G__34606, G__34607, G__34608);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__34609 = comp;
          var G__34610 = tree.right;
          var G__34611 = k;
          var G__34612 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__34609, G__34610, G__34611, G__34612) : cljs.core.tree_map_remove.call(null, G__34609, G__34610, G__34611, G__34612);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__34621 = comp;
        var G__34622 = tree.left;
        var G__34623 = k;
        var G__34624 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__34621, G__34622, G__34623, G__34624) : cljs.core.tree_map_replace.call(null, G__34621, G__34622, G__34623, G__34624);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__34625 = comp;
        var G__34626 = tree.right;
        var G__34627 = k;
        var G__34628 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__34625, G__34626, G__34627, G__34628) : cljs.core.tree_map_replace.call(null, G__34625, G__34626, G__34627, G__34628);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__34630 = cljs.core.seq(coll);
  var chunk__34631 = null;
  var count__34632 = 0;
  var i__34633 = 0;
  while (true) {
    if (i__34633 < count__34632) {
      var vec__34634 = chunk__34631.cljs$core$IIndexed$_nth$arity$2(null, i__34633);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34634, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34634, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__34644 = seq__34630;
      var G__34645 = chunk__34631;
      var G__34646 = count__34632;
      var G__34647 = i__34633 + 1;
      seq__34630 = G__34644;
      chunk__34631 = G__34645;
      count__34632 = G__34646;
      i__34633 = G__34647;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__34630);
      if (temp__4657__auto__) {
        var seq__34630__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__34630__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first(seq__34630__$1);
          var G__34648 = cljs.core.chunk_rest(seq__34630__$1);
          var G__34649 = c__30910__auto__;
          var G__34650 = cljs.core.count(c__30910__auto__);
          var G__34651 = 0;
          seq__34630 = G__34648;
          chunk__34631 = G__34649;
          count__34632 = G__34650;
          i__34633 = G__34651;
          continue;
        } else {
          var vec__34637 = cljs.core.first(seq__34630__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34637, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34637, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__34652 = cljs.core.next(seq__34630__$1);
          var G__34653 = null;
          var G__34654 = 0;
          var G__34655 = 0;
          seq__34630 = G__34652;
          chunk__34631 = G__34653;
          count__34632 = G__34654;
          i__34633 = G__34655;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__34640 = k;
        var G__34641 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__34640, G__34641) : self__.comp.call(null, G__34640, G__34641);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__34656 = t.left;
          t = G__34656;
          continue;
        } else {
          var G__34657 = t.right;
          t = G__34657;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__34658 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__34659 = cljs.core.next(es);
          ret = G__34658;
          es = G__34659;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__34660 = null;
  var G__34660__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34660__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34660 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34660__2.call(this, self__, k);
      case 3:
        return G__34660__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34660.cljs$core$IFn$_invoke$arity$2 = G__34660__2;
  G__34660.cljs$core$IFn$_invoke$arity$3 = G__34660__3;
  return G__34660;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args34629) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34629)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__34642 = k;
          var G__34643 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__34642, G__34643) : self__.comp.call(null, G__34642, G__34643);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__34661 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__34662 = t.left;
              stack = G__34661;
              t = G__34662;
              continue;
            } else {
              var G__34663 = stack;
              var G__34664 = t.right;
              stack = G__34663;
              t = G__34664;
              continue;
            }
          } else {
            if (c > 0) {
              var G__34665 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__34666 = t.right;
              stack = G__34665;
              t = G__34666;
              continue;
            } else {
              var G__34667 = stack;
              var G__34668 = t.left;
              stack = G__34667;
              t = G__34668;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34670 = arguments.length;
  var i__31205__auto___34671 = 0;
  while (true) {
    if (i__31205__auto___34671 < len__31204__auto___34670) {
      args__31211__auto__.push(arguments[i__31205__auto___34671]);
      var G__34672 = i__31205__auto___34671 + 1;
      i__31205__auto___34671 = G__34672;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__34673 = cljs.core.nnext(in$);
      var G__34674 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__34673;
      out = G__34674;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq34669) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34669));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34676 = arguments.length;
  var i__31205__auto___34677 = 0;
  while (true) {
    if (i__31205__auto___34677 < len__31204__auto___34676) {
      args__31211__auto__.push(arguments[i__31205__auto___34677]);
      var G__34678 = i__31205__auto___34677 + 1;
      i__31205__auto___34677 = G__34678;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq34675) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34675));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34682 = arguments.length;
  var i__31205__auto___34683 = 0;
  while (true) {
    if (i__31205__auto___34683 < len__31204__auto___34682) {
      args__31211__auto__.push(arguments[i__31205__auto___34683]);
      var G__34684 = i__31205__auto___34683 + 1;
      i__31205__auto___34683 = G__34684;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__34685 = cljs.core.nnext(kvs);
      kvs = G__34685;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq34679) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34679));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34687 = arguments.length;
  var i__31205__auto___34688 = 0;
  while (true) {
    if (i__31205__auto___34688 < len__31204__auto___34687) {
      args__31211__auto__.push(arguments[i__31205__auto___34688]);
      var G__34689 = i__31205__auto___34688 + 1;
      i__31205__auto___34688 = G__34689;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__34690 = cljs.core.nnext(in$);
      var G__34691 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__34690;
      out = G__34691;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq34686) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34686));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34694 = arguments.length;
  var i__31205__auto___34695 = 0;
  while (true) {
    if (i__31205__auto___34695 < len__31204__auto___34694) {
      args__31211__auto__.push(arguments[i__31205__auto___34695]);
      var G__34696 = i__31205__auto___34695 + 1;
      i__31205__auto___34695 = G__34696;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__34697 = cljs.core.nnext(in$);
      var G__34698 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__34697;
      out = G__34698;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq34692) {
  var G__34693 = cljs.core.first(seq34692);
  var seq34692__$1 = cljs.core.next(seq34692);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__34693, seq34692__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__34701 = null;
  var G__34701__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34701__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34701 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34701__1.call(this, x);
      case 2:
        return G__34701__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34701.cljs$core$IFn$_invoke$arity$1 = G__34701__1;
  G__34701.cljs$core$IFn$_invoke$arity$2 = G__34701__2;
  return G__34701;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__34702 = null;
  var G__34702__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34702__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34702 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34702__1.call(this, x);
      case 2:
        return G__34702__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34702.cljs$core$IFn$_invoke$arity$1 = G__34702__1;
  G__34702.cljs$core$IFn$_invoke$arity$2 = G__34702__2;
  return G__34702;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__34705 = null;
  var G__34705__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34705__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34705 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34705__1.call(this, x);
      case 2:
        return G__34705__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34705.cljs$core$IFn$_invoke$arity$1 = G__34705__1;
  G__34705.cljs$core$IFn$_invoke$arity$2 = G__34705__2;
  return G__34705;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__34706 = null;
  var G__34706__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34706__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__34706 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__34706__1.call(this, x);
      case 2:
        return G__34706__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34706.cljs$core$IFn$_invoke$arity$1 = G__34706__1;
  G__34706.cljs$core$IFn$_invoke$arity$2 = G__34706__2;
  return G__34706;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34710 = arguments.length;
  var i__31205__auto___34711 = 0;
  while (true) {
    if (i__31205__auto___34711 < len__31204__auto___34710) {
      args__31211__auto__.push(arguments[i__31205__auto___34711]);
      var G__34712 = i__31205__auto___34711 + 1;
      i__31205__auto___34711 = G__34712;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__34707_SHARP_, p2__34708_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__30096__auto__ = p1__34707_SHARP_;
        if (cljs.core.truth_(or__30096__auto__)) {
          return or__30096__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__34708_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq34709) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34709));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34717 = arguments.length;
  var i__31205__auto___34718 = 0;
  while (true) {
    if (i__31205__auto___34718 < len__31204__auto___34717) {
      args__31211__auto__.push(arguments[i__31205__auto___34718]);
      var G__34719 = i__31205__auto___34718 + 1;
      i__31205__auto___34718 = G__34719;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__34715 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__34716 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34715, G__34716) : f.call(null, G__34715, G__34716);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__30096__auto__ = m1;
          if (cljs.core.truth_(or__30096__auto__)) {
            return or__30096__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq34713) {
  var G__34714 = cljs.core.first(seq34713);
  var seq34713__$1 = cljs.core.next(seq34713);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__34714, seq34713__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__34720 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__34721 = cljs.core.next(keys);
      ret = G__34720;
      keys = G__34721;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__34724 = cljs.core.seq(coll);
  var chunk__34725 = null;
  var count__34726 = 0;
  var i__34727 = 0;
  while (true) {
    if (i__34727 < count__34726) {
      var vec__34728 = chunk__34725.cljs$core$IIndexed$_nth$arity$2(null, i__34727);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34728, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34728, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__34734 = seq__34724;
      var G__34735 = chunk__34725;
      var G__34736 = count__34726;
      var G__34737 = i__34727 + 1;
      seq__34724 = G__34734;
      chunk__34725 = G__34735;
      count__34726 = G__34736;
      i__34727 = G__34737;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__34724);
      if (temp__4657__auto__) {
        var seq__34724__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__34724__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first(seq__34724__$1);
          var G__34738 = cljs.core.chunk_rest(seq__34724__$1);
          var G__34739 = c__30910__auto__;
          var G__34740 = cljs.core.count(c__30910__auto__);
          var G__34741 = 0;
          seq__34724 = G__34738;
          chunk__34725 = G__34739;
          count__34726 = G__34740;
          i__34727 = G__34741;
          continue;
        } else {
          var vec__34731 = cljs.core.first(seq__34724__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34731, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34731, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__34742 = cljs.core.next(seq__34724__$1);
          var G__34743 = null;
          var G__34744 = 0;
          var G__34745 = 0;
          seq__34724 = G__34742;
          chunk__34725 = G__34743;
          count__34726 = G__34744;
          i__34727 = G__34745;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__34722_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__34722_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__34746 = null;
  var G__34746__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34746__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34746 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34746__2.call(this, self__, k);
      case 3:
        return G__34746__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34746.cljs$core$IFn$_invoke$arity$2 = G__34746__2;
  G__34746.cljs$core$IFn$_invoke$arity$3 = G__34746__3;
  return G__34746;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args34723) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34723)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__34747 = i + 1;
        var G__34748 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__34747;
        out = G__34748;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__34749 = i + 1;
        var G__34750 = cljs.core._conj_BANG_(out, items[i]);
        i = G__34749;
        out = G__34750;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__34752 = null;
  var G__34752__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__34752__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__34752 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34752__2.call(this, self__, k);
      case 3:
        return G__34752__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34752.cljs$core$IFn$_invoke$arity$2 = G__34752__2;
  G__34752.cljs$core$IFn$_invoke$arity$3 = G__34752__3;
  return G__34752;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args34751) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34751)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__34755 = cljs.core.seq(coll);
  var chunk__34756 = null;
  var count__34757 = 0;
  var i__34758 = 0;
  while (true) {
    if (i__34758 < count__34757) {
      var vec__34759 = chunk__34756.cljs$core$IIndexed$_nth$arity$2(null, i__34758);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34759, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34759, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__34765 = seq__34755;
      var G__34766 = chunk__34756;
      var G__34767 = count__34757;
      var G__34768 = i__34758 + 1;
      seq__34755 = G__34765;
      chunk__34756 = G__34766;
      count__34757 = G__34767;
      i__34758 = G__34768;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__34755);
      if (temp__4657__auto__) {
        var seq__34755__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__34755__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first(seq__34755__$1);
          var G__34769 = cljs.core.chunk_rest(seq__34755__$1);
          var G__34770 = c__30910__auto__;
          var G__34771 = cljs.core.count(c__30910__auto__);
          var G__34772 = 0;
          seq__34755 = G__34769;
          chunk__34756 = G__34770;
          count__34757 = G__34771;
          i__34758 = G__34772;
          continue;
        } else {
          var vec__34762 = cljs.core.first(seq__34755__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34762, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34762, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__34773 = cljs.core.next(seq__34755__$1);
          var G__34774 = null;
          var G__34775 = 0;
          var G__34776 = 0;
          seq__34755 = G__34773;
          chunk__34756 = G__34774;
          count__34757 = G__34775;
          i__34758 = G__34776;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__34753_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__34753_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__34777 = null;
  var G__34777__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__34777__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__34777 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__34777__2.call(this, self__, k);
      case 3:
        return G__34777__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34777.cljs$core$IFn$_invoke$arity$2 = G__34777__2;
  G__34777.cljs$core$IFn$_invoke$arity$3 = G__34777__3;
  return G__34777;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args34754) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args34754)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__31008__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__31008__auto__.length) {
        var G__34778 = i + 1;
        var G__34779 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__34778;
        res = G__34779;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__34780 = cljs.core.next(in$__$1);
          var G__34781 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__34780;
          out = G__34781;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args34782 = [];
  var len__31204__auto___34786 = arguments.length;
  var i__31205__auto___34787 = 0;
  while (true) {
    if (i__31205__auto___34787 < len__31204__auto___34786) {
      args34782.push(arguments[i__31205__auto___34787]);
      var G__34788 = i__31205__auto___34787 + 1;
      i__31205__auto___34787 = G__34788;
      continue;
    } else {
    }
    break;
  }
  var G__34785 = args34782.length;
  switch(G__34785) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args34782.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__31223__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq34783) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34783));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34791 = arguments.length;
  var i__31205__auto___34792 = 0;
  while (true) {
    if (i__31205__auto___34792 < len__31204__auto___34791) {
      args__31211__auto__.push(arguments[i__31205__auto___34792]);
      var G__34793 = i__31205__auto___34792 + 1;
      i__31205__auto___34792 = G__34793;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq34790) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34790));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___34796 = arguments.length;
  var i__31205__auto___34797 = 0;
  while (true) {
    if (i__31205__auto___34797 < len__31204__auto___34796) {
      args__31211__auto__.push(arguments[i__31205__auto___34797]);
      var G__34798 = i__31205__auto___34797 + 1;
      i__31205__auto___34797 = G__34798;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq34794) {
  var G__34795 = cljs.core.first(seq34794);
  var seq34794__$1 = cljs.core.next(seq34794);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__34795, seq34794__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args34801 = [];
  var len__31204__auto___34804 = arguments.length;
  var i__31205__auto___34805 = 0;
  while (true) {
    if (i__31205__auto___34805 < len__31204__auto___34804) {
      args34801.push(arguments[i__31205__auto___34805]);
      var G__34806 = i__31205__auto___34805 + 1;
      i__31205__auto___34805 = G__34806;
      continue;
    } else {
    }
    break;
  }
  var G__34803 = args34801.length;
  switch(G__34803) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34801.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__34799_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__34799_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__34799_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__34800_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__34800_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__34800_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args34808 = [];
  var len__31204__auto___34821 = arguments.length;
  var i__31205__auto___34822 = 0;
  while (true) {
    if (i__31205__auto___34822 < len__31204__auto___34821) {
      args34808.push(arguments[i__31205__auto___34822]);
      var G__34823 = i__31205__auto___34822 + 1;
      i__31205__auto___34822 = G__34823;
      continue;
    } else {
    }
    break;
  }
  var G__34810 = args34808.length;
  switch(G__34810) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34808.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__34825 = null;
        var G__34825__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__34825__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__34825__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__34825 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__34825__0.call(this);
            case 1:
              return G__34825__1.call(this, result);
            case 2:
              return G__34825__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__34825.cljs$core$IFn$_invoke$arity$0 = G__34825__0;
        G__34825.cljs$core$IFn$_invoke$arity$1 = G__34825__1;
        G__34825.cljs$core$IFn$_invoke$arity$2 = G__34825__2;
        return G__34825;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__34817, seen__$1) {
        while (true) {
          var vec__34818 = p__34817;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34818, 0, null);
          var xs__$1 = vec__34818;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__34826 = cljs.core.rest(s);
              var G__34827 = seen__$1;
              p__34817 = G__34826;
              seen__$1 = G__34827;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__34828 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__34829 = cljs.core.next(s__$1);
      ret = G__34828;
      s__$1 = G__34829;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__34832 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__34833 = cljs.core.next(ks);
      var G__34834 = cljs.core.next(vs);
      map = G__34832;
      ks = G__34833;
      vs = G__34834;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args34837 = [];
  var len__31204__auto___34844 = arguments.length;
  var i__31205__auto___34845 = 0;
  while (true) {
    if (i__31205__auto___34845 < len__31204__auto___34844) {
      args34837.push(arguments[i__31205__auto___34845]);
      var G__34846 = i__31205__auto___34845 + 1;
      i__31205__auto___34845 = G__34846;
      continue;
    } else {
    }
    break;
  }
  var G__34843 = args34837.length;
  switch(G__34843) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args34837.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__34835_SHARP_, p2__34836_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__34835_SHARP_, p2__34836_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq34838) {
  var G__34839 = cljs.core.first(seq34838);
  var seq34838__$1 = cljs.core.next(seq34838);
  var G__34840 = cljs.core.first(seq34838__$1);
  var seq34838__$2 = cljs.core.next(seq34838__$1);
  var G__34841 = cljs.core.first(seq34838__$2);
  var seq34838__$3 = cljs.core.next(seq34838__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__34839, G__34840, G__34841, seq34838__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args34850 = [];
  var len__31204__auto___34857 = arguments.length;
  var i__31205__auto___34858 = 0;
  while (true) {
    if (i__31205__auto___34858 < len__31204__auto___34857) {
      args34850.push(arguments[i__31205__auto___34858]);
      var G__34859 = i__31205__auto___34858 + 1;
      i__31205__auto___34858 = G__34859;
      continue;
    } else {
    }
    break;
  }
  var G__34856 = args34850.length;
  switch(G__34856) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args34850.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__34848_SHARP_, p2__34849_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__34848_SHARP_, p2__34849_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq34851) {
  var G__34852 = cljs.core.first(seq34851);
  var seq34851__$1 = cljs.core.next(seq34851);
  var G__34853 = cljs.core.first(seq34851__$1);
  var seq34851__$2 = cljs.core.next(seq34851__$1);
  var G__34854 = cljs.core.first(seq34851__$2);
  var seq34851__$3 = cljs.core.next(seq34851__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__34852, G__34853, G__34854, seq34851__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args34861 = [];
  var len__31204__auto___34864 = arguments.length;
  var i__31205__auto___34865 = 0;
  while (true) {
    if (i__31205__auto___34865 < len__31204__auto___34864) {
      args34861.push(arguments[i__31205__auto___34865]);
      var G__34866 = i__31205__auto___34865 + 1;
      i__31205__auto___34865 = G__34866;
      continue;
    } else {
    }
    break;
  }
  var G__34863 = args34861.length;
  switch(G__34863) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34861.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__34868 = null;
        var G__34868__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__34868__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__34868__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__34868 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__34868__0.call(this);
            case 1:
              return G__34868__1.call(this, result);
            case 2:
              return G__34868__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__34868.cljs$core$IFn$_invoke$arity$0 = G__34868__0;
        G__34868.cljs$core$IFn$_invoke$arity$1 = G__34868__1;
        G__34868.cljs$core$IFn$_invoke$arity$2 = G__34868__2;
        return G__34868;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args34869 = [];
  var len__31204__auto___34873 = arguments.length;
  var i__31205__auto___34874 = 0;
  while (true) {
    if (i__31205__auto___34874 < len__31204__auto___34873) {
      args34869.push(arguments[i__31205__auto___34874]);
      var G__34875 = i__31205__auto___34874 + 1;
      i__31205__auto___34874 = G__34875;
      continue;
    } else {
    }
    break;
  }
  var G__34871 = args34869.length;
  switch(G__34871) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34869.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__34877 = null;
      var G__34877__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__34877__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__34877__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__34877 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__34877__0.call(this);
          case 1:
            return G__34877__1.call(this, result);
          case 2:
            return G__34877__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__34877.cljs$core$IFn$_invoke$arity$0 = G__34877__0;
      G__34877.cljs$core$IFn$_invoke$arity$1 = G__34877__1;
      G__34877.cljs$core$IFn$_invoke$arity$2 = G__34877__2;
      return G__34877;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__34872 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34872) : pred.call(null, G__34872);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__34882 = function() {
      var G__34884 = cljs.core._entry_key(sc, e);
      var G__34885 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34884, G__34885) : comp.call(null, G__34884, G__34885);
    }();
    var G__34883 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__34882, G__34883) : test.call(null, G__34882, G__34883);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args34886 = [];
  var len__31204__auto___34895 = arguments.length;
  var i__31205__auto___34896 = 0;
  while (true) {
    if (i__31205__auto___34896 < len__31204__auto___34895) {
      args34886.push(arguments[i__31205__auto___34896]);
      var G__34897 = i__31205__auto___34896 + 1;
      i__31205__auto___34896 = G__34897;
      continue;
    } else {
    }
    break;
  }
  var G__34888 = args34886.length;
  switch(G__34888) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34886.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__34889 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34889, 0, null);
      var s = vec__34889;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__34892 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34892, 0, null);
    var s = vec__34892;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args34899 = [];
  var len__31204__auto___34908 = arguments.length;
  var i__31205__auto___34909 = 0;
  while (true) {
    if (i__31205__auto___34909 < len__31204__auto___34908) {
      args34899.push(arguments[i__31205__auto___34909]);
      var G__34910 = i__31205__auto___34909 + 1;
      i__31205__auto___34909 = G__34910;
      continue;
    } else {
    }
    break;
  }
  var G__34901 = args34899.length;
  switch(G__34901) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34899.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__34902 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34902, 0, null);
      var s = vec__34902;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__34905 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34905, 0, null);
    var s = vec__34905;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__34913 = null;
  var G__34913__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__34913__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__34913 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__34913__1.call(this, x);
      case 2:
        return G__34913__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34913.cljs$core$IFn$_invoke$arity$1 = G__34913__1;
  G__34913.cljs$core$IFn$_invoke$arity$2 = G__34913__2;
  return G__34913;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__34914 = null;
  var G__34914__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__34914__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__34914 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__34914__1.call(this, x);
      case 2:
        return G__34914__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__34914.cljs$core$IFn$_invoke$arity$1 = G__34914__1;
  G__34914.cljs$core$IFn$_invoke$arity$2 = G__34914__2;
  return G__34914;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__34912 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__34912);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__34915 = i + self__.step;
        var G__34916 = ret__$1;
        i = G__34915;
        ret = G__34916;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args34917 = [];
  var len__31204__auto___34920 = arguments.length;
  var i__31205__auto___34921 = 0;
  while (true) {
    if (i__31205__auto___34921 < len__31204__auto___34920) {
      args34917.push(arguments[i__31205__auto___34921]);
      var G__34922 = i__31205__auto___34921 + 1;
      i__31205__auto___34921 = G__34922;
      continue;
    } else {
    }
    break;
  }
  var G__34919 = args34917.length;
  switch(G__34919) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34917.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args34924 = [];
  var len__31204__auto___34927 = arguments.length;
  var i__31205__auto___34928 = 0;
  while (true) {
    if (i__31205__auto___34928 < len__31204__auto___34927) {
      args34924.push(arguments[i__31205__auto___34928]);
      var G__34929 = i__31205__auto___34928 + 1;
      i__31205__auto___34928 = G__34929;
      continue;
    } else {
    }
    break;
  }
  var G__34926 = args34924.length;
  switch(G__34926) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34924.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__34931 = null;
        var G__34931__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__34931__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__34931__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__34931 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__34931__0.call(this);
            case 1:
              return G__34931__1.call(this, result);
            case 2:
              return G__34931__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__34931.cljs$core$IFn$_invoke$arity$0 = G__34931__0;
        G__34931.cljs$core$IFn$_invoke$arity$1 = G__34931__1;
        G__34931.cljs$core$IFn$_invoke$arity$2 = G__34931__2;
        return G__34931;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args34933 = [];
  var len__31204__auto___34936 = arguments.length;
  var i__31205__auto___34937 = 0;
  while (true) {
    if (i__31205__auto___34937 < len__31204__auto___34936) {
      args34933.push(arguments[i__31205__auto___34937]);
      var G__34938 = i__31205__auto___34937 + 1;
      i__31205__auto___34937 = G__34938;
      continue;
    } else {
    }
    break;
  }
  var G__34935 = args34933.length;
  switch(G__34935) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34933.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__34940 = null;
        var G__34940__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__34940__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__34940__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__34940 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__34940__0.call(this);
            case 1:
              return G__34940__1.call(this, result);
            case 2:
              return G__34940__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__34940.cljs$core$IFn$_invoke$arity$0 = G__34940__0;
        G__34940.cljs$core$IFn$_invoke$arity$1 = G__34940__1;
        G__34940.cljs$core$IFn$_invoke$arity$2 = G__34940__2;
        return G__34940;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__34932_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__34932_SHARP_) : f.call(null, p1__34932_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args34941 = [];
  var len__31204__auto___34946 = arguments.length;
  var i__31205__auto___34947 = 0;
  while (true) {
    if (i__31205__auto___34947 < len__31204__auto___34946) {
      args34941.push(arguments[i__31205__auto___34947]);
      var G__34948 = i__31205__auto___34947 + 1;
      i__31205__auto___34947 = G__34948;
      continue;
    } else {
    }
    break;
  }
  var G__34943 = args34941.length;
  switch(G__34943) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34941.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      var x__30933__auto__ = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      return cljs.core._conj(cljs.core.List.EMPTY, x__30933__auto__);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    var x__30933__auto__ = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init) : cljs.core.deref.call(null, init);
    return cljs.core._conj(cljs.core.List.EMPTY, x__30933__auto__);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__34944 = init;
          var G__34945 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34944, G__34945) : f.call(null, G__34944, G__34945);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args34960 = [];
  var len__31204__auto___34967 = arguments.length;
  var i__31205__auto___34968 = 0;
  while (true) {
    if (i__31205__auto___34968 < len__31204__auto___34967) {
      args34960.push(arguments[i__31205__auto___34968]);
      var G__34969 = i__31205__auto___34968 + 1;
      i__31205__auto___34968 = G__34969;
      continue;
    } else {
    }
    break;
  }
  var G__34966 = args34960.length;
  switch(G__34966) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args34960.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31223__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__34971 = null;
    var G__34971__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__34971__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__34971__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__34971__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__34971__4 = function() {
      var G__34972__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__34972 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__34973__i = 0, G__34973__a = new Array(arguments.length - 3);
          while (G__34973__i < G__34973__a.length) {
            G__34973__a[G__34973__i] = arguments[G__34973__i + 3];
            ++G__34973__i;
          }
          args = new cljs.core.IndexedSeq(G__34973__a, 0);
        }
        return G__34972__delegate.call(this, x, y, z, args);
      };
      G__34972.cljs$lang$maxFixedArity = 3;
      G__34972.cljs$lang$applyTo = function(arglist__34974) {
        var x = cljs.core.first(arglist__34974);
        arglist__34974 = cljs.core.next(arglist__34974);
        var y = cljs.core.first(arglist__34974);
        arglist__34974 = cljs.core.next(arglist__34974);
        var z = cljs.core.first(arglist__34974);
        var args = cljs.core.rest(arglist__34974);
        return G__34972__delegate(x, y, z, args);
      };
      G__34972.cljs$core$IFn$_invoke$arity$variadic = G__34972__delegate;
      return G__34972;
    }();
    G__34971 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__34971__0.call(this);
        case 1:
          return G__34971__1.call(this, x);
        case 2:
          return G__34971__2.call(this, x, y);
        case 3:
          return G__34971__3.call(this, x, y, z);
        default:
          var G__34975 = null;
          if (arguments.length > 3) {
            var G__34976__i = 0, G__34976__a = new Array(arguments.length - 3);
            while (G__34976__i < G__34976__a.length) {
              G__34976__a[G__34976__i] = arguments[G__34976__i + 3];
              ++G__34976__i;
            }
            G__34975 = new cljs.core.IndexedSeq(G__34976__a, 0);
          }
          return G__34971__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__34975);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__34971.cljs$lang$maxFixedArity = 3;
    G__34971.cljs$lang$applyTo = G__34971__4.cljs$lang$applyTo;
    G__34971.cljs$core$IFn$_invoke$arity$0 = G__34971__0;
    G__34971.cljs$core$IFn$_invoke$arity$1 = G__34971__1;
    G__34971.cljs$core$IFn$_invoke$arity$2 = G__34971__2;
    G__34971.cljs$core$IFn$_invoke$arity$3 = G__34971__3;
    G__34971.cljs$core$IFn$_invoke$arity$variadic = G__34971__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__34971;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__34977 = null;
    var G__34977__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__34977__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__34977__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__34977__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__34977__4 = function() {
      var G__34978__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__34978 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__34979__i = 0, G__34979__a = new Array(arguments.length - 3);
          while (G__34979__i < G__34979__a.length) {
            G__34979__a[G__34979__i] = arguments[G__34979__i + 3];
            ++G__34979__i;
          }
          args = new cljs.core.IndexedSeq(G__34979__a, 0);
        }
        return G__34978__delegate.call(this, x, y, z, args);
      };
      G__34978.cljs$lang$maxFixedArity = 3;
      G__34978.cljs$lang$applyTo = function(arglist__34980) {
        var x = cljs.core.first(arglist__34980);
        arglist__34980 = cljs.core.next(arglist__34980);
        var y = cljs.core.first(arglist__34980);
        arglist__34980 = cljs.core.next(arglist__34980);
        var z = cljs.core.first(arglist__34980);
        var args = cljs.core.rest(arglist__34980);
        return G__34978__delegate(x, y, z, args);
      };
      G__34978.cljs$core$IFn$_invoke$arity$variadic = G__34978__delegate;
      return G__34978;
    }();
    G__34977 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__34977__0.call(this);
        case 1:
          return G__34977__1.call(this, x);
        case 2:
          return G__34977__2.call(this, x, y);
        case 3:
          return G__34977__3.call(this, x, y, z);
        default:
          var G__34981 = null;
          if (arguments.length > 3) {
            var G__34982__i = 0, G__34982__a = new Array(arguments.length - 3);
            while (G__34982__i < G__34982__a.length) {
              G__34982__a[G__34982__i] = arguments[G__34982__i + 3];
              ++G__34982__i;
            }
            G__34981 = new cljs.core.IndexedSeq(G__34982__a, 0);
          }
          return G__34977__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__34981);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__34977.cljs$lang$maxFixedArity = 3;
    G__34977.cljs$lang$applyTo = G__34977__4.cljs$lang$applyTo;
    G__34977.cljs$core$IFn$_invoke$arity$0 = G__34977__0;
    G__34977.cljs$core$IFn$_invoke$arity$1 = G__34977__1;
    G__34977.cljs$core$IFn$_invoke$arity$2 = G__34977__2;
    G__34977.cljs$core$IFn$_invoke$arity$3 = G__34977__3;
    G__34977.cljs$core$IFn$_invoke$arity$variadic = G__34977__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__34977;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__34983 = null;
    var G__34983__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__34983__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__34983__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__34983__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__34983__4 = function() {
      var G__34984__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__34984 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__34985__i = 0, G__34985__a = new Array(arguments.length - 3);
          while (G__34985__i < G__34985__a.length) {
            G__34985__a[G__34985__i] = arguments[G__34985__i + 3];
            ++G__34985__i;
          }
          args = new cljs.core.IndexedSeq(G__34985__a, 0);
        }
        return G__34984__delegate.call(this, x, y, z, args);
      };
      G__34984.cljs$lang$maxFixedArity = 3;
      G__34984.cljs$lang$applyTo = function(arglist__34986) {
        var x = cljs.core.first(arglist__34986);
        arglist__34986 = cljs.core.next(arglist__34986);
        var y = cljs.core.first(arglist__34986);
        arglist__34986 = cljs.core.next(arglist__34986);
        var z = cljs.core.first(arglist__34986);
        var args = cljs.core.rest(arglist__34986);
        return G__34984__delegate(x, y, z, args);
      };
      G__34984.cljs$core$IFn$_invoke$arity$variadic = G__34984__delegate;
      return G__34984;
    }();
    G__34983 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__34983__0.call(this);
        case 1:
          return G__34983__1.call(this, x);
        case 2:
          return G__34983__2.call(this, x, y);
        case 3:
          return G__34983__3.call(this, x, y, z);
        default:
          var G__34987 = null;
          if (arguments.length > 3) {
            var G__34988__i = 0, G__34988__a = new Array(arguments.length - 3);
            while (G__34988__i < G__34988__a.length) {
              G__34988__a[G__34988__i] = arguments[G__34988__i + 3];
              ++G__34988__i;
            }
            G__34987 = new cljs.core.IndexedSeq(G__34988__a, 0);
          }
          return G__34983__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__34987);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__34983.cljs$lang$maxFixedArity = 3;
    G__34983.cljs$lang$applyTo = G__34983__4.cljs$lang$applyTo;
    G__34983.cljs$core$IFn$_invoke$arity$0 = G__34983__0;
    G__34983.cljs$core$IFn$_invoke$arity$1 = G__34983__1;
    G__34983.cljs$core$IFn$_invoke$arity$2 = G__34983__2;
    G__34983.cljs$core$IFn$_invoke$arity$3 = G__34983__3;
    G__34983.cljs$core$IFn$_invoke$arity$variadic = G__34983__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__34983;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__34989 = null;
      var G__34989__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__34950_SHARP_, p2__34951_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34950_SHARP_, p2__34951_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__34951_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__34951_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__34989__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__34952_SHARP_, p2__34953_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34952_SHARP_, p2__34953_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__34953_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__34953_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__34989__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__34954_SHARP_, p2__34955_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34954_SHARP_, p2__34955_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__34955_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__34955_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__34989__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__34956_SHARP_, p2__34957_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34956_SHARP_, p2__34957_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__34957_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__34957_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__34989__4 = function() {
        var G__34990__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__34958_SHARP_, p2__34959_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__34958_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__34959_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__34990 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__34991__i = 0, G__34991__a = new Array(arguments.length - 3);
            while (G__34991__i < G__34991__a.length) {
              G__34991__a[G__34991__i] = arguments[G__34991__i + 3];
              ++G__34991__i;
            }
            args = new cljs.core.IndexedSeq(G__34991__a, 0);
          }
          return G__34990__delegate.call(this, x, y, z, args);
        };
        G__34990.cljs$lang$maxFixedArity = 3;
        G__34990.cljs$lang$applyTo = function(arglist__34992) {
          var x = cljs.core.first(arglist__34992);
          arglist__34992 = cljs.core.next(arglist__34992);
          var y = cljs.core.first(arglist__34992);
          arglist__34992 = cljs.core.next(arglist__34992);
          var z = cljs.core.first(arglist__34992);
          var args = cljs.core.rest(arglist__34992);
          return G__34990__delegate(x, y, z, args);
        };
        G__34990.cljs$core$IFn$_invoke$arity$variadic = G__34990__delegate;
        return G__34990;
      }();
      G__34989 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__34989__0.call(this);
          case 1:
            return G__34989__1.call(this, x);
          case 2:
            return G__34989__2.call(this, x, y);
          case 3:
            return G__34989__3.call(this, x, y, z);
          default:
            var G__34993 = null;
            if (arguments.length > 3) {
              var G__34994__i = 0, G__34994__a = new Array(arguments.length - 3);
              while (G__34994__i < G__34994__a.length) {
                G__34994__a[G__34994__i] = arguments[G__34994__i + 3];
                ++G__34994__i;
              }
              G__34993 = new cljs.core.IndexedSeq(G__34994__a, 0);
            }
            return G__34989__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__34993);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__34989.cljs$lang$maxFixedArity = 3;
      G__34989.cljs$lang$applyTo = G__34989__4.cljs$lang$applyTo;
      G__34989.cljs$core$IFn$_invoke$arity$0 = G__34989__0;
      G__34989.cljs$core$IFn$_invoke$arity$1 = G__34989__1;
      G__34989.cljs$core$IFn$_invoke$arity$2 = G__34989__2;
      G__34989.cljs$core$IFn$_invoke$arity$3 = G__34989__3;
      G__34989.cljs$core$IFn$_invoke$arity$variadic = G__34989__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__34989;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq34961) {
  var G__34962 = cljs.core.first(seq34961);
  var seq34961__$1 = cljs.core.next(seq34961);
  var G__34963 = cljs.core.first(seq34961__$1);
  var seq34961__$2 = cljs.core.next(seq34961__$1);
  var G__34964 = cljs.core.first(seq34961__$2);
  var seq34961__$3 = cljs.core.next(seq34961__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__34962, G__34963, G__34964, seq34961__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args34995 = [];
  var len__31204__auto___34998 = arguments.length;
  var i__31205__auto___34999 = 0;
  while (true) {
    if (i__31205__auto___34999 < len__31204__auto___34998) {
      args34995.push(arguments[i__31205__auto___34999]);
      var G__35000 = i__31205__auto___34999 + 1;
      i__31205__auto___34999 = G__35000;
      continue;
    } else {
    }
    break;
  }
  var G__34997 = args34995.length;
  switch(G__34997) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args34995.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__35002 = cljs.core.next(coll);
      coll = G__35002;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__35003 = n - 1;
      var G__35004 = cljs.core.next(coll);
      n = G__35003;
      coll = G__35004;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args35005 = [];
  var len__31204__auto___35008 = arguments.length;
  var i__31205__auto___35009 = 0;
  while (true) {
    if (i__31205__auto___35009 < len__31204__auto___35008) {
      args35005.push(arguments[i__31205__auto___35009]);
      var G__35010 = i__31205__auto___35009 + 1;
      i__31205__auto___35009 = G__35010;
      continue;
    } else {
    }
    break;
  }
  var G__35007 = args35005.length;
  switch(G__35007) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35005.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq.cljs$core$IFn$_invoke$arity$2(re, post_match) : cljs.core.re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__35015 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35015, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35015, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__30096__auto__ = flags;
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_35025 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__30096__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__30096__auto__)) {
              return or__30096__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__35026_35032 = cljs.core.first(coll);
          var G__35027_35033 = writer;
          var G__35028_35034 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35026_35032, G__35027_35033, G__35028_35034) : print_one.call(null, G__35026_35032, G__35027_35033, G__35028_35034);
        } else {
        }
        var coll_35035__$1 = cljs.core.next(coll);
        var n_35036 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_35035__$1 && (n_35036 == null || !(n_35036 === 0))) {
            cljs.core._write(writer, sep);
            var G__35029_35037 = cljs.core.first(coll_35035__$1);
            var G__35030_35038 = writer;
            var G__35031_35039 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35029_35037, G__35030_35038, G__35031_35039) : print_one.call(null, G__35029_35037, G__35030_35038, G__35031_35039);
            var G__35040 = cljs.core.next(coll_35035__$1);
            var G__35041 = n_35036 - 1;
            coll_35035__$1 = G__35040;
            n_35036 = G__35041;
            continue;
          } else {
            if (cljs.core.seq(coll_35035__$1) && n_35036 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__30096__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__30096__auto__)) {
                  return or__30096__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_35025;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35048 = arguments.length;
  var i__31205__auto___35049 = 0;
  while (true) {
    if (i__31205__auto___35049 < len__31204__auto___35048) {
      args__31211__auto__.push(arguments[i__31205__auto___35049]);
      var G__35050 = i__31205__auto___35049 + 1;
      i__31205__auto___35049 = G__35050;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__35044 = cljs.core.seq(ss);
  var chunk__35045 = null;
  var count__35046 = 0;
  var i__35047 = 0;
  while (true) {
    if (i__35047 < count__35046) {
      var s = chunk__35045.cljs$core$IIndexed$_nth$arity$2(null, i__35047);
      cljs.core._write(writer, s);
      var G__35051 = seq__35044;
      var G__35052 = chunk__35045;
      var G__35053 = count__35046;
      var G__35054 = i__35047 + 1;
      seq__35044 = G__35051;
      chunk__35045 = G__35052;
      count__35046 = G__35053;
      i__35047 = G__35054;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__35044);
      if (temp__4657__auto__) {
        var seq__35044__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__35044__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first(seq__35044__$1);
          var G__35055 = cljs.core.chunk_rest(seq__35044__$1);
          var G__35056 = c__30910__auto__;
          var G__35057 = cljs.core.count(c__30910__auto__);
          var G__35058 = 0;
          seq__35044 = G__35055;
          chunk__35045 = G__35056;
          count__35046 = G__35057;
          i__35047 = G__35058;
          continue;
        } else {
          var s = cljs.core.first(seq__35044__$1);
          cljs.core._write(writer, s);
          var G__35059 = cljs.core.next(seq__35044__$1);
          var G__35060 = null;
          var G__35061 = 0;
          var G__35062 = 0;
          seq__35044 = G__35059;
          chunk__35045 = G__35060;
          count__35046 = G__35061;
          i__35047 = G__35062;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq35042) {
  var G__35043 = cljs.core.first(seq35042);
  var seq35042__$1 = cljs.core.next(seq35042);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__35043, seq35042__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj35064 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj35064;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__30084__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__30084__auto__) {
    var and__30084__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false;
    if (and__30084__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__30084__auto____$1;
    }
  } else {
    return and__30084__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__35079_35087 = cljs.core.meta(obj);
      var G__35080_35088 = writer;
      var G__35081_35089 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__35079_35087, G__35080_35088, G__35081_35089) : cljs.core.pr_writer.call(null, G__35079_35087, G__35080_35088, G__35081_35089);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__35083 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__35084 = cljs.core.pr_writer;
            var G__35085 = writer;
            var G__35086 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__35083, G__35084, G__35085, G__35086) : cljs.core.print_map.call(null, G__35083, G__35084, G__35085, G__35086);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__30096__auto__ = name == null;
                    if (or__30096__auto__) {
                      return or__30096__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__35090 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__35090;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                      } else {
                        var name = obj.constructor.name;
                        var name__$1 = cljs.core.truth_(function() {
                          var or__30096__auto__ = name == null;
                          if (or__30096__auto__) {
                            return or__30096__auto__;
                          } else {
                            return goog.string.isEmpty(name);
                          }
                        }()) ? "Object" : name;
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__35094 = obj;
    var G__35095 = writer;
    var G__35096 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__35094, G__35095, G__35096) : alt_impl.call(null, G__35094, G__35095, G__35096);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__35101 = cljs.core.seq(cljs.core.next(objs));
  var chunk__35102 = null;
  var count__35103 = 0;
  var i__35104 = 0;
  while (true) {
    if (i__35104 < count__35103) {
      var obj = chunk__35102.cljs$core$IIndexed$_nth$arity$2(null, i__35104);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__35105 = seq__35101;
      var G__35106 = chunk__35102;
      var G__35107 = count__35103;
      var G__35108 = i__35104 + 1;
      seq__35101 = G__35105;
      chunk__35102 = G__35106;
      count__35103 = G__35107;
      i__35104 = G__35108;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__35101);
      if (temp__4657__auto__) {
        var seq__35101__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__35101__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first(seq__35101__$1);
          var G__35109 = cljs.core.chunk_rest(seq__35101__$1);
          var G__35110 = c__30910__auto__;
          var G__35111 = cljs.core.count(c__30910__auto__);
          var G__35112 = 0;
          seq__35101 = G__35109;
          chunk__35102 = G__35110;
          count__35103 = G__35111;
          i__35104 = G__35112;
          continue;
        } else {
          var obj = cljs.core.first(seq__35101__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__35113 = cljs.core.next(seq__35101__$1);
          var G__35114 = null;
          var G__35115 = 0;
          var G__35116 = 0;
          seq__35101 = G__35113;
          chunk__35102 = G__35114;
          count__35103 = G__35115;
          i__35104 = G__35116;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args35117 = [];
  var len__31204__auto___35120 = arguments.length;
  var i__31205__auto___35121 = 0;
  while (true) {
    if (i__31205__auto___35121 < len__31204__auto___35120) {
      args35117.push(arguments[i__31205__auto___35121]);
      var G__35122 = i__31205__auto___35121 + 1;
      i__31205__auto___35121 = G__35122;
      continue;
    } else {
    }
    break;
  }
  var G__35119 = args35117.length;
  switch(G__35119) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35117.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35125 = arguments.length;
  var i__31205__auto___35126 = 0;
  while (true) {
    if (i__31205__auto___35126 < len__31204__auto___35125) {
      args__31211__auto__.push(arguments[i__31205__auto___35126]);
      var G__35127 = i__31205__auto___35126 + 1;
      i__31205__auto___35126 = G__35127;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq35124) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35124));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35129 = arguments.length;
  var i__31205__auto___35130 = 0;
  while (true) {
    if (i__31205__auto___35130 < len__31204__auto___35129) {
      args__31211__auto__.push(arguments[i__31205__auto___35130]);
      var G__35131 = i__31205__auto___35130 + 1;
      i__31205__auto___35130 = G__35131;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq35128) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35128));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35133 = arguments.length;
  var i__31205__auto___35134 = 0;
  while (true) {
    if (i__31205__auto___35134 < len__31204__auto___35133) {
      args__31211__auto__.push(arguments[i__31205__auto___35134]);
      var G__35135 = i__31205__auto___35134 + 1;
      i__31205__auto___35134 = G__35135;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq35132) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35132));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__35136__i = 0, G__35136__a = new Array(arguments.length - 0);
      while (G__35136__i < G__35136__a.length) {
        G__35136__a[G__35136__i] = arguments[G__35136__i + 0];
        ++G__35136__i;
      }
      objs = new cljs.core.IndexedSeq(G__35136__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__35137) {
    var objs = cljs.core.seq(arglist__35137);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35139 = arguments.length;
  var i__31205__auto___35140 = 0;
  while (true) {
    if (i__31205__auto___35140 < len__31204__auto___35139) {
      args__31211__auto__.push(arguments[i__31205__auto___35140]);
      var G__35141 = i__31205__auto___35140 + 1;
      i__31205__auto___35140 = G__35141;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq35138) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35138));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35143 = arguments.length;
  var i__31205__auto___35144 = 0;
  while (true) {
    if (i__31205__auto___35144 < len__31204__auto___35143) {
      args__31211__auto__.push(arguments[i__31205__auto___35144]);
      var G__35145 = i__31205__auto___35144 + 1;
      i__31205__auto___35144 = G__35145;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq35142) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35142));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35147 = arguments.length;
  var i__31205__auto___35148 = 0;
  while (true) {
    if (i__31205__auto___35148 < len__31204__auto___35147) {
      args__31211__auto__.push(arguments[i__31205__auto___35148]);
      var G__35149 = i__31205__auto___35148 + 1;
      i__31205__auto___35148 = G__35149;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq35146) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35146));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35151 = arguments.length;
  var i__31205__auto___35152 = 0;
  while (true) {
    if (i__31205__auto___35152 < len__31204__auto___35151) {
      args__31211__auto__.push(arguments[i__31205__auto___35152]);
      var G__35153 = i__31205__auto___35152 + 1;
      i__31205__auto___35152 = G__35153;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq35150) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35150));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__35160_35166 = cljs.core.key(e);
    var G__35161_35167 = w;
    var G__35162_35168 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35160_35166, G__35161_35167, G__35162_35168) : print_one.call(null, G__35160_35166, G__35161_35167, G__35162_35168);
    cljs.core._write(w, " ");
    var G__35163 = cljs.core.val(e);
    var G__35164 = w;
    var G__35165 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35163, G__35164, G__35165) : print_one.call(null, G__35163, G__35164, G__35165);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35172 = arguments.length;
  var i__31205__auto___35173 = 0;
  while (true) {
    if (i__31205__auto___35173 < len__31204__auto___35172) {
      args__31211__auto__.push(arguments[i__31205__auto___35173]);
      var G__35174 = i__31205__auto___35173 + 1;
      i__31205__auto___35173 = G__35174;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 2 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31212__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq35169) {
  var G__35170 = cljs.core.first(seq35169);
  var seq35169__$1 = cljs.core.next(seq35169);
  var G__35171 = cljs.core.first(seq35169__$1);
  var seq35169__$2 = cljs.core.next(seq35169__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__35170, G__35171, seq35169__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args35175 = [];
  var len__31204__auto___35178 = arguments.length;
  var i__31205__auto___35179 = 0;
  while (true) {
    if (i__31205__auto___35179 < len__31204__auto___35178) {
      args35175.push(arguments[i__31205__auto___35179]);
      var G__35180 = i__31205__auto___35179 + 1;
      i__31205__auto___35179 = G__35180;
      continue;
    } else {
    }
    break;
  }
  var G__35177 = args35175.length;
  switch(G__35177) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35175.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__35182_SHARP_, p2__35183_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__35182_SHARP_, p2__35183_SHARP_) : rf.call(null, p1__35182_SHARP_, p2__35183_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__35184 = null;
      var G__35184__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__35184__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__35184__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__35184 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__35184__0.call(this);
          case 1:
            return G__35184__1.call(this, result);
          case 2:
            return G__35184__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__35184.cljs$core$IFn$_invoke$arity$0 = G__35184__0;
      G__35184.cljs$core$IFn$_invoke$arity$1 = G__35184__1;
      G__35184.cljs$core$IFn$_invoke$arity$2 = G__35184__2;
      return G__35184;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args35185 = [];
  var len__31204__auto___35188 = arguments.length;
  var i__31205__auto___35189 = 0;
  while (true) {
    if (i__31205__auto___35189 < len__31204__auto___35188) {
      args35185.push(arguments[i__31205__auto___35189]);
      var G__35190 = i__31205__auto___35189 + 1;
      i__31205__auto___35189 = G__35190;
      continue;
    } else {
    }
    break;
  }
  var G__35187 = args35185.length;
  switch(G__35187) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35185.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__35192 = null;
        var G__35192__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__35192__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__35192__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__35192 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__35192__0.call(this);
            case 1:
              return G__35192__1.call(this, result);
            case 2:
              return G__35192__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__35192.cljs$core$IFn$_invoke$arity$0 = G__35192__0;
        G__35192.cljs$core$IFn$_invoke$arity$1 = G__35192__1;
        G__35192.cljs$core$IFn$_invoke$arity$2 = G__35192__2;
        return G__35192;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args35193 = [];
  var len__31204__auto___35196 = arguments.length;
  var i__31205__auto___35197 = 0;
  while (true) {
    if (i__31205__auto___35197 < len__31204__auto___35196) {
      args35193.push(arguments[i__31205__auto___35197]);
      var G__35198 = i__31205__auto___35197 + 1;
      i__31205__auto___35197 = G__35198;
      continue;
    } else {
    }
    break;
  }
  var G__35195 = args35193.length;
  switch(G__35195) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35193.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__35200 = null;
  var G__35200__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__35200__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__35200 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35200__1.call(this, x);
      case 2:
        return G__35200__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35200.cljs$core$IFn$_invoke$arity$1 = G__35200__1;
  G__35200.cljs$core$IFn$_invoke$arity$2 = G__35200__2;
  return G__35200;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__35201 = null;
  var G__35201__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__35201__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__35201 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__35201__1.call(this, x);
      case 2:
        return G__35201__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35201.cljs$core$IFn$_invoke$arity$1 = G__35201__1;
  G__35201.cljs$core$IFn$_invoke$arity$2 = G__35201__2;
  return G__35201;
}();
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__31105__auto__ = this;
  return cljs.core.es6_iterator(this__31105__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35203 = arguments.length;
  var i__31205__auto___35204 = 0;
  while (true) {
    if (i__31205__auto___35204 < len__31204__auto___35203) {
      args__31211__auto__.push(arguments[i__31205__auto___35204]);
      var G__35205 = i__31205__auto___35204 + 1;
      i__31205__auto___35204 = G__35205;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq35202) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq35202));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__35207_SHARP_, p2__35206_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__35206_SHARP_) : proc.call(null, p2__35206_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto__.call(null, x);
    } else {
      var m__30760__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = cljs.core._key__GT_js[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto__.call(null, x);
    } else {
      var m__30760__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__30760__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__35230_35244 = cljs.core.seq(x);
            var chunk__35231_35245 = null;
            var count__35232_35246 = 0;
            var i__35233_35247 = 0;
            while (true) {
              if (i__35233_35247 < count__35232_35246) {
                var vec__35234_35248 = chunk__35231_35245.cljs$core$IIndexed$_nth$arity$2(null, i__35233_35247);
                var k_35249 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35234_35248, 0, null);
                var v_35250 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35234_35248, 1, null);
                m[cljs.core.key__GT_js(k_35249)] = cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(v_35250) : cljs.core.clj__GT_js.call(null, v_35250);
                var G__35251 = seq__35230_35244;
                var G__35252 = chunk__35231_35245;
                var G__35253 = count__35232_35246;
                var G__35254 = i__35233_35247 + 1;
                seq__35230_35244 = G__35251;
                chunk__35231_35245 = G__35252;
                count__35232_35246 = G__35253;
                i__35233_35247 = G__35254;
                continue;
              } else {
                var temp__4657__auto___35255 = cljs.core.seq(seq__35230_35244);
                if (temp__4657__auto___35255) {
                  var seq__35230_35256__$1 = temp__4657__auto___35255;
                  if (cljs.core.chunked_seq_QMARK_(seq__35230_35256__$1)) {
                    var c__30910__auto___35257 = cljs.core.chunk_first(seq__35230_35256__$1);
                    var G__35258 = cljs.core.chunk_rest(seq__35230_35256__$1);
                    var G__35259 = c__30910__auto___35257;
                    var G__35260 = cljs.core.count(c__30910__auto___35257);
                    var G__35261 = 0;
                    seq__35230_35244 = G__35258;
                    chunk__35231_35245 = G__35259;
                    count__35232_35246 = G__35260;
                    i__35233_35247 = G__35261;
                    continue;
                  } else {
                    var vec__35237_35262 = cljs.core.first(seq__35230_35256__$1);
                    var k_35263 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35237_35262, 0, null);
                    var v_35264 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35237_35262, 1, null);
                    m[cljs.core.key__GT_js(k_35263)] = cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(v_35264) : cljs.core.clj__GT_js.call(null, v_35264);
                    var G__35265 = cljs.core.next(seq__35230_35256__$1);
                    var G__35266 = null;
                    var G__35267 = 0;
                    var G__35268 = 0;
                    seq__35230_35244 = G__35265;
                    chunk__35231_35245 = G__35266;
                    count__35232_35246 = G__35267;
                    i__35233_35247 = G__35268;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__35240_35269 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.clj__GT_js, x));
              var chunk__35241_35270 = null;
              var count__35242_35271 = 0;
              var i__35243_35272 = 0;
              while (true) {
                if (i__35243_35272 < count__35242_35271) {
                  var x_35273__$1 = chunk__35241_35270.cljs$core$IIndexed$_nth$arity$2(null, i__35243_35272);
                  arr.push(x_35273__$1);
                  var G__35274 = seq__35240_35269;
                  var G__35275 = chunk__35241_35270;
                  var G__35276 = count__35242_35271;
                  var G__35277 = i__35243_35272 + 1;
                  seq__35240_35269 = G__35274;
                  chunk__35241_35270 = G__35275;
                  count__35242_35271 = G__35276;
                  i__35243_35272 = G__35277;
                  continue;
                } else {
                  var temp__4657__auto___35278 = cljs.core.seq(seq__35240_35269);
                  if (temp__4657__auto___35278) {
                    var seq__35240_35279__$1 = temp__4657__auto___35278;
                    if (cljs.core.chunked_seq_QMARK_(seq__35240_35279__$1)) {
                      var c__30910__auto___35280 = cljs.core.chunk_first(seq__35240_35279__$1);
                      var G__35281 = cljs.core.chunk_rest(seq__35240_35279__$1);
                      var G__35282 = c__30910__auto___35280;
                      var G__35283 = cljs.core.count(c__30910__auto___35280);
                      var G__35284 = 0;
                      seq__35240_35269 = G__35281;
                      chunk__35241_35270 = G__35282;
                      count__35242_35271 = G__35283;
                      i__35243_35272 = G__35284;
                      continue;
                    } else {
                      var x_35285__$1 = cljs.core.first(seq__35240_35279__$1);
                      arr.push(x_35285__$1);
                      var G__35286 = cljs.core.next(seq__35240_35279__$1);
                      var G__35287 = null;
                      var G__35288 = 0;
                      var G__35289 = 0;
                      seq__35240_35269 = G__35286;
                      chunk__35241_35270 = G__35287;
                      count__35242_35271 = G__35288;
                      i__35243_35272 = G__35289;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__30760__auto__.call(null, x, options);
    } else {
      var m__30760__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__30760__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args35290 = [];
  var len__31204__auto___35315 = arguments.length;
  var i__31205__auto___35316 = 0;
  while (true) {
    if (i__31205__auto___35316 < len__31204__auto___35315) {
      args35290.push(arguments[i__31205__auto___35316]);
      var G__35317 = i__31205__auto___35316 + 1;
      i__31205__auto___35316 = G__35317;
      continue;
    } else {
    }
    break;
  }
  var G__35294 = args35290.length;
  switch(G__35294) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args35290.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31223__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__35295 = opts;
  var map__35295__$1 = (!(map__35295 == null) ? map__35295.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__35295.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__35295) : map__35295;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35295__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__35295, map__35295__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__30879__auto__ = function(map__35295, map__35295__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__35309(s__35310) {
                      return new cljs.core.LazySeq(null, function(map__35295, map__35295__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__35310__$1 = s__35310;
                          while (true) {
                            var temp__4657__auto__ = cljs.core.seq(s__35310__$1);
                            if (temp__4657__auto__) {
                              var s__35310__$2 = temp__4657__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__35310__$2)) {
                                var c__30877__auto__ = cljs.core.chunk_first(s__35310__$2);
                                var size__30878__auto__ = cljs.core.count(c__30877__auto__);
                                var b__35312 = cljs.core.chunk_buffer(size__30878__auto__);
                                if (function() {
                                  var i__35311 = 0;
                                  while (true) {
                                    if (i__35311 < size__30878__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__30877__auto__, i__35311);
                                      cljs.core.chunk_append(b__35312, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__35319 = i__35311 + 1;
                                      i__35311 = G__35319;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__35312), cljs$core$thisfn_$_iter__35309(cljs.core.chunk_rest(s__35310__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__35312), null);
                                }
                              } else {
                                var k = cljs.core.first(s__35310__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__35309(cljs.core.rest(s__35310__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__35295, map__35295__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__35295, map__35295__$1, keywordize_keys, keyfn);
                  return iter__30879__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__35295, map__35295__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq35291) {
  var G__35292 = cljs.core.first(seq35291);
  var seq35291__$1 = cljs.core.next(seq35291);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__35292, seq35291__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__35321 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35321) : cljs.core.atom.call(null, G__35321);
  }();
  return function(mem) {
    return function() {
      var G__35322__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__35322 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__35323__i = 0, G__35323__a = new Array(arguments.length - 0);
          while (G__35323__i < G__35323__a.length) {
            G__35323__a[G__35323__i] = arguments[G__35323__i + 0];
            ++G__35323__i;
          }
          args = new cljs.core.IndexedSeq(G__35323__a, 0);
        }
        return G__35322__delegate.call(this, args);
      };
      G__35322.cljs$lang$maxFixedArity = 0;
      G__35322.cljs$lang$applyTo = function(arglist__35324) {
        var args = cljs.core.seq(arglist__35324);
        return G__35322__delegate(args);
      };
      G__35322.cljs$core$IFn$_invoke$arity$variadic = G__35322__delegate;
      return G__35322;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args35325 = [];
  var len__31204__auto___35330 = arguments.length;
  var i__31205__auto___35331 = 0;
  while (true) {
    if (i__31205__auto___35331 < len__31204__auto___35330) {
      args35325.push(arguments[i__31205__auto___35331]);
      var G__35332 = i__31205__auto___35331 + 1;
      i__31205__auto___35331 = G__35332;
      continue;
    } else {
    }
    break;
  }
  var G__35329 = args35325.length;
  switch(G__35329) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args35325.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31223__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__35334 = ret;
      f = G__35334;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq35326) {
  var G__35327 = cljs.core.first(seq35326);
  var seq35326__$1 = cljs.core.next(seq35326);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__35327, seq35326__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args35335 = [];
  var len__31204__auto___35338 = arguments.length;
  var i__31205__auto___35339 = 0;
  while (true) {
    if (i__31205__auto___35339 < len__31204__auto___35338) {
      args35335.push(arguments[i__31205__auto___35339]);
      var G__35340 = i__31205__auto___35339 + 1;
      i__31205__auto___35339 = G__35340;
      continue;
    } else {
    }
    break;
  }
  var G__35337 = args35335.length;
  switch(G__35337) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35335.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__35343 = Math.random() * n;
  return Math.floor(G__35343);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__35345 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35345) : cljs.core.atom.call(null, G__35345);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___35348 = arguments.length;
  var i__31205__auto___35349 = 0;
  while (true) {
    if (i__31205__auto___35349 < len__31204__auto___35348) {
      args__31211__auto__.push(arguments[i__31205__auto___35349]);
      var G__35350 = i__31205__auto___35349 + 1;
      i__31205__auto___35349 = G__35350;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq35346) {
  var G__35347 = cljs.core.first(seq35346);
  var seq35346__$1 = cljs.core.next(seq35346);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__35347, seq35346__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args35351 = [];
  var len__31204__auto___35355 = arguments.length;
  var i__31205__auto___35356 = 0;
  while (true) {
    if (i__31205__auto___35356 < len__31204__auto___35355) {
      args35351.push(arguments[i__31205__auto___35356]);
      var G__35357 = i__31205__auto___35356 + 1;
      i__31205__auto___35356 = G__35357;
      continue;
    } else {
    }
    break;
  }
  var G__35353 = args35351.length;
  switch(G__35353) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35351.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__35354 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35354) : cljs.core.deref.call(null, G__35354);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__30096__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__30096__auto__) {
    return or__30096__auto__;
  } else {
    var or__30096__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__30096__auto____$1) {
      return or__30096__auto____$1;
    } else {
      var and__30084__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__30084__auto__) {
        var and__30084__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__30084__auto____$1) {
          var and__30084__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__30084__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__35359 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__35360 = i + 1;
                ret = G__35359;
                i = G__35360;
                continue;
              }
              break;
            }
          } else {
            return and__30084__auto____$2;
          }
        } else {
          return and__30084__auto____$1;
        }
      } else {
        return and__30084__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args35361 = [];
  var len__31204__auto___35365 = arguments.length;
  var i__31205__auto___35366 = 0;
  while (true) {
    if (i__31205__auto___35366 < len__31204__auto___35365) {
      args35361.push(arguments[i__31205__auto___35366]);
      var G__35367 = i__31205__auto___35366 + 1;
      i__31205__auto___35366 = G__35367;
      continue;
    } else {
    }
    break;
  }
  var G__35363 = args35361.length;
  switch(G__35363) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35361.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__35364 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35364) : cljs.core.deref.call(null, G__35364);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args35369 = [];
  var len__31204__auto___35373 = arguments.length;
  var i__31205__auto___35374 = 0;
  while (true) {
    if (i__31205__auto___35374 < len__31204__auto___35373) {
      args35369.push(arguments[i__31205__auto___35374]);
      var G__35375 = i__31205__auto___35374 + 1;
      i__31205__auto___35374 = G__35375;
      continue;
    } else {
    }
    break;
  }
  var G__35371 = args35369.length;
  switch(G__35371) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35369.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__35372 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35372) : cljs.core.deref.call(null, G__35372);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args35377 = [];
  var len__31204__auto___35381 = arguments.length;
  var i__31205__auto___35382 = 0;
  while (true) {
    if (i__31205__auto___35382 < len__31204__auto___35381) {
      args35377.push(arguments[i__31205__auto___35382]);
      var G__35383 = i__31205__auto___35382 + 1;
      i__31205__auto___35382 = G__35383;
      continue;
    } else {
    }
    break;
  }
  var G__35379 = args35377.length;
  switch(G__35379) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35377.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__35380 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35380) : cljs.core.deref.call(null, G__35380);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args35385 = [];
  var len__31204__auto___35388 = arguments.length;
  var i__31205__auto___35389 = 0;
  while (true) {
    if (i__31205__auto___35389 < len__31204__auto___35388) {
      args35385.push(arguments[i__31205__auto___35389]);
      var G__35390 = i__31205__auto___35389 + 1;
      i__31205__auto___35389 = G__35390;
      continue;
    } else {
    }
    break;
  }
  var G__35387 = args35385.length;
  switch(G__35387) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35385.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__30096__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__30096__auto__)) {
    return or__30096__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args35395 = [];
  var len__31204__auto___35398 = arguments.length;
  var i__31205__auto___35399 = 0;
  while (true) {
    if (i__31205__auto___35399 < len__31204__auto___35398) {
      args35395.push(arguments[i__31205__auto___35399]);
      var G__35400 = i__31205__auto___35399 + 1;
      i__31205__auto___35399 = G__35400;
      continue;
    } else {
    }
    break;
  }
  var G__35397 = args35395.length;
  switch(G__35397) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35395.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__35392_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__35392_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__35392_SHARP_), cljs.core.second(p1__35392_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__35393_SHARP_, p2__35394_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__35393_SHARP_, p2__35394_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__30096__auto__ = cljs.core.truth_(function() {
    var and__30084__auto__ = xprefs;
    if (cljs.core.truth_(and__30084__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__30084__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__30096__auto__)) {
    return or__30096__auto__;
  } else {
    var or__30096__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__35417 = x;
            var G__35418 = cljs.core.first(ps);
            var G__35419 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__35417, G__35418, G__35419) : cljs.core.prefers_STAR_.call(null, G__35417, G__35418, G__35419);
          }())) {
          } else {
          }
          var G__35426 = cljs.core.rest(ps);
          ps = G__35426;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__30096__auto____$1)) {
      return or__30096__auto____$1;
    } else {
      var or__30096__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__35423 = cljs.core.first(ps);
              var G__35424 = y;
              var G__35425 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__35423, G__35424, G__35425) : cljs.core.prefers_STAR_.call(null, G__35423, G__35424, G__35425);
            }())) {
            } else {
            }
            var G__35427 = cljs.core.rest(ps);
            ps = G__35427;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__30096__auto____$2)) {
        return or__30096__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__30096__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__30096__auto__)) {
    return or__30096__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__35432) {
    var vec__35433 = p__35432;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35433, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35433, 1, null);
    var e = vec__35433;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__30096__auto__ = be == null;
        if (or__30096__auto__) {
          return or__30096__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy));
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy)))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$7 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$7(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._reset[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto__.call(null, mf);
    } else {
      var m__30760__auto____$1 = cljs.core._reset["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._add_method[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__30760__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__30760__auto____$1 = cljs.core._add_method["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__30760__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._remove_method[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__30760__auto__.call(null, mf, dispatch_val);
    } else {
      var m__30760__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__30760__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._prefer_method[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__30760__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__30760__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__30760__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._get_method[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__30760__auto__.call(null, mf, dispatch_val);
    } else {
      var m__30760__auto____$1 = cljs.core._get_method["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__30760__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._methods[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto__.call(null, mf);
    } else {
      var m__30760__auto____$1 = cljs.core._methods["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._prefers[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto__.call(null, mf);
    } else {
      var m__30760__auto____$1 = cljs.core._prefers["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto__.call(null, mf);
    } else {
      var m__30760__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__30759__auto__ = mf == null ? null : mf;
    var m__30760__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto__.call(null, mf);
    } else {
      var m__30760__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__30760__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__30760__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__35437 = null;
  var G__35437__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__35437__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__35437__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__35437__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__35437__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__35437__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__35437__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__35437__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__35437__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__35437__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__35437__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__35437__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__35437__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__35437__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__35437__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__35437__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__35437__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__35437__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__35437__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__35437__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__35437__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__35437__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__35437 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__35437__1.call(this, self__);
      case 2:
        return G__35437__2.call(this, self__, a);
      case 3:
        return G__35437__3.call(this, self__, a, b);
      case 4:
        return G__35437__4.call(this, self__, a, b, c);
      case 5:
        return G__35437__5.call(this, self__, a, b, c, d);
      case 6:
        return G__35437__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__35437__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__35437__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__35437__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__35437__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__35437__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__35437__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__35437__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__35437__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__35437__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__35437__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__35437__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__35437__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__35437__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__35437__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__35437__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__35437__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__35437.cljs$core$IFn$_invoke$arity$1 = G__35437__1;
  G__35437.cljs$core$IFn$_invoke$arity$2 = G__35437__2;
  G__35437.cljs$core$IFn$_invoke$arity$3 = G__35437__3;
  G__35437.cljs$core$IFn$_invoke$arity$4 = G__35437__4;
  G__35437.cljs$core$IFn$_invoke$arity$5 = G__35437__5;
  G__35437.cljs$core$IFn$_invoke$arity$6 = G__35437__6;
  G__35437.cljs$core$IFn$_invoke$arity$7 = G__35437__7;
  G__35437.cljs$core$IFn$_invoke$arity$8 = G__35437__8;
  G__35437.cljs$core$IFn$_invoke$arity$9 = G__35437__9;
  G__35437.cljs$core$IFn$_invoke$arity$10 = G__35437__10;
  G__35437.cljs$core$IFn$_invoke$arity$11 = G__35437__11;
  G__35437.cljs$core$IFn$_invoke$arity$12 = G__35437__12;
  G__35437.cljs$core$IFn$_invoke$arity$13 = G__35437__13;
  G__35437.cljs$core$IFn$_invoke$arity$14 = G__35437__14;
  G__35437.cljs$core$IFn$_invoke$arity$15 = G__35437__15;
  G__35437.cljs$core$IFn$_invoke$arity$16 = G__35437__16;
  G__35437.cljs$core$IFn$_invoke$arity$17 = G__35437__17;
  G__35437.cljs$core$IFn$_invoke$arity$18 = G__35437__18;
  G__35437.cljs$core$IFn$_invoke$arity$19 = G__35437__19;
  G__35437.cljs$core$IFn$_invoke$arity$20 = G__35437__20;
  G__35437.cljs$core$IFn$_invoke$arity$21 = G__35437__21;
  G__35437.cljs$core$IFn$_invoke$arity$22 = G__35437__22;
  return G__35437;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args35436) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args35436)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    var temp__4655__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var target_fn = temp__4655__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__35438 = self__.uuid;
  var G__35439 = other.uuid;
  return goog.array.defaultCompare(G__35438, G__35439);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args35442 = [];
  var len__31204__auto___35445 = arguments.length;
  var i__31205__auto___35446 = 0;
  while (true) {
    if (i__31205__auto___35446 < len__31204__auto___35445) {
      args35442.push(arguments[i__31205__auto___35446]);
      var G__35447 = i__31205__auto___35446 + 1;
      i__31205__auto___35446 = G__35447;
      continue;
    } else {
    }
    break;
  }
  var G__35444 = args35442.length;
  switch(G__35444) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35442.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 23, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, 
  "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, 
  null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, 
  "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__35449 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__35449) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__35451_SHARP_, p2__35452_SHARP_) {
      goog.object.set(p1__35451_SHARP_, p2__35452_SHARP_, true);
      return p1__35451_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__35455 = cljs.core.next(ks__$1);
          var G__35456 = [cljs.core.str(function() {
            var G__35454 = ret;
            if (!(ret === "")) {
              return [cljs.core.str(G__35454), cljs.core.str("|")].join("");
            } else {
              return G__35454;
            }
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__35455;
          ret = G__35456;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_35457 = 0;
  while (true) {
    if (i_35457 < name.length) {
      var c_35458 = name.charAt(i_35457);
      var sub_35459 = goog.object.get(cljs.core.CHAR_MAP, c_35458);
      if (!(sub_35459 == null)) {
        sb.append(sub_35459);
      } else {
        sb.append(c_35458);
      }
      var G__35460 = i_35457 + 1;
      i_35457 = G__35460;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__35464 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35464, 0, null);
      var G__35467 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__35468 = r.lastIndex;
      ret = G__35467;
      last_match_end = G__35468;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write(writer__30703__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__35473 = function() {
          var G__35471 = ctxt;
          var G__35472 = cljs.core.first(xs);
          return goog.object.get(G__35471, G__35472);
        }();
        var G__35474 = cljs.core.next(xs);
        ctxt = G__35473;
        xs = G__35474;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__35478 = cljs.core._STAR_target_STAR_;
  switch(G__35478) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__35480 = cljs.core.first(segs);
            return eval(G__35480);
          } catch (e35479) {
            if (e35479 instanceof ReferenceError) {
              var e = e35479;
              return null;
            } else {
              throw e35479;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args35482 = [];
  var len__31204__auto___35485 = arguments.length;
  var i__31205__auto___35486 = 0;
  while (true) {
    if (i__31205__auto___35486 < len__31204__auto___35485) {
      args35482.push(arguments[i__31205__auto___35486]);
      var G__35487 = i__31205__auto___35486 + 1;
      i__31205__auto___35486 = G__35487;
      continue;
    } else {
    }
    break;
  }
  var G__35484 = args35482.length;
  switch(G__35484) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35482.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__35490 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35490) : cljs.core.atom.call(null, G__35490);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__35492 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35492) : cljs.core.atom.call(null, G__35492);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("rum.cursor");
goog.require("cljs.core");
rum.cursor.Cursor = function(ref, path, meta) {
  this.ref = ref;
  this.path = path;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
rum.cursor.Cursor.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return cljs.core._equiv.call(null, this$, other);
};
rum.cursor.Cursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core._write.call(null, writer, "#object [rum.cursor.Cursor ");
  cljs.core.pr_writer.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core._deref.call(null, this$__$1)], null), writer, opts);
  return cljs.core._write.call(null, writer, "]");
};
rum.cursor.Cursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
rum.cursor.Cursor.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
rum.cursor.Cursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1 === other;
};
rum.cursor.Cursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(_, newv) {
  var self__ = this;
  var ___$1 = this;
  cljs.core.swap_BANG_.call(null, self__.ref, cljs.core.assoc_in, self__.path, newv);
  return newv;
};
rum.cursor.Cursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(this$, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reset_BANG_.call(null, this$__$1, f.call(null, cljs.core._deref.call(null, this$__$1)));
};
rum.cursor.Cursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(this$, f, a) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reset_BANG_.call(null, this$__$1, f.call(null, cljs.core._deref.call(null, this$__$1), a));
};
rum.cursor.Cursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(this$, f, a, b) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reset_BANG_.call(null, this$__$1, f.call(null, cljs.core._deref.call(null, this$__$1), a, b));
};
rum.cursor.Cursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(this$, f, a, b, rest) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reset_BANG_.call(null, this$__$1, cljs.core.apply.call(null, f, cljs.core._deref.call(null, this$__$1), a, b, rest));
};
rum.cursor.Cursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, callback) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.add_watch.call(null, self__.ref, function() {
    var x__30933__auto__ = this$__$1;
    return cljs.core._conj.call(null, function() {
      var x__30933__auto____$1 = key;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__30933__auto____$1);
    }(), x__30933__auto__);
  }(), function(this$__$1) {
    return function(_, ___$1, oldv, newv) {
      var old = cljs.core.get_in.call(null, oldv, self__.path);
      var new$ = cljs.core.get_in.call(null, newv, self__.path);
      if (cljs.core.not_EQ_.call(null, old, new$)) {
        return callback.call(null, key, this$__$1, old, new$);
      } else {
        return null;
      }
    };
  }(this$__$1));
  return this$__$1;
};
rum.cursor.Cursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.remove_watch.call(null, self__.ref, function() {
    var x__30933__auto__ = this$__$1;
    return cljs.core._conj.call(null, function() {
      var x__30933__auto____$1 = key;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__30933__auto____$1);
    }(), x__30933__auto__);
  }());
  return this$__$1;
};
rum.cursor.Cursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.get_in.call(null, cljs.core._deref.call(null, self__.ref), self__.path);
};
rum.cursor.Cursor.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ref", "ref", -1364538802, null), new cljs.core.Symbol(null, "path", "path", 1452340359, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
rum.cursor.Cursor.cljs$lang$type = true;
rum.cursor.Cursor.cljs$lang$ctorStr = "rum.cursor/Cursor";
rum.cursor.Cursor.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "rum.cursor/Cursor");
};
rum.cursor.__GT_Cursor = function rum$cursor$__GT_Cursor(ref, path, meta) {
  return new rum.cursor.Cursor(ref, path, meta);
};
goog.provide("rum.derived_atom");
goog.require("cljs.core");
rum.derived_atom.derived_atom = function rum$derived_atom$derived_atom(var_args) {
  var args39975 = [];
  var len__31204__auto___39995 = arguments.length;
  var i__31205__auto___39996 = 0;
  while (true) {
    if (i__31205__auto___39996 < len__31204__auto___39995) {
      args39975.push(arguments[i__31205__auto___39996]);
      var G__39997 = i__31205__auto___39996 + 1;
      i__31205__auto___39996 = G__39997;
      continue;
    } else {
    }
    break;
  }
  var G__39977 = args39975.length;
  switch(G__39977) {
    case 3:
      return rum.derived_atom.derived_atom.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return rum.derived_atom.derived_atom.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39975.length)].join(""));;
  }
};
rum.derived_atom.derived_atom.cljs$core$IFn$_invoke$arity$3 = function(refs, key, f) {
  return rum.derived_atom.derived_atom.call(null, refs, key, f, cljs.core.PersistentArrayMap.EMPTY);
};
rum.derived_atom.derived_atom.cljs$core$IFn$_invoke$arity$4 = function(refs, key, f, opts) {
  var map__39978 = opts;
  var map__39978__$1 = (!(map__39978 == null) ? map__39978.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39978.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39978) : map__39978;
  var ref = cljs.core.get.call(null, map__39978__$1, new cljs.core.Keyword(null, "ref", "ref", 1289896967));
  var check_equals_QMARK_ = cljs.core.get.call(null, map__39978__$1, new cljs.core.Keyword(null, "check-equals?", "check-equals?", -2005755315), true);
  var recalc = function() {
    var G__39980 = cljs.core.count.call(null, refs);
    switch(G__39980) {
      case 1:
        var vec__39981 = refs;
        var a = cljs.core.nth.call(null, vec__39981, 0, null);
        return function(vec__39981, a, G__39980, map__39978, map__39978__$1, ref, check_equals_QMARK_) {
          return function() {
            return f.call(null, cljs.core.deref.call(null, a));
          };
        }(vec__39981, a, G__39980, map__39978, map__39978__$1, ref, check_equals_QMARK_);
        break;
      case 2:
        var vec__39984 = refs;
        var a = cljs.core.nth.call(null, vec__39984, 0, null);
        var b = cljs.core.nth.call(null, vec__39984, 1, null);
        return function(vec__39984, a, b, G__39980, map__39978, map__39978__$1, ref, check_equals_QMARK_) {
          return function() {
            return f.call(null, cljs.core.deref.call(null, a), cljs.core.deref.call(null, b));
          };
        }(vec__39984, a, b, G__39980, map__39978, map__39978__$1, ref, check_equals_QMARK_);
        break;
      case 3:
        var vec__39987 = refs;
        var a = cljs.core.nth.call(null, vec__39987, 0, null);
        var b = cljs.core.nth.call(null, vec__39987, 1, null);
        var c = cljs.core.nth.call(null, vec__39987, 2, null);
        return function(vec__39987, a, b, c, G__39980, map__39978, map__39978__$1, ref, check_equals_QMARK_) {
          return function() {
            return f.call(null, cljs.core.deref.call(null, a), cljs.core.deref.call(null, b), cljs.core.deref.call(null, c));
          };
        }(vec__39987, a, b, c, G__39980, map__39978, map__39978__$1, ref, check_equals_QMARK_);
        break;
      default:
        return function(G__39980, map__39978, map__39978__$1, ref, check_equals_QMARK_) {
          return function() {
            return cljs.core.apply.call(null, f, cljs.core.map.call(null, cljs.core.deref, refs));
          };
        }(G__39980, map__39978, map__39978__$1, ref, check_equals_QMARK_);
    }
  }();
  var sink = cljs.core.truth_(ref) ? function() {
    var G__39990 = ref;
    cljs.core.reset_BANG_.call(null, G__39990, recalc.call(null));
    return G__39990;
  }() : cljs.core.atom.call(null, recalc.call(null));
  var watch = cljs.core.truth_(check_equals_QMARK_) ? function(map__39978, map__39978__$1, ref, check_equals_QMARK_, recalc, sink) {
    return function(_, ___$1, ___$2, ___$3) {
      var new_val = recalc.call(null);
      if (cljs.core.not_EQ_.call(null, cljs.core.deref.call(null, sink), new_val)) {
        return cljs.core.reset_BANG_.call(null, sink, new_val);
      } else {
        return null;
      }
    };
  }(map__39978, map__39978__$1, ref, check_equals_QMARK_, recalc, sink) : function(map__39978, map__39978__$1, ref, check_equals_QMARK_, recalc, sink) {
    return function(_, ___$1, ___$2, ___$3) {
      return cljs.core.reset_BANG_.call(null, sink, recalc.call(null));
    };
  }(map__39978, map__39978__$1, ref, check_equals_QMARK_, recalc, sink);
  var seq__39991_40000 = cljs.core.seq.call(null, refs);
  var chunk__39992_40001 = null;
  var count__39993_40002 = 0;
  var i__39994_40003 = 0;
  while (true) {
    if (i__39994_40003 < count__39993_40002) {
      var ref_40004__$1 = cljs.core._nth.call(null, chunk__39992_40001, i__39994_40003);
      cljs.core.add_watch.call(null, ref_40004__$1, key, watch);
      var G__40005 = seq__39991_40000;
      var G__40006 = chunk__39992_40001;
      var G__40007 = count__39993_40002;
      var G__40008 = i__39994_40003 + 1;
      seq__39991_40000 = G__40005;
      chunk__39992_40001 = G__40006;
      count__39993_40002 = G__40007;
      i__39994_40003 = G__40008;
      continue;
    } else {
      var temp__4657__auto___40009 = cljs.core.seq.call(null, seq__39991_40000);
      if (temp__4657__auto___40009) {
        var seq__39991_40010__$1 = temp__4657__auto___40009;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__39991_40010__$1)) {
          var c__30910__auto___40011 = cljs.core.chunk_first.call(null, seq__39991_40010__$1);
          var G__40012 = cljs.core.chunk_rest.call(null, seq__39991_40010__$1);
          var G__40013 = c__30910__auto___40011;
          var G__40014 = cljs.core.count.call(null, c__30910__auto___40011);
          var G__40015 = 0;
          seq__39991_40000 = G__40012;
          chunk__39992_40001 = G__40013;
          count__39993_40002 = G__40014;
          i__39994_40003 = G__40015;
          continue;
        } else {
          var ref_40016__$1 = cljs.core.first.call(null, seq__39991_40010__$1);
          cljs.core.add_watch.call(null, ref_40016__$1, key, watch);
          var G__40017 = cljs.core.next.call(null, seq__39991_40010__$1);
          var G__40018 = null;
          var G__40019 = 0;
          var G__40020 = 0;
          seq__39991_40000 = G__40017;
          chunk__39992_40001 = G__40018;
          count__39993_40002 = G__40019;
          i__39994_40003 = G__40020;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return sink;
};
rum.derived_atom.derived_atom.cljs$lang$maxFixedArity = 4;
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.define("goog.userAgent.ASSUME_IPOD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
goog.userAgent.determineVersion_ = function() {
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode != null && docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
  if (goog.userAgent.OPERA) {
    return /(?:Version)[ \/]?(\S+)/.exec(userAgent);
  }
  return undefined;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "' of type " + goog.typeOf(safeStyle));
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-,.\"'%_!# a-zA-Z0-9], rgb() and " + "rgba(), got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
          goog.asserts.fail("String value requires balanced quotes, got: " + value);
          value = goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0;i < value.length;i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_RE_ = /^([-,."'%_!# a-zA-Z0-9]+|(?:rgb|hsl)a?\([0-9.%, ]+\))$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return (goog.global.URL);
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return (goog.global.webkitURL);
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return (goog.global);
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿" + "‎Ⰰ-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-߿‏יִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm))$/i;
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  if (!goog.string.caseInsensitiveStartsWith(telUrl, "tel:")) {
    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  var unwrapped = "";
  for (var i = 0;i < parts.length;i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "' of type " + goog.typeOf(safeHtml));
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  goog.html.SafeHtml.verifyTagName(tagName);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, opt_attributes, opt_content);
};
goog.html.SafeHtml.verifyTagName = function(tagName) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (opt_src) {
    goog.html.TrustedResourceUrl.unwrap(opt_src);
  }
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.canUseSandboxIframe()) {
    throw new Error("The browser does not support sandboxed iframes.");
  }
  var fixedAttributes = {};
  if (opt_src) {
    fixedAttributes["src"] = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));
  } else {
    fixedAttributes["src"] = null;
  }
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  fixedAttributes["sandbox"] = "";
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.canUseSandboxIframe = function() {
  return goog.global["HTMLIFrameElement"] && "sandbox" in goog.global["HTMLIFrameElement"].prototype;
};
goog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {
  goog.html.TrustedResourceUrl.unwrap(src);
  var fixedAttributes = {"src":src};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0;i < styleSheet.length;i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {
  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));
  if (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) {
    if (goog.string.contains(unwrappedUrl, ";")) {
      unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'";
    }
  }
  var attributes = {"http-equiv":"refresh", "content":(opt_secs || 0) + "; url\x3d" + unwrappedUrl};
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (goog.isString(value)) {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string,' + ' value "' + value + '" given.');
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {
  var result = "";
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  return result;
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3cbr\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setImageSrc = function(imageElement, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  embed.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  link.rel = rel;
  if (goog.string.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  object.data = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  script.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  var win = opt_openerWin || window;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.provide("goog.html.SafeScript");
goog.require("goog.asserts");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = true;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  if (scriptString.length === 0) {
    return goog.html.SafeScript.EMPTY;
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeScript.prototype.toString = function() {
    return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
  };
}
goog.html.SafeScript.unwrap = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
    return "type_error:SafeScript";
  }
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.html.uncheckedconversions");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmpty(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = Math.sign || function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return (goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += Number(tx);
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return (this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(target) {
  var s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Unicode");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (parent.getElementsByClassName) {
    retVal = parent.getElementsByClassName(className)[0];
  } else {
    if (goog.dom.canUseQuerySelector_(parent)) {
      retVal = parent.querySelector("." + className);
    } else {
      retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
    }
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return (arrayLike);
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return (arrayLike);
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "nonce":"nonce", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeightForWindow = function(win) {
  return goog.dom.getDocumentHeight_(win);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = (doc.documentElement);
    if (!(docEl && body)) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (doc.scrollingElement) {
    return doc.scrollingElement;
  }
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = (doc.createElement(goog.dom.TagName.TABLE));
  var tbody = table.appendChild(doc.createElement(goog.dom.TagName.TBODY));
  for (var i = 0;i < rows;i++) {
    var tr = doc.createElement(goog.dom.TagName.TR);
    for (var j = 0;j < columns;j++) {
      var td = doc.createElement(goog.dom.TagName.TD);
      if (fillWithNbsp) {
        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      }
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.constHtmlToNode = function(var_args) {
  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);
  var safeHtml = goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML string, that gets turned into a " + "Node later, so it will be automatically balanced."), stringArray.join(""));
  return goog.dom.safeHtmlToNode(safeHtml);
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    goog.dom.safe.setInnerHtml(tempDiv, html);
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild);
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch((node).tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return (element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return (goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (goog.isDef(node.firstElementChild)) {
    return (node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (goog.isDef(node.lastElementChild)) {
    return (node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (goog.isDef(node.nextElementSibling)) {
    return (node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (goog.isDef(node.previousElementSibling)) {
    return (node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return (node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (!parent || !descendant) {
    return false;
  }
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return (node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  return frame.contentDocument || (frame).contentWindow.document;
};
goog.dom.getFrameContentWindow = function(frame) {
  try {
    return frame.contentWindow || (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) : null);
  } catch (e) {
  }
  return null;
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  goog.asserts.assert(element !== null, "goog.dom.getOuterHtml expects a non-null value for element");
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement(goog.dom.TagName.DIV);
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_((element)) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = (element).tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect;
  if (!goog.isFunction(element["getBoundingClientRect"]) || goog.userAgent.IE && element.parentElement == null) {
    rect = {"height":element.offsetHeight, "width":element.offsetWidth};
  } else {
    rect = element.getBoundingClientRect();
  }
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && node !== null && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return (goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true, opt_maxSearchSteps));
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var steps = 0;
  while (element && (opt_maxSearchSteps == null || steps <= opt_maxSearchSteps)) {
    goog.asserts.assert(element.name != "parentNode");
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  if (goog.isDef(win.devicePixelRatio)) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call((opt_obj), values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call((opt_obj), values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call((opt_obj), values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call((opt_obj), values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call((opt_obj), values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call((opt_obj), values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  return (function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(null, args);
    }, interval);
  });
};
goog.functions.throttle = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = null;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(null, args);
  };
  return (function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  });
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return (this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push((key));
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return (uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0;i < pairs.length;i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return (this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__40023_SHARP_) {
      return max === p1__40023_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union(var_args) {
  var args40024 = [];
  var len__31204__auto___40030 = arguments.length;
  var i__31205__auto___40031 = 0;
  while (true) {
    if (i__31205__auto___40031 < len__31204__auto___40030) {
      args40024.push(arguments[i__31205__auto___40031]);
      var G__40032 = i__31205__auto___40031 + 1;
      i__31205__auto___40031 = G__40032;
      continue;
    } else {
    }
    break;
  }
  var G__40029 = args40024.length;
  switch(G__40029) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args40024.slice(2), 0, null);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq40025) {
  var G__40026 = cljs.core.first.call(null, seq40025);
  var seq40025__$1 = cljs.core.next.call(null, seq40025);
  var G__40027 = cljs.core.first.call(null, seq40025__$1);
  var seq40025__$2 = cljs.core.next.call(null, seq40025__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__40026, G__40027, seq40025__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection(var_args) {
  var args40035 = [];
  var len__31204__auto___40041 = arguments.length;
  var i__31205__auto___40042 = 0;
  while (true) {
    if (i__31205__auto___40042 < len__31204__auto___40041) {
      args40035.push(arguments[i__31205__auto___40042]);
      var G__40043 = i__31205__auto___40042 + 1;
      i__31205__auto___40042 = G__40043;
      continue;
    } else {
    }
    break;
  }
  var G__40040 = args40035.length;
  switch(G__40040) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args40035.slice(2), 0, null);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__40045 = s2;
      var G__40046 = s1;
      s1 = G__40045;
      s2 = G__40046;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__40034_SHARP_) {
    return -cljs.core.count.call(null, p1__40034_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq40036) {
  var G__40037 = cljs.core.first.call(null, seq40036);
  var seq40036__$1 = cljs.core.next.call(null, seq40036);
  var G__40038 = cljs.core.first.call(null, seq40036__$1);
  var seq40036__$2 = cljs.core.next.call(null, seq40036__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__40037, G__40038, seq40036__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference(var_args) {
  var args40047 = [];
  var len__31204__auto___40053 = arguments.length;
  var i__31205__auto___40054 = 0;
  while (true) {
    if (i__31205__auto___40054 < len__31204__auto___40053) {
      args40047.push(arguments[i__31205__auto___40054]);
      var G__40055 = i__31205__auto___40054 + 1;
      i__31205__auto___40054 = G__40055;
      continue;
    } else {
    }
    break;
  }
  var G__40052 = args40047.length;
  switch(G__40052) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__31223__auto__ = new cljs.core.IndexedSeq(args40047.slice(2), 0, null);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31223__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq40048) {
  var G__40049 = cljs.core.first.call(null, seq40048);
  var seq40048__$1 = cljs.core.next.call(null, seq40048);
  var G__40050 = cljs.core.first.call(null, seq40048__$1);
  var seq40048__$2 = cljs.core.next.call(null, seq40048__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__40049, G__40050, seq40048__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__40057_SHARP_) {
    return cljs.core.select_keys.call(null, p1__40057_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__40062) {
    var vec__40063 = p__40062;
    var old = cljs.core.nth.call(null, vec__40063, 0, null);
    var new$ = cljs.core.nth.call(null, vec__40063, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__40066_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__40066_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__40071) {
    var vec__40072 = p__40071;
    var k = cljs.core.nth.call(null, vec__40072, 0, null);
    var v = cljs.core.nth.call(null, vec__40072, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join(var_args) {
  var args40079 = [];
  var len__31204__auto___40088 = arguments.length;
  var i__31205__auto___40089 = 0;
  while (true) {
    if (i__31205__auto___40089 < len__31204__auto___40088) {
      args40079.push(arguments[i__31205__auto___40089]);
      var G__40090 = i__31205__auto___40089 + 1;
      i__31205__auto___40089 = G__40090;
      continue;
    } else {
    }
    break;
  }
  var G__40081 = args40079.length;
  switch(G__40081) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40079.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__40082 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__40082, 0, null);
    var s = cljs.core.nth.call(null, vec__40082, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__40082, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__40082, r, s, idx) {
            return function(p1__40075_SHARP_, p2__40076_SHARP_) {
              return cljs.core.conj.call(null, p1__40075_SHARP_, cljs.core.merge.call(null, p2__40076_SHARP_, x));
            };
          }(found, ks, vec__40082, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__40082, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__40085 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__40085, 0, null);
  var s = cljs.core.nth.call(null, vec__40085, 1, null);
  var k = cljs.core.nth.call(null, vec__40085, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__40085, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__40085, r, s, k, idx) {
          return function(p1__40077_SHARP_, p2__40078_SHARP_) {
            return cljs.core.conj.call(null, p1__40077_SHARP_, cljs.core.merge.call(null, p2__40078_SHARP_, x));
          };
        }(found, vec__40085, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__40085, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__40092_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__40092_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__40093_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__40093_SHARP_);
  }, set2);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__39440__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__39440 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__39441__i = 0, G__39441__a = new Array(arguments.length - 0);
        while (G__39441__i < G__39441__a.length) {
          G__39441__a[G__39441__i] = arguments[G__39441__i + 0];
          ++G__39441__i;
        }
        args = new cljs.core.IndexedSeq(G__39441__a, 0);
      }
      return G__39440__delegate.call(this, args);
    };
    G__39440.cljs$lang$maxFixedArity = 0;
    G__39440.cljs$lang$applyTo = function(arglist__39442) {
      var args = cljs.core.seq(arglist__39442);
      return G__39440__delegate(args);
    };
    G__39440.cljs$core$IFn$_invoke$arity$variadic = G__39440__delegate;
    return G__39440;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args39443 = [];
  var len__31204__auto___39446 = arguments.length;
  var i__31205__auto___39447 = 0;
  while (true) {
    if (i__31205__auto___39447 < len__31204__auto___39446) {
      args39443.push(arguments[i__31205__auto___39447]);
      var G__39448 = i__31205__auto___39447 + 1;
      i__31205__auto___39447 = G__39448;
      continue;
    } else {
    }
    break;
  }
  var G__39445 = args39443.length;
  switch(G__39445) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39443.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__39450 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__39451 = cljs.core.next.call(null, coll__$1);
      sb = G__39450;
      coll__$1 = G__39451;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__39452 = sb;
      var G__39453 = coll__$2;
      sb = G__39452;
      coll__$1 = G__39453;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__39454 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__39454;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__39458 = cljs.core._EQ__EQ_;
    var expr__39459 = limit;
    if (cljs.core.truth_(pred__39458.call(null, 1, expr__39459))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__39458.call(null, 2, expr__39459))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args39461 = [];
  var len__31204__auto___39464 = arguments.length;
  var i__31205__auto___39465 = 0;
  while (true) {
    if (i__31205__auto___39465 < len__31204__auto___39464) {
      args39461.push(arguments[i__31205__auto___39465]);
      var G__39466 = i__31205__auto___39465 + 1;
      i__31205__auto___39465 = G__39466;
      continue;
    } else {
    }
    break;
  }
  var G__39463 = args39461.length;
  switch(G__39463) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39461.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__39468 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__39469 = limit__$1 - 1;
          var G__39470 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__39468;
          limit__$1 = G__39469;
          parts = G__39470;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__39471 = index - 1;
        index = G__39471;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__39472 = index + 1;
      index = G__39472;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args39473 = [];
  var len__31204__auto___39476 = arguments.length;
  var i__31205__auto___39477 = 0;
  while (true) {
    if (i__31205__auto___39477 < len__31204__auto___39476) {
      args39473.push(arguments[i__31205__auto___39477]);
      var G__39478 = i__31205__auto___39477 + 1;
      i__31205__auto___39477 = G__39478;
      continue;
    } else {
    }
    break;
  }
  var G__39475 = args39473.length;
  switch(G__39475) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39473.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args39480 = [];
  var len__31204__auto___39483 = arguments.length;
  var i__31205__auto___39484 = 0;
  while (true) {
    if (i__31205__auto___39484 < len__31204__auto___39483) {
      args39480.push(arguments[i__31205__auto___39484]);
      var G__39485 = i__31205__auto___39484 + 1;
      i__31205__auto___39484 = G__39485;
      continue;
    } else {
    }
    break;
  }
  var G__39482 = args39480.length;
  switch(G__39482) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39480.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("goog.Uri");
goog.require("clojure.set");
goog.require("clojure.string");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.ToString = function() {
};
sablono.util.to_str = function sablono$util$to_str(x) {
  if (!(x == null) && !(x.sablono$util$ToString$to_str$arity$1 == null)) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = sablono.util.to_str[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, x);
    } else {
      var m__30760__auto____$1 = sablono.util.to_str["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
      }
    }
  }
};
sablono.util.ToURI = function() {
};
sablono.util.to_uri = function sablono$util$to_uri(x) {
  if (!(x == null) && !(x.sablono$util$ToURI$to_uri$arity$1 == null)) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__30759__auto__ = x == null ? null : x;
    var m__30760__auto__ = sablono.util.to_uri[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, x);
    } else {
      var m__30760__auto____$1 = sablono.util.to_uri["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
      }
    }
  }
};
sablono.util.as_str = function sablono$util$as_str(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___40097 = arguments.length;
  var i__31205__auto___40098 = 0;
  while (true) {
    if (i__31205__auto___40098 < len__31204__auto___40097) {
      args__31211__auto__.push(arguments[i__31205__auto___40098]);
      var G__40099 = i__31205__auto___40098 + 1;
      i__31205__auto___40098 = G__40099;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return sablono.util.as_str.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
sablono.util.as_str.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  return clojure.string.join.call(null, cljs.core.map.call(null, sablono.util.to_str, xs));
};
sablono.util.as_str.cljs$lang$maxFixedArity = 0;
sablono.util.as_str.cljs$lang$applyTo = function(seq40096) {
  return sablono.util.as_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq40096));
};
sablono.util.camel_case = function sablono$util$camel_case(k) {
  if (k instanceof cljs.core.Keyword || typeof k === "string" || k instanceof cljs.core.Symbol) {
    var vec__40103 = cljs.core.name.call(null, k).split("-");
    var seq__40104 = cljs.core.seq.call(null, vec__40103);
    var first__40105 = cljs.core.first.call(null, seq__40104);
    var seq__40104__$1 = cljs.core.next.call(null, seq__40104);
    var first_word = first__40105;
    var words = seq__40104__$1;
    if (cljs.core.empty_QMARK_.call(null, words) || cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word)) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return k;
  }
};
sablono.util.camel_case_keys = function sablono$util$camel_case_keys(m) {
  if (cljs.core.map_QMARK_.call(null, m)) {
    var m__$1 = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__40111) {
      var vec__40112 = p__40111;
      var k = cljs.core.nth.call(null, vec__40112, 0, null);
      var v = cljs.core.nth.call(null, vec__40112, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.util.camel_case.call(null, k), v], null);
    }), m);
    var G__40115 = m__$1;
    if (cljs.core.map_QMARK_.call(null, (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(m__$1))) {
      return cljs.core.update.call(null, G__40115, new cljs.core.Keyword(null, "style", "style", -496642736), sablono.util.camel_case_keys);
    } else {
      return G__40115;
    }
  } else {
    return m;
  }
};
sablono.util.element_QMARK_ = function sablono$util$element_QMARK_(x) {
  return cljs.core.vector_QMARK_.call(null, x) && cljs.core.first.call(null, x) instanceof cljs.core.Keyword;
};
sablono.util.html_to_dom_attrs = function sablono$util$html_to_dom_attrs(attrs) {
  return clojure.set.rename_keys.call(null, sablono.util.camel_case_keys.call(null, attrs), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.Keyword(null, "className", "className", -1983287057), new cljs.core.Keyword(null, "for", "for", -1323786319), new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720)], null));
};
sablono.util.join_classes = function sablono$util$join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.comp.call(null, cljs.core.mapcat.call(null, function(x) {
    if (typeof x === "string") {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);
    } else {
      return cljs.core.seq.call(null, x);
    }
  }), cljs.core.remove.call(null, cljs.core.nil_QMARK_)), classes));
};
sablono.util.react_fn = function sablono$util$react_fn(type) {
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), null, new cljs.core.Keyword(null, "input", "input", 556931961), null, new cljs.core.Keyword(null, "select", "select", 1147833503), null], null), null), cljs.core.keyword.call(null, type))) {
    return new cljs.core.Symbol("sablono.interpreter", "create-element", "sablono.interpreter/create-element", 748785555, null);
  } else {
    return new cljs.core.Symbol("js", "React.createElement", "js/React.createElement", 1766367641, null);
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
goog.Uri.prototype.sablono$util$ToString$ = cljs.core.PROTOCOL_SENTINEL;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__30096__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return [cljs.core.str(x__$1)].join("");
  } else {
    var base = [cljs.core.str(sablono.util._STAR_base_url_STAR_)].join("");
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return [cljs.core.str(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)), cljs.core.str(x__$1)].join("");
    } else {
      return [cljs.core.str(base), cljs.core.str(x__$1)].join("");
    }
  }
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return [cljs.core.str(x)].join("");
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return [cljs.core.str(x)].join("");
};
goog.Uri.prototype.sablono$util$ToURI$ = cljs.core.PROTOCOL_SENTINEL;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri([cljs.core.str(x)].join(""));
};
goog.provide("sablono.normalize");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("sablono.util");
sablono.normalize.compact_map = function sablono$normalize$compact_map(m) {
  if (cljs.core.truth_(m)) {
    return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.call(null, function(p__40122) {
      var vec__40123 = p__40122;
      var _ = cljs.core.nth.call(null, vec__40123, 0, null);
      var v = cljs.core.nth.call(null, vec__40123, 1, null);
      return cljs.core.empty_QMARK_.call(null, v);
    }), m);
  } else {
    return null;
  }
};
sablono.normalize.class_name = function sablono$normalize$class_name(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (x instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, x);
    } else {
      return x;
    }
  }
};
sablono.normalize.map_lookup_QMARK_ = function sablono$normalize$map_lookup_QMARK_(x) {
  return cljs.core.list_QMARK_.call(null, x) && cljs.core.first.call(null, x) instanceof cljs.core.Keyword;
};
sablono.normalize.class$ = function sablono$normalize$class(class$) {
  if (class$ == null) {
    return null;
  } else {
    if (cljs.core.truth_(sablono.normalize.map_lookup_QMARK_.call(null, class$))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [class$], null);
    } else {
      if (cljs.core.list_QMARK_.call(null, class$)) {
        if (cljs.core.first.call(null, class$) instanceof cljs.core.Symbol) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [class$], null);
        } else {
          return cljs.core.map.call(null, sablono.normalize.class_name, class$);
        }
      } else {
        if (class$ instanceof cljs.core.Symbol) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [class$], null);
        } else {
          if (typeof class$ === "string") {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [class$], null);
          } else {
            if (class$ instanceof cljs.core.Keyword) {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.normalize.class_name.call(null, class$)], null);
            } else {
              if ((cljs.core.set_QMARK_.call(null, class$) || cljs.core.sequential_QMARK_.call(null, class$)) && cljs.core.every_QMARK_.call(null, function(p1__40126_SHARP_) {
                return p1__40126_SHARP_ instanceof cljs.core.Keyword || typeof p1__40126_SHARP_ === "string";
              }, class$)) {
                return cljs.core.mapv.call(null, sablono.normalize.class_name, class$);
              } else {
                if (cljs.core.set_QMARK_.call(null, class$) || cljs.core.sequential_QMARK_.call(null, class$)) {
                  return cljs.core.mapv.call(null, sablono.normalize.class_name, class$);
                } else {
                  return class$;
                }
              }
            }
          }
        }
      }
    }
  }
};
sablono.normalize.attributes = function sablono$normalize$attributes(attrs) {
  var G__40128 = attrs;
  if (cljs.core.truth_((new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(attrs))) {
    return cljs.core.update_in.call(null, G__40128, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "class", "class", -2030961996)], null), sablono.normalize.class$);
  } else {
    return G__40128;
  }
};
sablono.normalize.merge_with_class = function sablono$normalize$merge_with_class(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___40131 = arguments.length;
  var i__31205__auto___40132 = 0;
  while (true) {
    if (i__31205__auto___40132 < len__31204__auto___40131) {
      args__31211__auto__.push(arguments[i__31205__auto___40132]);
      var G__40133 = i__31205__auto___40132 + 1;
      i__31205__auto___40132 = G__40133;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return sablono.normalize.merge_with_class.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
sablono.normalize.merge_with_class.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  var maps__$1 = cljs.core.map.call(null, sablono.normalize.attributes, maps);
  var classes = cljs.core.mapcat.call(null, new cljs.core.Keyword(null, "class", "class", -2030961996), maps__$1);
  if (cljs.core.seq.call(null, maps__$1)) {
    var G__40130 = cljs.core.reduce.call(null, cljs.core.into, cljs.core.PersistentArrayMap.EMPTY, maps__$1);
    if (!cljs.core.empty_QMARK_.call(null, classes)) {
      return cljs.core.assoc.call(null, G__40130, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.vec.call(null, classes));
    } else {
      return G__40130;
    }
  } else {
    return null;
  }
};
sablono.normalize.merge_with_class.cljs$lang$maxFixedArity = 0;
sablono.normalize.merge_with_class.cljs$lang$applyTo = function(seq40129) {
  return sablono.normalize.merge_with_class.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq40129));
};
sablono.normalize.strip_css = function sablono$normalize$strip_css(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, /^[.#]/, "");
  } else {
    return null;
  }
};
sablono.normalize.match_tag = function sablono$normalize$match_tag(s) {
  var matches = cljs.core.re_seq.call(null, /[#.]?[^#.]+/, cljs.core.name.call(null, s));
  var vec__40139 = cljs.core.empty_QMARK_.call(null, matches) ? function() {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Can't match CSS tag: "), cljs.core.str(s)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), s], null));
  }() : cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["#", null, ".", null], null), null)).call(null, cljs.core.ffirst.call(null, matches))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["div", matches], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, matches), cljs.core.rest.call(null, matches)], null);
  var tag_name = cljs.core.nth.call(null, vec__40139, 0, null);
  var names = cljs.core.nth.call(null, vec__40139, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_name, sablono.normalize.strip_css.call(null, cljs.core.some.call(null, function(matches, vec__40139, tag_name, names) {
    return function(p1__40134_SHARP_) {
      if (cljs.core._EQ_.call(null, "#", cljs.core.first.call(null, p1__40134_SHARP_))) {
        return p1__40134_SHARP_;
      } else {
        return null;
      }
    };
  }(matches, vec__40139, tag_name, names), names)), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.comp.call(null, cljs.core.filter.call(null, function(matches, vec__40139, tag_name, names) {
    return function(p1__40135_SHARP_) {
      return cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, p1__40135_SHARP_));
    };
  }(matches, vec__40139, tag_name, names)), cljs.core.map.call(null, sablono.normalize.strip_css)), names)], null);
};
sablono.normalize.children = function sablono$normalize$children(x) {
  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, x == null ? cljs.core.List.EMPTY : typeof x === "string" ? function() {
    var x__30933__auto__ = x;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__30933__auto__);
  }() : cljs.core.truth_(sablono.util.element_QMARK_.call(null, x)) ? function() {
    var x__30933__auto__ = x;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__30933__auto__);
  }() : cljs.core.list_QMARK_.call(null, x) && cljs.core.first.call(null, x) instanceof cljs.core.Symbol ? function() {
    var x__30933__auto__ = x;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__30933__auto__);
  }() : cljs.core.list_QMARK_.call(null, x) ? x : cljs.core.sequential_QMARK_.call(null, x) && cljs.core._EQ_.call(null, cljs.core.count.call(null, x), 1) && cljs.core.sequential_QMARK_.call(null, cljs.core.first.call(null, x)) && !(typeof cljs.core.first.call(null, x) === "string") && cljs.core.not.call(null, sablono.util.element_QMARK_.call(null, cljs.core.first.call(null, x))) ? sablono.normalize.children.call(null, cljs.core.first.call(null, x)) : cljs.core.sequential_QMARK_.call(null, x) ? x : 
  function() {
    var x__30933__auto__ = x;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__30933__auto__);
  }());
};
sablono.normalize.element = function sablono$normalize$element(p__40142) {
  var vec__40149 = p__40142;
  var seq__40150 = cljs.core.seq.call(null, vec__40149);
  var first__40151 = cljs.core.first.call(null, seq__40150);
  var seq__40150__$1 = cljs.core.next.call(null, seq__40150);
  var tag = first__40151;
  var content = seq__40150__$1;
  if (tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string") {
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str(tag), cljs.core.str(" is not a valid element name.")].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "content", "content", 15833224), content], null));
  }
  var vec__40152 = sablono.normalize.match_tag.call(null, tag);
  var tag__$1 = cljs.core.nth.call(null, vec__40152, 0, null);
  var id = cljs.core.nth.call(null, vec__40152, 1, null);
  var class$ = cljs.core.nth.call(null, vec__40152, 2, null);
  var tag_attrs = sablono.normalize.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), class$], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.normalize.merge_with_class.call(null, tag_attrs, map_attrs), sablono.normalize.children.call(null, cljs.core.next.call(null, content))], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.normalize.attributes.call(null, tag_attrs), sablono.normalize.children.call(null, content)], null);
  }
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("sablono.normalize");
goog.require("sablono.util");
goog.require("goog.object");
sablono.interpreter.IInterpreter = function() {
};
sablono.interpreter.interpret = function sablono$interpreter$interpret(this$) {
  if (!(this$ == null) && !(this$.sablono$interpreter$IInterpreter$interpret$arity$1 == null)) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = sablono.interpreter.interpret[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = sablono.interpreter.interpret["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
      }
    }
  }
};
sablono.interpreter.wrap_form_element = function sablono$interpreter$wrap_form_element(element, property, coerce) {
  return React.createClass({"displayName":[cljs.core.str("wrapped-"), cljs.core.str(element)].join(""), "getInitialState":function() {
    var this$ = this;
    return {"state_value":coerce.call(null, this$.props[property])};
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"state_value":e.target[property]});
    }
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    var state_value = this$.state["state_value"];
    var element_value = ReactDOM.findDOMNode(this$)[property];
    if (cljs.core.not_EQ_.call(null, state_value, element_value)) {
      return this$.setState({"state_value":element_value});
    } else {
      return this$.setState({"state_value":coerce.call(null, new_props[property])});
    }
  }, "render":function() {
    var this$ = this;
    var element_props = {};
    goog.object.extend(element_props, this$.props, {"onChange":this$["onChange"], "children":this$.props["children"]});
    element_props[property] = this$.state["state_value"];
    return React.createElement(element, element_props);
  }});
};
sablono.interpreter.wrapped_input = sablono.interpreter.wrap_form_element.call(null, "input", "value", cljs.core.str);
sablono.interpreter.wrapped_checked = sablono.interpreter.wrap_form_element.call(null, "input", "checked", cljs.core.boolean$);
sablono.interpreter.wrapped_select = sablono.interpreter.wrap_form_element.call(null, "select", "value", cljs.core.str);
sablono.interpreter.wrapped_textarea = sablono.interpreter.wrap_form_element.call(null, "textarea", "value", cljs.core.str);
sablono.interpreter.defined_QMARK_ = function sablono$interpreter$defined_QMARK_(x) {
  return !(x == null) && !(void 0 === x);
};
sablono.interpreter.create_element = function sablono$interpreter$create_element(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___40164 = arguments.length;
  var i__31205__auto___40165 = 0;
  while (true) {
    if (i__31205__auto___40165 < len__31204__auto___40164) {
      args__31211__auto__.push(arguments[i__31205__auto___40165]);
      var G__40166 = i__31205__auto___40165 + 1;
      i__31205__auto___40165 = G__40166;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 2 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(2), 0, null) : null;
  return sablono.interpreter.create_element.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31212__auto__);
};
sablono.interpreter.create_element.cljs$core$IFn$_invoke$arity$variadic = function(type, props, children) {
  var class$ = function() {
    var or__30096__auto__ = cljs.core.some_QMARK_.call(null, props) ? function() {
      var G__40162 = cljs.core.name.call(null, type);
      switch(G__40162) {
        case "input":
          var G__40163 = props.type;
          switch(G__40163) {
            case "radio":
              if (cljs.core.truth_(sablono.interpreter.defined_QMARK_.call(null, props.checked))) {
                return sablono.interpreter.wrapped_checked;
              } else {
                return null;
              }
              break;
            case "checkbox":
              if (cljs.core.truth_(sablono.interpreter.defined_QMARK_.call(null, props.checked))) {
                return sablono.interpreter.wrapped_checked;
              } else {
                return null;
              }
              break;
            default:
              if (cljs.core.truth_(sablono.interpreter.defined_QMARK_.call(null, props.value))) {
                return sablono.interpreter.wrapped_input;
              } else {
                return null;
              }
            ;
          }
          break;
        case "select":
          if (cljs.core.truth_(sablono.interpreter.defined_QMARK_.call(null, props.value))) {
            return sablono.interpreter.wrapped_select;
          } else {
            return null;
          }
          break;
        case "textarea":
          if (cljs.core.truth_(sablono.interpreter.defined_QMARK_.call(null, props.value))) {
            return sablono.interpreter.wrapped_textarea;
          } else {
            return null;
          }
          break;
        default:
          return null;
      }
    }() : null;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return cljs.core.name.call(null, type);
    }
  }();
  var children__$1 = cljs.core.remove.call(null, cljs.core.nil_QMARK_, children);
  if (cljs.core.some_QMARK_.call(null, props)) {
    if (props.value == null) {
      props.value = undefined;
    } else {
    }
    if (props.checked == null) {
      props.checked = undefined;
    } else {
    }
  } else {
  }
  if (cljs.core.empty_QMARK_.call(null, children__$1)) {
    return React.createElement(class$, props);
  } else {
    return cljs.core.apply.call(null, React.createElement, class$, props, children__$1);
  }
};
sablono.interpreter.create_element.cljs$lang$maxFixedArity = 2;
sablono.interpreter.create_element.cljs$lang$applyTo = function(seq40157) {
  var G__40158 = cljs.core.first.call(null, seq40157);
  var seq40157__$1 = cljs.core.next.call(null, seq40157);
  var G__40159 = cljs.core.first.call(null, seq40157__$1);
  var seq40157__$2 = cljs.core.next.call(null, seq40157__$1);
  return sablono.interpreter.create_element.cljs$core$IFn$_invoke$arity$variadic(G__40158, G__40159, seq40157__$2);
};
sablono.interpreter.attributes = function sablono$interpreter$attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = attrs__$1.className;
  var class$__$1 = cljs.core.array_QMARK_.call(null, class$) ? clojure.string.join.call(null, " ", class$) : class$;
  if (clojure.string.blank_QMARK_.call(null, class$__$1)) {
    delete attrs__$1["className"];
  } else {
    attrs__$1.className = class$__$1;
  }
  return attrs__$1;
};
sablono.interpreter.interpret_seq = function sablono$interpreter$interpret_seq(x) {
  return cljs.core.map.call(null, sablono.interpreter.interpret, x);
};
sablono.interpreter.element = function sablono$interpreter$element(element) {
  var vec__40172 = sablono.normalize.element.call(null, element);
  var type = cljs.core.nth.call(null, vec__40172, 0, null);
  var attrs = cljs.core.nth.call(null, vec__40172, 1, null);
  var content = cljs.core.nth.call(null, vec__40172, 2, null);
  return cljs.core.apply.call(null, sablono.interpreter.create_element, type, sablono.interpreter.attributes.call(null, attrs), sablono.interpreter.interpret_seq.call(null, content));
};
sablono.interpreter.interpret_vec = function sablono$interpreter$interpret_vec(x) {
  if (cljs.core.truth_(sablono.util.element_QMARK_.call(null, x))) {
    return sablono.interpreter.element.call(null, x);
  } else {
    return sablono.interpreter.interpret_seq.call(null, x);
  }
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_vec.call(null, this$__$1);
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_vec.call(null, this$__$1);
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("sablono.normalize");
goog.require("sablono.util");
goog.require("sablono.interpreter");
goog.require("clojure.string");
sablono.core.wrap_attrs = function sablono$core$wrap_attrs(func) {
  return function() {
    var G__40669__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__40666 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var seq__40667 = cljs.core.seq.call(null, vec__40666);
        var first__40668 = cljs.core.first.call(null, seq__40667);
        var seq__40667__$1 = cljs.core.next.call(null, seq__40667);
        var tag = first__40668;
        var body = seq__40667__$1;
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.into.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args))], null), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.into.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag, cljs.core.first.call(null, args)], null), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__40669 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__40670__i = 0, G__40670__a = new Array(arguments.length - 0);
        while (G__40670__i < G__40670__a.length) {
          G__40670__a[G__40670__i] = arguments[G__40670__i + 0];
          ++G__40670__i;
        }
        args = new cljs.core.IndexedSeq(G__40670__a, 0);
      }
      return G__40669__delegate.call(this, args);
    };
    G__40669.cljs$lang$maxFixedArity = 0;
    G__40669.cljs$lang$applyTo = function(arglist__40671) {
      var args = cljs.core.seq(arglist__40671);
      return G__40669__delegate(args);
    };
    G__40669.cljs$core$IFn$_invoke$arity$variadic = G__40669__delegate;
    return G__40669;
  }();
};
sablono.core.update_arglists = function sablono$core$update_arglists(arglists) {
  var iter__30879__auto__ = function sablono$core$update_arglists_$_iter__40676(s__40677) {
    return new cljs.core.LazySeq(null, function() {
      var s__40677__$1 = s__40677;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__40677__$1);
        if (temp__4657__auto__) {
          var s__40677__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__40677__$2)) {
            var c__30877__auto__ = cljs.core.chunk_first.call(null, s__40677__$2);
            var size__30878__auto__ = cljs.core.count.call(null, c__30877__auto__);
            var b__40679 = cljs.core.chunk_buffer.call(null, size__30878__auto__);
            if (function() {
              var i__40678 = 0;
              while (true) {
                if (i__40678 < size__30878__auto__) {
                  var args = cljs.core._nth.call(null, c__30877__auto__, i__40678);
                  cljs.core.chunk_append.call(null, b__40679, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)));
                  var G__40680 = i__40678 + 1;
                  i__40678 = G__40680;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40679), sablono$core$update_arglists_$_iter__40676.call(null, cljs.core.chunk_rest.call(null, s__40677__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40679), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__40677__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", 116307443, null), args)), sablono$core$update_arglists_$_iter__40676.call(null, cljs.core.rest.call(null, s__40677__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__30879__auto__.call(null, arglists);
};
sablono.core.include_css = function sablono$core$include_css(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___40686 = arguments.length;
  var i__31205__auto___40687 = 0;
  while (true) {
    if (i__31205__auto___40687 < len__31204__auto___40686) {
      args__31211__auto__.push(arguments[i__31205__auto___40687]);
      var G__40688 = i__31205__auto___40687 + 1;
      i__31205__auto___40687 = G__40688;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
  return sablono.core.include_css.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
};
sablono.core.include_css.cljs$core$IFn$_invoke$arity$variadic = function(styles) {
  var iter__30879__auto__ = function sablono$core$iter__40682(s__40683) {
    return new cljs.core.LazySeq(null, function() {
      var s__40683__$1 = s__40683;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__40683__$1);
        if (temp__4657__auto__) {
          var s__40683__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__40683__$2)) {
            var c__30877__auto__ = cljs.core.chunk_first.call(null, s__40683__$2);
            var size__30878__auto__ = cljs.core.count.call(null, c__30877__auto__);
            var b__40685 = cljs.core.chunk_buffer.call(null, size__30878__auto__);
            if (function() {
              var i__40684 = 0;
              while (true) {
                if (i__40684 < size__30878__auto__) {
                  var style = cljs.core._nth.call(null, c__30877__auto__, i__40684);
                  cljs.core.chunk_append.call(null, b__40685, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null));
                  var G__40689 = i__40684 + 1;
                  i__40684 = G__40689;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40685), sablono$core$iter__40682.call(null, cljs.core.chunk_rest.call(null, s__40683__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40685), null);
            }
          } else {
            var style = cljs.core.first.call(null, s__40683__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", -1769163468), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text/css", new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1378823488), "stylesheet"], null)], null), sablono$core$iter__40682.call(null, 
            cljs.core.rest.call(null, s__40683__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__30879__auto__.call(null, styles);
};
sablono.core.include_css.cljs$lang$maxFixedArity = 0;
sablono.core.include_css.cljs$lang$applyTo = function(seq40681) {
  return sablono.core.include_css.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq40681));
};
sablono.core.include_js = function sablono$core$include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function sablono$core$include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.12.2.js");
};
sablono.core.link_to40690 = function sablono$core$link_to40690(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___40693 = arguments.length;
  var i__31205__auto___40694 = 0;
  while (true) {
    if (i__31205__auto___40694 < len__31204__auto___40693) {
      args__31211__auto__.push(arguments[i__31205__auto___40694]);
      var G__40695 = i__31205__auto___40694 + 1;
      i__31205__auto___40694 = G__40695;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return sablono.core.link_to40690.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
sablono.core.link_to40690.cljs$core$IFn$_invoke$arity$variadic = function(url, content) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), sablono.util.as_str.call(null, url)], null), content], null);
};
sablono.core.link_to40690.cljs$lang$maxFixedArity = 1;
sablono.core.link_to40690.cljs$lang$applyTo = function(seq40691) {
  var G__40692 = cljs.core.first.call(null, seq40691);
  var seq40691__$1 = cljs.core.next.call(null, seq40691);
  return sablono.core.link_to40690.cljs$core$IFn$_invoke$arity$variadic(G__40692, seq40691__$1);
};
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to40690);
sablono.core.mail_to40696 = function sablono$core$mail_to40696(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___40703 = arguments.length;
  var i__31205__auto___40704 = 0;
  while (true) {
    if (i__31205__auto___40704 < len__31204__auto___40703) {
      args__31211__auto__.push(arguments[i__31205__auto___40704]);
      var G__40705 = i__31205__auto___40704 + 1;
      i__31205__auto___40704 = G__40705;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return sablono.core.mail_to40696.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
sablono.core.mail_to40696.cljs$core$IFn$_invoke$arity$variadic = function(e_mail, p__40699) {
  var vec__40700 = p__40699;
  var content = cljs.core.nth.call(null, vec__40700, 0, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", -2123407586), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", -793805698), [cljs.core.str("mailto:"), cljs.core.str(e_mail)].join("")], null), function() {
    var or__30096__auto__ = content;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return e_mail;
    }
  }()], null);
};
sablono.core.mail_to40696.cljs$lang$maxFixedArity = 1;
sablono.core.mail_to40696.cljs$lang$applyTo = function(seq40697) {
  var G__40698 = cljs.core.first.call(null, seq40697);
  var seq40697__$1 = cljs.core.next.call(null, seq40697);
  return sablono.core.mail_to40696.cljs$core$IFn$_invoke$arity$variadic(G__40698, seq40697__$1);
};
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to40696);
sablono.core.unordered_list40706 = function sablono$core$unordered_list40706(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), function() {
    var iter__30879__auto__ = function sablono$core$unordered_list40706_$_iter__40711(s__40712) {
      return new cljs.core.LazySeq(null, function() {
        var s__40712__$1 = s__40712;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__40712__$1);
          if (temp__4657__auto__) {
            var s__40712__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__40712__$2)) {
              var c__30877__auto__ = cljs.core.chunk_first.call(null, s__40712__$2);
              var size__30878__auto__ = cljs.core.count.call(null, c__30877__auto__);
              var b__40714 = cljs.core.chunk_buffer.call(null, size__30878__auto__);
              if (function() {
                var i__40713 = 0;
                while (true) {
                  if (i__40713 < size__30878__auto__) {
                    var x = cljs.core._nth.call(null, c__30877__auto__, i__40713);
                    cljs.core.chunk_append.call(null, b__40714, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__40715 = i__40713 + 1;
                    i__40713 = G__40715;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40714), sablono$core$unordered_list40706_$_iter__40711.call(null, cljs.core.chunk_rest.call(null, s__40712__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40714), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__40712__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), sablono$core$unordered_list40706_$_iter__40711.call(null, cljs.core.rest.call(null, s__40712__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__30879__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list40706);
sablono.core.ordered_list40716 = function sablono$core$ordered_list40716(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 932524051), function() {
    var iter__30879__auto__ = function sablono$core$ordered_list40716_$_iter__40721(s__40722) {
      return new cljs.core.LazySeq(null, function() {
        var s__40722__$1 = s__40722;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__40722__$1);
          if (temp__4657__auto__) {
            var s__40722__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__40722__$2)) {
              var c__30877__auto__ = cljs.core.chunk_first.call(null, s__40722__$2);
              var size__30878__auto__ = cljs.core.count.call(null, c__30877__auto__);
              var b__40724 = cljs.core.chunk_buffer.call(null, size__30878__auto__);
              if (function() {
                var i__40723 = 0;
                while (true) {
                  if (i__40723 < size__30878__auto__) {
                    var x = cljs.core._nth.call(null, c__30877__auto__, i__40723);
                    cljs.core.chunk_append.call(null, b__40724, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null));
                    var G__40725 = i__40723 + 1;
                    i__40723 = G__40725;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40724), sablono$core$ordered_list40716_$_iter__40721.call(null, cljs.core.chunk_rest.call(null, s__40722__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40724), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__40722__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), x], null), sablono$core$ordered_list40716_$_iter__40721.call(null, cljs.core.rest.call(null, s__40722__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__30879__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list40716);
sablono.core.image40726 = function sablono$core$image40726(var_args) {
  var args40727 = [];
  var len__31204__auto___40730 = arguments.length;
  var i__31205__auto___40731 = 0;
  while (true) {
    if (i__31205__auto___40731 < len__31204__auto___40730) {
      args40727.push(arguments[i__31205__auto___40731]);
      var G__40732 = i__31205__auto___40731 + 1;
      i__31205__auto___40731 = G__40732;
      continue;
    } else {
    }
    break;
  }
  var G__40729 = args40727.length;
  switch(G__40729) {
    case 1:
      return sablono.core.image40726.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.image40726.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40727.length)].join(""));;
  }
};
sablono.core.image40726.cljs$core$IFn$_invoke$arity$1 = function(src) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src)], null)], null);
};
sablono.core.image40726.cljs$core$IFn$_invoke$arity$2 = function(src, alt) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", -3214426), alt], null)], null);
};
sablono.core.image40726.cljs$lang$maxFixedArity = 2;
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image40726);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function sablono$core$make_name(name) {
  return cljs.core.reduce.call(null, function(p1__40734_SHARP_, p2__40735_SHARP_) {
    return [cljs.core.str(p1__40734_SHARP_), cljs.core.str("["), cljs.core.str(p2__40735_SHARP_), cljs.core.str("]")].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function sablono$core$make_id(name) {
  return cljs.core.reduce.call(null, function(p1__40736_SHARP_, p2__40737_SHARP_) {
    return [cljs.core.str(p1__40736_SHARP_), cljs.core.str("-"), cljs.core.str(p2__40737_SHARP_)].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field_STAR_ = function sablono$core$input_field_STAR_(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), type, new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  function() {
    var or__30096__auto__ = value;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return undefined;
    }
  }()], null)], null);
};
sablono.core.color_field40738 = function sablono$core$color_field40738(var_args) {
  var args40739 = [];
  var len__31204__auto___40806 = arguments.length;
  var i__31205__auto___40807 = 0;
  while (true) {
    if (i__31205__auto___40807 < len__31204__auto___40806) {
      args40739.push(arguments[i__31205__auto___40807]);
      var G__40808 = i__31205__auto___40807 + 1;
      i__31205__auto___40807 = G__40808;
      continue;
    } else {
    }
    break;
  }
  var G__40741 = args40739.length;
  switch(G__40741) {
    case 1:
      return sablono.core.color_field40738.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.color_field40738.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40739.length)].join(""));;
  }
};
sablono.core.color_field40738.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.color_field40738.call(null, name__40653__auto__, null);
};
sablono.core.color_field40738.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "color", "color", -1642760596, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.color_field40738.cljs$lang$maxFixedArity = 2;
sablono.core.color_field = sablono.core.wrap_attrs.call(null, sablono.core.color_field40738);
sablono.core.date_field40742 = function sablono$core$date_field40742(var_args) {
  var args40743 = [];
  var len__31204__auto___40810 = arguments.length;
  var i__31205__auto___40811 = 0;
  while (true) {
    if (i__31205__auto___40811 < len__31204__auto___40810) {
      args40743.push(arguments[i__31205__auto___40811]);
      var G__40812 = i__31205__auto___40811 + 1;
      i__31205__auto___40811 = G__40812;
      continue;
    } else {
    }
    break;
  }
  var G__40745 = args40743.length;
  switch(G__40745) {
    case 1:
      return sablono.core.date_field40742.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.date_field40742.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40743.length)].join(""));;
  }
};
sablono.core.date_field40742.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.date_field40742.call(null, name__40653__auto__, null);
};
sablono.core.date_field40742.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "date", "date", 177097065, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.date_field40742.cljs$lang$maxFixedArity = 2;
sablono.core.date_field = sablono.core.wrap_attrs.call(null, sablono.core.date_field40742);
sablono.core.datetime_field40746 = function sablono$core$datetime_field40746(var_args) {
  var args40747 = [];
  var len__31204__auto___40814 = arguments.length;
  var i__31205__auto___40815 = 0;
  while (true) {
    if (i__31205__auto___40815 < len__31204__auto___40814) {
      args40747.push(arguments[i__31205__auto___40815]);
      var G__40816 = i__31205__auto___40815 + 1;
      i__31205__auto___40815 = G__40816;
      continue;
    } else {
    }
    break;
  }
  var G__40749 = args40747.length;
  switch(G__40749) {
    case 1:
      return sablono.core.datetime_field40746.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.datetime_field40746.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40747.length)].join(""));;
  }
};
sablono.core.datetime_field40746.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.datetime_field40746.call(null, name__40653__auto__, null);
};
sablono.core.datetime_field40746.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "datetime", "datetime", 2135207229, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.datetime_field40746.cljs$lang$maxFixedArity = 2;
sablono.core.datetime_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_field40746);
sablono.core.datetime_local_field40750 = function sablono$core$datetime_local_field40750(var_args) {
  var args40751 = [];
  var len__31204__auto___40818 = arguments.length;
  var i__31205__auto___40819 = 0;
  while (true) {
    if (i__31205__auto___40819 < len__31204__auto___40818) {
      args40751.push(arguments[i__31205__auto___40819]);
      var G__40820 = i__31205__auto___40819 + 1;
      i__31205__auto___40819 = G__40820;
      continue;
    } else {
    }
    break;
  }
  var G__40753 = args40751.length;
  switch(G__40753) {
    case 1:
      return sablono.core.datetime_local_field40750.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.datetime_local_field40750.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40751.length)].join(""));;
  }
};
sablono.core.datetime_local_field40750.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.datetime_local_field40750.call(null, name__40653__auto__, null);
};
sablono.core.datetime_local_field40750.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "datetime-local", "datetime-local", -507312697, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.datetime_local_field40750.cljs$lang$maxFixedArity = 2;
sablono.core.datetime_local_field = sablono.core.wrap_attrs.call(null, sablono.core.datetime_local_field40750);
sablono.core.email_field40754 = function sablono$core$email_field40754(var_args) {
  var args40755 = [];
  var len__31204__auto___40822 = arguments.length;
  var i__31205__auto___40823 = 0;
  while (true) {
    if (i__31205__auto___40823 < len__31204__auto___40822) {
      args40755.push(arguments[i__31205__auto___40823]);
      var G__40824 = i__31205__auto___40823 + 1;
      i__31205__auto___40823 = G__40824;
      continue;
    } else {
    }
    break;
  }
  var G__40757 = args40755.length;
  switch(G__40757) {
    case 1:
      return sablono.core.email_field40754.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.email_field40754.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40755.length)].join(""));;
  }
};
sablono.core.email_field40754.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.email_field40754.call(null, name__40653__auto__, null);
};
sablono.core.email_field40754.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "email", "email", -1238619063, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.email_field40754.cljs$lang$maxFixedArity = 2;
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field40754);
sablono.core.file_field40758 = function sablono$core$file_field40758(var_args) {
  var args40759 = [];
  var len__31204__auto___40826 = arguments.length;
  var i__31205__auto___40827 = 0;
  while (true) {
    if (i__31205__auto___40827 < len__31204__auto___40826) {
      args40759.push(arguments[i__31205__auto___40827]);
      var G__40828 = i__31205__auto___40827 + 1;
      i__31205__auto___40827 = G__40828;
      continue;
    } else {
    }
    break;
  }
  var G__40761 = args40759.length;
  switch(G__40761) {
    case 1:
      return sablono.core.file_field40758.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.file_field40758.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40759.length)].join(""));;
  }
};
sablono.core.file_field40758.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.file_field40758.call(null, name__40653__auto__, null);
};
sablono.core.file_field40758.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "file", "file", 370885649, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.file_field40758.cljs$lang$maxFixedArity = 2;
sablono.core.file_field = sablono.core.wrap_attrs.call(null, sablono.core.file_field40758);
sablono.core.hidden_field40762 = function sablono$core$hidden_field40762(var_args) {
  var args40763 = [];
  var len__31204__auto___40830 = arguments.length;
  var i__31205__auto___40831 = 0;
  while (true) {
    if (i__31205__auto___40831 < len__31204__auto___40830) {
      args40763.push(arguments[i__31205__auto___40831]);
      var G__40832 = i__31205__auto___40831 + 1;
      i__31205__auto___40831 = G__40832;
      continue;
    } else {
    }
    break;
  }
  var G__40765 = args40763.length;
  switch(G__40765) {
    case 1:
      return sablono.core.hidden_field40762.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.hidden_field40762.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40763.length)].join(""));;
  }
};
sablono.core.hidden_field40762.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.hidden_field40762.call(null, name__40653__auto__, null);
};
sablono.core.hidden_field40762.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "hidden", "hidden", 1328025435, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.hidden_field40762.cljs$lang$maxFixedArity = 2;
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field40762);
sablono.core.month_field40766 = function sablono$core$month_field40766(var_args) {
  var args40767 = [];
  var len__31204__auto___40834 = arguments.length;
  var i__31205__auto___40835 = 0;
  while (true) {
    if (i__31205__auto___40835 < len__31204__auto___40834) {
      args40767.push(arguments[i__31205__auto___40835]);
      var G__40836 = i__31205__auto___40835 + 1;
      i__31205__auto___40835 = G__40836;
      continue;
    } else {
    }
    break;
  }
  var G__40769 = args40767.length;
  switch(G__40769) {
    case 1:
      return sablono.core.month_field40766.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.month_field40766.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40767.length)].join(""));;
  }
};
sablono.core.month_field40766.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.month_field40766.call(null, name__40653__auto__, null);
};
sablono.core.month_field40766.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "month", "month", -319717006, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.month_field40766.cljs$lang$maxFixedArity = 2;
sablono.core.month_field = sablono.core.wrap_attrs.call(null, sablono.core.month_field40766);
sablono.core.number_field40770 = function sablono$core$number_field40770(var_args) {
  var args40771 = [];
  var len__31204__auto___40838 = arguments.length;
  var i__31205__auto___40839 = 0;
  while (true) {
    if (i__31205__auto___40839 < len__31204__auto___40838) {
      args40771.push(arguments[i__31205__auto___40839]);
      var G__40840 = i__31205__auto___40839 + 1;
      i__31205__auto___40839 = G__40840;
      continue;
    } else {
    }
    break;
  }
  var G__40773 = args40771.length;
  switch(G__40773) {
    case 1:
      return sablono.core.number_field40770.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.number_field40770.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40771.length)].join(""));;
  }
};
sablono.core.number_field40770.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.number_field40770.call(null, name__40653__auto__, null);
};
sablono.core.number_field40770.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "number", "number", -1084057331, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.number_field40770.cljs$lang$maxFixedArity = 2;
sablono.core.number_field = sablono.core.wrap_attrs.call(null, sablono.core.number_field40770);
sablono.core.password_field40774 = function sablono$core$password_field40774(var_args) {
  var args40775 = [];
  var len__31204__auto___40842 = arguments.length;
  var i__31205__auto___40843 = 0;
  while (true) {
    if (i__31205__auto___40843 < len__31204__auto___40842) {
      args40775.push(arguments[i__31205__auto___40843]);
      var G__40844 = i__31205__auto___40843 + 1;
      i__31205__auto___40843 = G__40844;
      continue;
    } else {
    }
    break;
  }
  var G__40777 = args40775.length;
  switch(G__40777) {
    case 1:
      return sablono.core.password_field40774.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.password_field40774.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40775.length)].join(""));;
  }
};
sablono.core.password_field40774.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.password_field40774.call(null, name__40653__auto__, null);
};
sablono.core.password_field40774.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "password", "password", 2057553998, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.password_field40774.cljs$lang$maxFixedArity = 2;
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field40774);
sablono.core.range_field40778 = function sablono$core$range_field40778(var_args) {
  var args40779 = [];
  var len__31204__auto___40846 = arguments.length;
  var i__31205__auto___40847 = 0;
  while (true) {
    if (i__31205__auto___40847 < len__31204__auto___40846) {
      args40779.push(arguments[i__31205__auto___40847]);
      var G__40848 = i__31205__auto___40847 + 1;
      i__31205__auto___40847 = G__40848;
      continue;
    } else {
    }
    break;
  }
  var G__40781 = args40779.length;
  switch(G__40781) {
    case 1:
      return sablono.core.range_field40778.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.range_field40778.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40779.length)].join(""));;
  }
};
sablono.core.range_field40778.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.range_field40778.call(null, name__40653__auto__, null);
};
sablono.core.range_field40778.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "range", "range", -1014743483, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.range_field40778.cljs$lang$maxFixedArity = 2;
sablono.core.range_field = sablono.core.wrap_attrs.call(null, sablono.core.range_field40778);
sablono.core.search_field40782 = function sablono$core$search_field40782(var_args) {
  var args40783 = [];
  var len__31204__auto___40850 = arguments.length;
  var i__31205__auto___40851 = 0;
  while (true) {
    if (i__31205__auto___40851 < len__31204__auto___40850) {
      args40783.push(arguments[i__31205__auto___40851]);
      var G__40852 = i__31205__auto___40851 + 1;
      i__31205__auto___40851 = G__40852;
      continue;
    } else {
    }
    break;
  }
  var G__40785 = args40783.length;
  switch(G__40785) {
    case 1:
      return sablono.core.search_field40782.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.search_field40782.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40783.length)].join(""));;
  }
};
sablono.core.search_field40782.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.search_field40782.call(null, name__40653__auto__, null);
};
sablono.core.search_field40782.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "search", "search", -1089495947, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.search_field40782.cljs$lang$maxFixedArity = 2;
sablono.core.search_field = sablono.core.wrap_attrs.call(null, sablono.core.search_field40782);
sablono.core.tel_field40786 = function sablono$core$tel_field40786(var_args) {
  var args40787 = [];
  var len__31204__auto___40854 = arguments.length;
  var i__31205__auto___40855 = 0;
  while (true) {
    if (i__31205__auto___40855 < len__31204__auto___40854) {
      args40787.push(arguments[i__31205__auto___40855]);
      var G__40856 = i__31205__auto___40855 + 1;
      i__31205__auto___40855 = G__40856;
      continue;
    } else {
    }
    break;
  }
  var G__40789 = args40787.length;
  switch(G__40789) {
    case 1:
      return sablono.core.tel_field40786.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.tel_field40786.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40787.length)].join(""));;
  }
};
sablono.core.tel_field40786.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.tel_field40786.call(null, name__40653__auto__, null);
};
sablono.core.tel_field40786.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "tel", "tel", 1864669686, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.tel_field40786.cljs$lang$maxFixedArity = 2;
sablono.core.tel_field = sablono.core.wrap_attrs.call(null, sablono.core.tel_field40786);
sablono.core.text_field40790 = function sablono$core$text_field40790(var_args) {
  var args40791 = [];
  var len__31204__auto___40858 = arguments.length;
  var i__31205__auto___40859 = 0;
  while (true) {
    if (i__31205__auto___40859 < len__31204__auto___40858) {
      args40791.push(arguments[i__31205__auto___40859]);
      var G__40860 = i__31205__auto___40859 + 1;
      i__31205__auto___40859 = G__40860;
      continue;
    } else {
    }
    break;
  }
  var G__40793 = args40791.length;
  switch(G__40793) {
    case 1:
      return sablono.core.text_field40790.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.text_field40790.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40791.length)].join(""));;
  }
};
sablono.core.text_field40790.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.text_field40790.call(null, name__40653__auto__, null);
};
sablono.core.text_field40790.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "text", "text", -150030170, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.text_field40790.cljs$lang$maxFixedArity = 2;
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field40790);
sablono.core.time_field40794 = function sablono$core$time_field40794(var_args) {
  var args40795 = [];
  var len__31204__auto___40862 = arguments.length;
  var i__31205__auto___40863 = 0;
  while (true) {
    if (i__31205__auto___40863 < len__31204__auto___40862) {
      args40795.push(arguments[i__31205__auto___40863]);
      var G__40864 = i__31205__auto___40863 + 1;
      i__31205__auto___40863 = G__40864;
      continue;
    } else {
    }
    break;
  }
  var G__40797 = args40795.length;
  switch(G__40797) {
    case 1:
      return sablono.core.time_field40794.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.time_field40794.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40795.length)].join(""));;
  }
};
sablono.core.time_field40794.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.time_field40794.call(null, name__40653__auto__, null);
};
sablono.core.time_field40794.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "time", "time", -1268547887, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.time_field40794.cljs$lang$maxFixedArity = 2;
sablono.core.time_field = sablono.core.wrap_attrs.call(null, sablono.core.time_field40794);
sablono.core.url_field40798 = function sablono$core$url_field40798(var_args) {
  var args40799 = [];
  var len__31204__auto___40866 = arguments.length;
  var i__31205__auto___40867 = 0;
  while (true) {
    if (i__31205__auto___40867 < len__31204__auto___40866) {
      args40799.push(arguments[i__31205__auto___40867]);
      var G__40868 = i__31205__auto___40867 + 1;
      i__31205__auto___40867 = G__40868;
      continue;
    } else {
    }
    break;
  }
  var G__40801 = args40799.length;
  switch(G__40801) {
    case 1:
      return sablono.core.url_field40798.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.url_field40798.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40799.length)].join(""));;
  }
};
sablono.core.url_field40798.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.url_field40798.call(null, name__40653__auto__, null);
};
sablono.core.url_field40798.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "url", "url", 1916828573, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.url_field40798.cljs$lang$maxFixedArity = 2;
sablono.core.url_field = sablono.core.wrap_attrs.call(null, sablono.core.url_field40798);
sablono.core.week_field40802 = function sablono$core$week_field40802(var_args) {
  var args40803 = [];
  var len__31204__auto___40870 = arguments.length;
  var i__31205__auto___40871 = 0;
  while (true) {
    if (i__31205__auto___40871 < len__31204__auto___40870) {
      args40803.push(arguments[i__31205__auto___40871]);
      var G__40872 = i__31205__auto___40871 + 1;
      i__31205__auto___40871 = G__40872;
      continue;
    } else {
    }
    break;
  }
  var G__40805 = args40803.length;
  switch(G__40805) {
    case 1:
      return sablono.core.week_field40802.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.week_field40802.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40803.length)].join(""));;
  }
};
sablono.core.week_field40802.cljs$core$IFn$_invoke$arity$1 = function(name__40653__auto__) {
  return sablono.core.week_field40802.call(null, name__40653__auto__, null);
};
sablono.core.week_field40802.cljs$core$IFn$_invoke$arity$2 = function(name__40653__auto__, value__40654__auto__) {
  return sablono.core.input_field_STAR_.call(null, [cljs.core.str(new cljs.core.Symbol(null, "week", "week", 314058249, null))].join(""), name__40653__auto__, value__40654__auto__);
};
sablono.core.week_field40802.cljs$lang$maxFixedArity = 2;
sablono.core.week_field = sablono.core.wrap_attrs.call(null, sablono.core.week_field40802);
sablono.core.file_upload = sablono.core.file_field;
sablono.core.check_box40874 = function sablono$core$check_box40874(var_args) {
  var args40875 = [];
  var len__31204__auto___40878 = arguments.length;
  var i__31205__auto___40879 = 0;
  while (true) {
    if (i__31205__auto___40879 < len__31204__auto___40878) {
      args40875.push(arguments[i__31205__auto___40879]);
      var G__40880 = i__31205__auto___40879 + 1;
      i__31205__auto___40879 = G__40880;
      continue;
    } else {
    }
    break;
  }
  var G__40877 = args40875.length;
  switch(G__40877) {
    case 1:
      return sablono.core.check_box40874.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.check_box40874.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return sablono.core.check_box40874.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40875.length)].join(""));;
  }
};
sablono.core.check_box40874.cljs$core$IFn$_invoke$arity$1 = function(name) {
  return sablono.core.check_box40874.call(null, name, null);
};
sablono.core.check_box40874.cljs$core$IFn$_invoke$arity$2 = function(name, checked_QMARK_) {
  return sablono.core.check_box40874.call(null, name, checked_QMARK_, "true");
};
sablono.core.check_box40874.cljs$core$IFn$_invoke$arity$3 = function(name, checked_QMARK_, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "checkbox", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), 
  function() {
    var or__30096__auto__ = value;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return undefined;
    }
  }(), new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
};
sablono.core.check_box40874.cljs$lang$maxFixedArity = 3;
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box40874);
sablono.core.radio_button40882 = function sablono$core$radio_button40882(var_args) {
  var args40883 = [];
  var len__31204__auto___40886 = arguments.length;
  var i__31205__auto___40887 = 0;
  while (true) {
    if (i__31205__auto___40887 < len__31204__auto___40886) {
      args40883.push(arguments[i__31205__auto___40887]);
      var G__40888 = i__31205__auto___40887 + 1;
      i__31205__auto___40887 = G__40888;
      continue;
    } else {
    }
    break;
  }
  var G__40885 = args40883.length;
  switch(G__40885) {
    case 1:
      return sablono.core.radio_button40882.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.radio_button40882.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return sablono.core.radio_button40882.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40883.length)].join(""));;
  }
};
sablono.core.radio_button40882.cljs$core$IFn$_invoke$arity$1 = function(group) {
  return sablono.core.radio_button40882.call(null, group, null);
};
sablono.core.radio_button40882.cljs$core$IFn$_invoke$arity$2 = function(group, checked_QMARK_) {
  return sablono.core.radio_button40882.call(null, group, checked_QMARK_, "true");
};
sablono.core.radio_button40882.cljs$core$IFn$_invoke$arity$3 = function(group, checked_QMARK_, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "radio", new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, [cljs.core.str(sablono.util.as_str.call(null, group)), cljs.core.str("-"), 
  cljs.core.str(sablono.util.as_str.call(null, value))].join("")), new cljs.core.Keyword(null, "value", "value", 305978217), function() {
    var or__30096__auto__ = value;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return undefined;
    }
  }(), new cljs.core.Keyword(null, "checked", "checked", -50955819), checked_QMARK_], null)], null);
};
sablono.core.radio_button40882.cljs$lang$maxFixedArity = 3;
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button40882);
sablono.core.hash_key = function sablono$core$hash_key(x) {
  return goog.string.hashCode(cljs.core.pr_str.call(null, x));
};
sablono.core.select_options40890 = function sablono$core$select_options40890(coll) {
  var iter__30879__auto__ = function sablono$core$select_options40890_$_iter__40907(s__40908) {
    return new cljs.core.LazySeq(null, function() {
      var s__40908__$1 = s__40908;
      while (true) {
        var temp__4657__auto__ = cljs.core.seq.call(null, s__40908__$1);
        if (temp__4657__auto__) {
          var s__40908__$2 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__40908__$2)) {
            var c__30877__auto__ = cljs.core.chunk_first.call(null, s__40908__$2);
            var size__30878__auto__ = cljs.core.count.call(null, c__30877__auto__);
            var b__40910 = cljs.core.chunk_buffer.call(null, size__30878__auto__);
            if (function() {
              var i__40909 = 0;
              while (true) {
                if (i__40909 < size__30878__auto__) {
                  var x = cljs.core._nth.call(null, c__30877__auto__, i__40909);
                  cljs.core.chunk_append.call(null, b__40910, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                    var vec__40917 = x;
                    var text = cljs.core.nth.call(null, vec__40917, 0, null);
                    var val = cljs.core.nth.call(null, vec__40917, 1, null);
                    var disabled_QMARK_ = cljs.core.nth.call(null, vec__40917, 2, null);
                    var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
                    if (cljs.core.sequential_QMARK_.call(null, val)) {
                      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), sablono.core.hash_key.call(null, text), new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), sablono.core.select_options40890.call(null, val)], null);
                    } else {
                      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1, new cljs.core.Keyword(null, "key", "key", -1516042587), sablono.core.hash_key.call(null, val), new cljs.core.Keyword(null, "value", "value", 305978217), val], null), text], null);
                    }
                  }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), sablono.core.hash_key.call(null, x), new cljs.core.Keyword(null, "value", "value", 305978217), x], null), x], null));
                  var G__40923 = i__40909 + 1;
                  i__40909 = G__40923;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40910), sablono$core$select_options40890_$_iter__40907.call(null, cljs.core.chunk_rest.call(null, s__40908__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__40910), null);
            }
          } else {
            var x = cljs.core.first.call(null, s__40908__$2);
            return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
              var vec__40920 = x;
              var text = cljs.core.nth.call(null, vec__40920, 0, null);
              var val = cljs.core.nth.call(null, vec__40920, 1, null);
              var disabled_QMARK_ = cljs.core.nth.call(null, vec__40920, 2, null);
              var disabled_QMARK___$1 = cljs.core.boolean$.call(null, disabled_QMARK_);
              if (cljs.core.sequential_QMARK_.call(null, val)) {
                return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 1738282218), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), sablono.core.hash_key.call(null, text), new cljs.core.Keyword(null, "label", "label", 1718410804), text], null), sablono.core.select_options40890.call(null, val)], null);
              } else {
                return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "disabled", "disabled", -1529784218), disabled_QMARK___$1, new cljs.core.Keyword(null, "key", "key", -1516042587), sablono.core.hash_key.call(null, val), new cljs.core.Keyword(null, "value", "value", 305978217), val], null), text], null);
              }
            }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 65132272), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), sablono.core.hash_key.call(null, x), new cljs.core.Keyword(null, "value", "value", 305978217), x], null), x], null), sablono$core$select_options40890_$_iter__40907.call(null, cljs.core.rest.call(null, s__40908__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__30879__auto__.call(null, coll);
};
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options40890);
sablono.core.drop_down40924 = function sablono$core$drop_down40924(var_args) {
  var args40925 = [];
  var len__31204__auto___40928 = arguments.length;
  var i__31205__auto___40929 = 0;
  while (true) {
    if (i__31205__auto___40929 < len__31204__auto___40928) {
      args40925.push(arguments[i__31205__auto___40929]);
      var G__40930 = i__31205__auto___40929 + 1;
      i__31205__auto___40929 = G__40930;
      continue;
    } else {
    }
    break;
  }
  var G__40927 = args40925.length;
  switch(G__40927) {
    case 2:
      return sablono.core.drop_down40924.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return sablono.core.drop_down40924.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40925.length)].join(""));;
  }
};
sablono.core.drop_down40924.cljs$core$IFn$_invoke$arity$2 = function(name, options) {
  return sablono.core.drop_down40924.call(null, name, options, null);
};
sablono.core.drop_down40924.cljs$core$IFn$_invoke$arity$3 = function(name, options, selected) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 1147833503), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
};
sablono.core.drop_down40924.cljs$lang$maxFixedArity = 3;
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down40924);
sablono.core.text_area40932 = function sablono$core$text_area40932(var_args) {
  var args40933 = [];
  var len__31204__auto___40936 = arguments.length;
  var i__31205__auto___40937 = 0;
  while (true) {
    if (i__31205__auto___40937 < len__31204__auto___40936) {
      args40933.push(arguments[i__31205__auto___40937]);
      var G__40938 = i__31205__auto___40937 + 1;
      i__31205__auto___40937 = G__40938;
      continue;
    } else {
    }
    break;
  }
  var G__40935 = args40933.length;
  switch(G__40935) {
    case 1:
      return sablono.core.text_area40932.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return sablono.core.text_area40932.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args40933.length)].join(""));;
  }
};
sablono.core.text_area40932.cljs$core$IFn$_invoke$arity$1 = function(name) {
  return sablono.core.text_area40932.call(null, name, null);
};
sablono.core.text_area40932.cljs$core$IFn$_invoke$arity$2 = function(name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", -650375824), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", -1388402092), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 305978217), function() {
    var or__30096__auto__ = value;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return undefined;
    }
  }()], null)], null);
};
sablono.core.text_area40932.cljs$lang$maxFixedArity = 2;
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area40932);
sablono.core.label40940 = function sablono$core$label40940(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1718410804), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label40940);
sablono.core.submit_button40941 = function sablono$core$submit_button40941(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "submit", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button40941);
sablono.core.reset_button40942 = function sablono$core$reset_button40942(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), "reset", new cljs.core.Keyword(null, "value", "value", 305978217), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button40942);
sablono.core.form_to40943 = function sablono$core$form_to40943(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___40950 = arguments.length;
  var i__31205__auto___40951 = 0;
  while (true) {
    if (i__31205__auto___40951 < len__31204__auto___40950) {
      args__31211__auto__.push(arguments[i__31205__auto___40951]);
      var G__40952 = i__31205__auto___40951 + 1;
      i__31205__auto___40951 = G__40952;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return sablono.core.form_to40943.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
sablono.core.form_to40943.cljs$core$IFn$_invoke$arity$variadic = function(p__40946, body) {
  var vec__40947 = p__40946;
  var method = cljs.core.nth.call(null, vec__40947, 0, null);
  var action = cljs.core.nth.call(null, vec__40947, 1, null);
  var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
  var action_uri = sablono.util.to_uri.call(null, action);
  return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1683182755), null, new cljs.core.Keyword(null, "post", "post", 269697687), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "method", "method", 55703592), method_str, new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", -1624062471), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 55703592), "POST", new cljs.core.Keyword(null, "action", "action", -811238024), action_uri], null), sablono.core.hidden_field.call(null, 
  new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), 3735928559], null), "_method", method_str)], null), body));
};
sablono.core.form_to40943.cljs$lang$maxFixedArity = 1;
sablono.core.form_to40943.cljs$lang$applyTo = function(seq40944) {
  var G__40945 = cljs.core.first.call(null, seq40944);
  var seq40944__$1 = cljs.core.next.call(null, seq40944);
  return sablono.core.form_to40943.cljs$core$IFn$_invoke$arity$variadic(G__40945, seq40944__$1);
};
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to40943);
goog.provide("rum.util");
goog.require("cljs.core");
rum.util.collect = function rum$util$collect(key, mixins) {
  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(m) {
    return cljs.core.get.call(null, m, key);
  }, mixins));
};
rum.util.collect_STAR_ = function rum$util$collect_STAR_(keys, mixins) {
  return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(m) {
    return cljs.core.map.call(null, function(k) {
      return cljs.core.get.call(null, m, k);
    }, keys);
  }, mixins));
};
rum.util.call_all = function rum$util$call_all(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___40958 = arguments.length;
  var i__31205__auto___40959 = 0;
  while (true) {
    if (i__31205__auto___40959 < len__31204__auto___40958) {
      args__31211__auto__.push(arguments[i__31205__auto___40959]);
      var G__40960 = i__31205__auto___40959 + 1;
      i__31205__auto___40959 = G__40960;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 2 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(2), 0, null) : null;
  return rum.util.call_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31212__auto__);
};
rum.util.call_all.cljs$core$IFn$_invoke$arity$variadic = function(state, fns, args) {
  return cljs.core.reduce.call(null, function(state__$1, fn) {
    return cljs.core.apply.call(null, fn, state__$1, args);
  }, state, fns);
};
rum.util.call_all.cljs$lang$maxFixedArity = 2;
rum.util.call_all.cljs$lang$applyTo = function(seq40955) {
  var G__40956 = cljs.core.first.call(null, seq40955);
  var seq40955__$1 = cljs.core.next.call(null, seq40955);
  var G__40957 = cljs.core.first.call(null, seq40955__$1);
  var seq40955__$2 = cljs.core.next.call(null, seq40955__$1);
  return rum.util.call_all.cljs$core$IFn$_invoke$arity$variadic(G__40956, G__40957, seq40955__$2);
};
rum.util.filter_vals = function rum$util$filter_vals(pred, m) {
  return cljs.core.reduce_kv.call(null, function(m__$1, k, v) {
    if (cljs.core.truth_(pred.call(null, v))) {
      return cljs.core.assoc.call(null, m__$1, k, v);
    } else {
      return m__$1;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
goog.provide("rum.core");
goog.require("cljs.core");
goog.require("sablono.core");
goog.require("rum.cursor");
goog.require("rum.util");
goog.require("rum.derived_atom");
rum.core.state = function rum$core$state(comp) {
  return comp.state[":rum/state"];
};
rum.core.build_class = function rum$core$build_class(render, mixins, display_name) {
  var init = rum.util.collect.call(null, new cljs.core.Keyword(null, "init", "init", -1875481434), mixins);
  var will_mount = rum.util.collect_STAR_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "will-mount", "will-mount", -434633071), new cljs.core.Keyword(null, "before-render", "before-render", 71256781)], null), mixins);
  var render__$1 = render;
  var wrap_render = rum.util.collect.call(null, new cljs.core.Keyword(null, "wrap-render", "wrap-render", 1782000986), mixins);
  var wrapped_render = cljs.core.reduce.call(null, function(init, will_mount, render__$1, wrap_render) {
    return function(p1__41341_SHARP_, p2__41340_SHARP_) {
      return p2__41340_SHARP_.call(null, p1__41341_SHARP_);
    };
  }(init, will_mount, render__$1, wrap_render), render__$1, wrap_render);
  var did_mount = rum.util.collect_STAR_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "did-mount", "did-mount", 918232960), new cljs.core.Keyword(null, "after-render", "after-render", 1997533433)], null), mixins);
  var did_remount = rum.util.collect.call(null, new cljs.core.Keyword(null, "did-remount", "did-remount", 1362550500), mixins);
  var should_update = rum.util.collect.call(null, new cljs.core.Keyword(null, "should-update", "should-update", -1292781795), mixins);
  var will_update = rum.util.collect_STAR_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "will-update", "will-update", 328062998), new cljs.core.Keyword(null, "before-render", "before-render", 71256781)], null), mixins);
  var did_update = rum.util.collect_STAR_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "did-update", "did-update", -2143702256), new cljs.core.Keyword(null, "after-render", "after-render", 1997533433)], null), mixins);
  var will_unmount = rum.util.collect.call(null, new cljs.core.Keyword(null, "will-unmount", "will-unmount", -808051550), mixins);
  var child_context = rum.util.collect.call(null, new cljs.core.Keyword(null, "child-context", "child-context", -1375270295), mixins);
  var class_props = cljs.core.reduce.call(null, cljs.core.merge, rum.util.collect.call(null, new cljs.core.Keyword(null, "class-properties", "class-properties", 1351279702), mixins));
  return React.createClass(cljs.core.clj__GT_js.call(null, rum.util.filter_vals.call(null, cljs.core.some_QMARK_, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "displayName", "displayName", -809144601), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 
  559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, "getChildContext", "getChildContext", -1321948108), new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, 
  "componentWillMount", "componentWillMount", -285327619)], [cljs.core.empty_QMARK_.call(null, did_update) ? null : function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function(_, ___$1) {
      var this$ = this;
      return cljs.core._vreset_BANG_.call(null, rum.core.state.call(null, this$), rum.util.call_all.call(null, cljs.core._deref.call(null, rum.core.state.call(null, this$)), did_update));
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), display_name, cljs.core.empty_QMARK_.call(null, will_unmount) ? null : function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function() {
      var this$ = this;
      return cljs.core._vreset_BANG_.call(null, rum.core.state.call(null, this$), rum.util.call_all.call(null, cljs.core._deref.call(null, rum.core.state.call(null, this$)), will_unmount));
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function(next_props) {
      var this$ = this;
      var old_state = cljs.core.deref.call(null, rum.core.state.call(null, this$));
      var state = cljs.core.merge.call(null, old_state, next_props[":rum/initial-state"]);
      var next_state = cljs.core.reduce.call(null, function(old_state, state, this$, init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
        return function(p1__41343_SHARP_, p2__41342_SHARP_) {
          return p2__41342_SHARP_.call(null, old_state, p1__41343_SHARP_);
        };
      }(old_state, state, this$, init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), state, did_remount);
      return this$.setState({":rum/state":cljs.core.volatile_BANG_.call(null, next_state)});
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), cljs.core.empty_QMARK_.call(null, should_update) ? null : function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function(next_props, next_state) {
      var this$ = this;
      var old_state = cljs.core.deref.call(null, rum.core.state.call(null, this$));
      var new_state = cljs.core.deref.call(null, next_state[":rum/state"]);
      var or__30096__auto__ = cljs.core.some.call(null, function(old_state, new_state, this$, init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
        return function(p1__41344_SHARP_) {
          return p1__41344_SHARP_.call(null, old_state, new_state);
        };
      }(old_state, new_state, this$, init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), should_update);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        return false;
      }
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function() {
      var this$ = this;
      var state = rum.core.state.call(null, this$);
      var vec__41349 = wrapped_render.call(null, cljs.core.deref.call(null, state));
      var dom = cljs.core.nth.call(null, vec__41349, 0, null);
      var next_state = cljs.core.nth.call(null, vec__41349, 1, null);
      cljs.core.vreset_BANG_.call(null, state, next_state);
      return dom;
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), cljs.core.empty_QMARK_.call(null, child_context) ? null : function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function() {
      var this$ = this;
      var state = cljs.core.deref.call(null, rum.core.state.call(null, this$));
      return cljs.core.clj__GT_js.call(null, cljs.core.transduce.call(null, cljs.core.map.call(null, function(state, this$, init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
        return function(p1__41345_SHARP_) {
          return p1__41345_SHARP_.call(null, state);
        };
      }(state, this$, init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props)), cljs.core.merge, cljs.core.PersistentArrayMap.EMPTY, child_context));
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), cljs.core.empty_QMARK_.call(null, will_update) ? null : function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function(_, next_state) {
      var this$ = this;
      var new_state = next_state[":rum/state"];
      return cljs.core._vreset_BANG_.call(null, new_state, rum.util.call_all.call(null, cljs.core._deref.call(null, new_state), will_update));
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function() {
      var this$ = this;
      var props = this$.props;
      var state = rum.util.call_all.call(null, cljs.core.assoc.call(null, props[":rum/initial-state"], new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248), this$), init, props);
      return {":rum/state":cljs.core.volatile_BANG_.call(null, state)};
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), cljs.core.empty_QMARK_.call(null, did_mount) ? null : function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function() {
      var this$ = this;
      return cljs.core._vreset_BANG_.call(null, rum.core.state.call(null, this$), rum.util.call_all.call(null, cljs.core._deref.call(null, rum.core.state.call(null, this$)), did_mount));
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props), cljs.core.empty_QMARK_.call(null, will_mount) ? null : function(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props) {
    return function() {
      var this$ = this;
      return cljs.core._vreset_BANG_.call(null, rum.core.state.call(null, this$), rum.util.call_all.call(null, cljs.core._deref.call(null, rum.core.state.call(null, this$)), will_mount));
    };
  }(init, will_mount, render__$1, wrap_render, wrapped_render, did_mount, did_remount, should_update, will_update, did_update, will_unmount, child_context, class_props)]), class_props))));
};
rum.core.build_ctor = function rum$core$build_ctor(render, mixins, display_name) {
  var class$ = rum.core.build_class.call(null, render, mixins, display_name);
  var key_fn = cljs.core.first.call(null, rum.util.collect.call(null, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), mixins));
  var ctor = cljs.core.some_QMARK_.call(null, key_fn) ? function(class$, key_fn) {
    return function() {
      var G__41352__delegate = function(args) {
        var props = {":rum/initial-state":new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("rum", "args", "rum/args", 1315791754), args], null), "key":cljs.core.apply.call(null, key_fn, args)};
        return React.createElement(class$, props);
      };
      var G__41352 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__41353__i = 0, G__41353__a = new Array(arguments.length - 0);
          while (G__41353__i < G__41353__a.length) {
            G__41353__a[G__41353__i] = arguments[G__41353__i + 0];
            ++G__41353__i;
          }
          args = new cljs.core.IndexedSeq(G__41353__a, 0);
        }
        return G__41352__delegate.call(this, args);
      };
      G__41352.cljs$lang$maxFixedArity = 0;
      G__41352.cljs$lang$applyTo = function(arglist__41354) {
        var args = cljs.core.seq(arglist__41354);
        return G__41352__delegate(args);
      };
      G__41352.cljs$core$IFn$_invoke$arity$variadic = G__41352__delegate;
      return G__41352;
    }();
  }(class$, key_fn) : function(class$, key_fn) {
    return function() {
      var G__41355__delegate = function(args) {
        var props = {":rum/initial-state":new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("rum", "args", "rum/args", 1315791754), args], null)};
        return React.createElement(class$, props);
      };
      var G__41355 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__41356__i = 0, G__41356__a = new Array(arguments.length - 0);
          while (G__41356__i < G__41356__a.length) {
            G__41356__a[G__41356__i] = arguments[G__41356__i + 0];
            ++G__41356__i;
          }
          args = new cljs.core.IndexedSeq(G__41356__a, 0);
        }
        return G__41355__delegate.call(this, args);
      };
      G__41355.cljs$lang$maxFixedArity = 0;
      G__41355.cljs$lang$applyTo = function(arglist__41357) {
        var args = cljs.core.seq(arglist__41357);
        return G__41355__delegate(args);
      };
      G__41355.cljs$core$IFn$_invoke$arity$variadic = G__41355__delegate;
      return G__41355;
    }();
  }(class$, key_fn);
  return cljs.core.with_meta.call(null, ctor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("rum", "class", "rum/class", -2030775258), class$], null));
};
rum.core.build_defc = function rum$core$build_defc(render_body, mixins, display_name) {
  if (cljs.core.empty_QMARK_.call(null, mixins)) {
    var class$ = function(props) {
      return cljs.core.apply.call(null, render_body, props[":rum/args"]);
    };
    var _ = class$["displayName"] = display_name;
    var ctor = function(class$, _) {
      return function() {
        var G__41358__delegate = function(args) {
          return React.createElement(class$, {":rum/args":args});
        };
        var G__41358 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__41359__i = 0, G__41359__a = new Array(arguments.length - 0);
            while (G__41359__i < G__41359__a.length) {
              G__41359__a[G__41359__i] = arguments[G__41359__i + 0];
              ++G__41359__i;
            }
            args = new cljs.core.IndexedSeq(G__41359__a, 0);
          }
          return G__41358__delegate.call(this, args);
        };
        G__41358.cljs$lang$maxFixedArity = 0;
        G__41358.cljs$lang$applyTo = function(arglist__41360) {
          var args = cljs.core.seq(arglist__41360);
          return G__41358__delegate(args);
        };
        G__41358.cljs$core$IFn$_invoke$arity$variadic = G__41358__delegate;
        return G__41358;
      }();
    }(class$, _);
    return cljs.core.with_meta.call(null, ctor, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("rum", "class", "rum/class", -2030775258), class$], null));
  } else {
    var render = function(state) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, render_body, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state)), state], null);
    };
    return rum.core.build_ctor.call(null, render, mixins, display_name);
  }
};
rum.core.build_defcs = function rum$core$build_defcs(render_body, mixins, display_name) {
  var render = function(state) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, render_body, state, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state)), state], null);
  };
  return rum.core.build_ctor.call(null, render, mixins, display_name);
};
rum.core.build_defcc = function rum$core$build_defcc(render_body, mixins, display_name) {
  var render = function(state) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, render_body, (new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248)).cljs$core$IFn$_invoke$arity$1(state), (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state)), state], null);
  };
  return rum.core.build_ctor.call(null, render, mixins, display_name);
};
rum.core.schedule = function() {
  var or__30096__auto__ = function() {
    var and__30084__auto__ = typeof window !== "undefined";
    if (and__30084__auto__) {
      var or__30096__auto__ = window.requestAnimationFrame;
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        var or__30096__auto____$1 = window.webkitRequestAnimationFrame;
        if (cljs.core.truth_(or__30096__auto____$1)) {
          return or__30096__auto____$1;
        } else {
          var or__30096__auto____$2 = window.mozRequestAnimationFrame;
          if (cljs.core.truth_(or__30096__auto____$2)) {
            return or__30096__auto____$2;
          } else {
            return window.msRequestAnimationFrame;
          }
        }
      }
    } else {
      return and__30084__auto__;
    }
  }();
  if (cljs.core.truth_(or__30096__auto__)) {
    return or__30096__auto__;
  } else {
    return function(or__30096__auto__) {
      return function(p1__41361_SHARP_) {
        return setTimeout(p1__41361_SHARP_, 16);
      };
    }(or__30096__auto__);
  }
}();
rum.core.batch = function() {
  var or__30096__auto__ = typeof ReactNative !== "undefined" ? ReactNative.unstable_batchedUpdates : null;
  if (cljs.core.truth_(or__30096__auto__)) {
    return or__30096__auto__;
  } else {
    var or__30096__auto____$1 = typeof ReactDOM !== "undefined" ? ReactDOM.unstable_batchedUpdates : null;
    if (cljs.core.truth_(or__30096__auto____$1)) {
      return or__30096__auto____$1;
    } else {
      return function(or__30096__auto____$1, or__30096__auto__) {
        return function(f, a) {
          return f.call(null, a);
        };
      }(or__30096__auto____$1, or__30096__auto__);
    }
  }
}();
rum.core.empty_queue = cljs.core.PersistentVector.EMPTY;
rum.core.render_queue = cljs.core.volatile_BANG_.call(null, rum.core.empty_queue);
rum.core.render_all = function rum$core$render_all(queue) {
  var seq__41368 = cljs.core.seq.call(null, queue);
  var chunk__41370 = null;
  var count__41371 = 0;
  var i__41372 = 0;
  while (true) {
    if (i__41372 < count__41371) {
      var comp = cljs.core._nth.call(null, chunk__41370, i__41372);
      if (cljs.core.truth_(comp.isMounted())) {
        comp.forceUpdate();
        var G__41374 = seq__41368;
        var G__41375 = chunk__41370;
        var G__41376 = count__41371;
        var G__41377 = i__41372 + 1;
        seq__41368 = G__41374;
        chunk__41370 = G__41375;
        count__41371 = G__41376;
        i__41372 = G__41377;
        continue;
      } else {
        var G__41378 = seq__41368;
        var G__41379 = chunk__41370;
        var G__41380 = count__41371;
        var G__41381 = i__41372 + 1;
        seq__41368 = G__41378;
        chunk__41370 = G__41379;
        count__41371 = G__41380;
        i__41372 = G__41381;
        continue;
      }
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__41368);
      if (temp__4657__auto__) {
        var seq__41368__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__41368__$1)) {
          var c__30910__auto__ = cljs.core.chunk_first.call(null, seq__41368__$1);
          var G__41382 = cljs.core.chunk_rest.call(null, seq__41368__$1);
          var G__41383 = c__30910__auto__;
          var G__41384 = cljs.core.count.call(null, c__30910__auto__);
          var G__41385 = 0;
          seq__41368 = G__41382;
          chunk__41370 = G__41383;
          count__41371 = G__41384;
          i__41372 = G__41385;
          continue;
        } else {
          var comp = cljs.core.first.call(null, seq__41368__$1);
          if (cljs.core.truth_(comp.isMounted())) {
            comp.forceUpdate();
            var G__41386 = cljs.core.next.call(null, seq__41368__$1);
            var G__41387 = null;
            var G__41388 = 0;
            var G__41389 = 0;
            seq__41368 = G__41386;
            chunk__41370 = G__41387;
            count__41371 = G__41388;
            i__41372 = G__41389;
            continue;
          } else {
            var G__41390 = cljs.core.next.call(null, seq__41368__$1);
            var G__41391 = null;
            var G__41392 = 0;
            var G__41393 = 0;
            seq__41368 = G__41390;
            chunk__41370 = G__41391;
            count__41371 = G__41392;
            i__41372 = G__41393;
            continue;
          }
        }
      } else {
        return null;
      }
    }
    break;
  }
};
rum.core.render = function rum$core$render() {
  var queue = cljs.core.deref.call(null, rum.core.render_queue);
  cljs.core.vreset_BANG_.call(null, rum.core.render_queue, rum.core.empty_queue);
  return rum.core.batch.call(null, rum.core.render_all, queue);
};
rum.core.request_render = function rum$core$request_render(component) {
  if (cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, rum.core.render_queue))) {
    rum.core.schedule.call(null, rum.core.render);
  } else {
  }
  return cljs.core._vreset_BANG_.call(null, rum.core.render_queue, cljs.core.conj.call(null, cljs.core._deref.call(null, rum.core.render_queue), component));
};
rum.core.mount = function rum$core$mount(component, node) {
  ReactDOM.render(component, node);
  return null;
};
rum.core.unmount = function rum$core$unmount(node) {
  return ReactDOM.unmountComponentAtNode(node);
};
rum.core.with_key = function rum$core$with_key(component, key) {
  return React.cloneElement(component, {"key":key}, null);
};
rum.core.with_ref = function rum$core$with_ref(component, ref) {
  return React.cloneElement(component, {"ref":ref}, null);
};
rum.core.dom_node = function rum$core$dom_node(state) {
  return ReactDOM.findDOMNode((new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248)).cljs$core$IFn$_invoke$arity$1(state));
};
rum.core.ref = function rum$core$ref(state, key) {
  return (new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248)).cljs$core$IFn$_invoke$arity$1(state)["refs"][cljs.core.name.call(null, key)];
};
rum.core.ref_node = function rum$core$ref_node(state, key) {
  return ReactDOM.findDOMNode(rum.core.ref.call(null, state, cljs.core.name.call(null, key)));
};
rum.core.static$ = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "should-update", "should-update", -1292781795), function(old_state, new_state) {
  return cljs.core.not_EQ_.call(null, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(old_state), (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(new_state));
}], null);
rum.core.local = function rum$core$local(var_args) {
  var args41394 = [];
  var len__31204__auto___41397 = arguments.length;
  var i__31205__auto___41398 = 0;
  while (true) {
    if (i__31205__auto___41398 < len__31204__auto___41397) {
      args41394.push(arguments[i__31205__auto___41398]);
      var G__41399 = i__31205__auto___41398 + 1;
      i__31205__auto___41398 = G__41399;
      continue;
    } else {
    }
    break;
  }
  var G__41396 = args41394.length;
  switch(G__41396) {
    case 1:
      return rum.core.local.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return rum.core.local.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args41394.length)].join(""));;
  }
};
rum.core.local.cljs$core$IFn$_invoke$arity$1 = function(initial) {
  return rum.core.local.call(null, initial, new cljs.core.Keyword("rum", "local", "rum/local", -1497916586));
};
rum.core.local.cljs$core$IFn$_invoke$arity$2 = function(initial, key) {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "will-mount", "will-mount", -434633071), function(state) {
    var local_state = cljs.core.atom.call(null, initial);
    var component = (new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248)).cljs$core$IFn$_invoke$arity$1(state);
    cljs.core.add_watch.call(null, local_state, key, function(local_state, component) {
      return function(_, ___$1, ___$2, ___$3) {
        return rum.core.request_render.call(null, component);
      };
    }(local_state, component));
    return cljs.core.assoc.call(null, state, key, local_state);
  }], null);
};
rum.core.local.cljs$lang$maxFixedArity = 2;
rum.core.reactive = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "init", "init", -1875481434), function(state, props) {
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword("rum.reactive", "key", "rum.reactive/key", -803425142), cljs.core.random_uuid.call(null));
}, new cljs.core.Keyword(null, "wrap-render", "wrap-render", 1782000986), function(render_fn) {
  return function(state) {
    var _STAR_reactions_STAR_41401 = rum.core._STAR_reactions_STAR_;
    rum.core._STAR_reactions_STAR_ = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentHashSet.EMPTY);
    try {
      var comp = (new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248)).cljs$core$IFn$_invoke$arity$1(state);
      var old_reactions = (new cljs.core.Keyword("rum.reactive", "refs", "rum.reactive/refs", -814076325)).cljs$core$IFn$_invoke$arity$2(state, cljs.core.PersistentHashSet.EMPTY);
      var vec__41402 = render_fn.call(null, state);
      var dom = cljs.core.nth.call(null, vec__41402, 0, null);
      var next_state = cljs.core.nth.call(null, vec__41402, 1, null);
      var new_reactions = cljs.core.deref.call(null, rum.core._STAR_reactions_STAR_);
      var key = (new cljs.core.Keyword("rum.reactive", "key", "rum.reactive/key", -803425142)).cljs$core$IFn$_invoke$arity$1(state);
      var seq__41405_41417 = cljs.core.seq.call(null, old_reactions);
      var chunk__41406_41418 = null;
      var count__41407_41419 = 0;
      var i__41408_41420 = 0;
      while (true) {
        if (i__41408_41420 < count__41407_41419) {
          var ref_41421 = cljs.core._nth.call(null, chunk__41406_41418, i__41408_41420);
          if (cljs.core.contains_QMARK_.call(null, new_reactions, ref_41421)) {
          } else {
            cljs.core.remove_watch.call(null, ref_41421, key);
          }
          var G__41422 = seq__41405_41417;
          var G__41423 = chunk__41406_41418;
          var G__41424 = count__41407_41419;
          var G__41425 = i__41408_41420 + 1;
          seq__41405_41417 = G__41422;
          chunk__41406_41418 = G__41423;
          count__41407_41419 = G__41424;
          i__41408_41420 = G__41425;
          continue;
        } else {
          var temp__4657__auto___41426 = cljs.core.seq.call(null, seq__41405_41417);
          if (temp__4657__auto___41426) {
            var seq__41405_41427__$1 = temp__4657__auto___41426;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__41405_41427__$1)) {
              var c__30910__auto___41428 = cljs.core.chunk_first.call(null, seq__41405_41427__$1);
              var G__41429 = cljs.core.chunk_rest.call(null, seq__41405_41427__$1);
              var G__41430 = c__30910__auto___41428;
              var G__41431 = cljs.core.count.call(null, c__30910__auto___41428);
              var G__41432 = 0;
              seq__41405_41417 = G__41429;
              chunk__41406_41418 = G__41430;
              count__41407_41419 = G__41431;
              i__41408_41420 = G__41432;
              continue;
            } else {
              var ref_41433 = cljs.core.first.call(null, seq__41405_41427__$1);
              if (cljs.core.contains_QMARK_.call(null, new_reactions, ref_41433)) {
              } else {
                cljs.core.remove_watch.call(null, ref_41433, key);
              }
              var G__41434 = cljs.core.next.call(null, seq__41405_41427__$1);
              var G__41435 = null;
              var G__41436 = 0;
              var G__41437 = 0;
              seq__41405_41417 = G__41434;
              chunk__41406_41418 = G__41435;
              count__41407_41419 = G__41436;
              i__41408_41420 = G__41437;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var seq__41409_41438 = cljs.core.seq.call(null, new_reactions);
      var chunk__41410_41439 = null;
      var count__41411_41440 = 0;
      var i__41412_41441 = 0;
      while (true) {
        if (i__41412_41441 < count__41411_41440) {
          var ref_41442 = cljs.core._nth.call(null, chunk__41410_41439, i__41412_41441);
          if (cljs.core.contains_QMARK_.call(null, old_reactions, ref_41442)) {
          } else {
            cljs.core.add_watch.call(null, ref_41442, key, function(seq__41409_41438, chunk__41410_41439, count__41411_41440, i__41412_41441, ref_41442, comp, old_reactions, vec__41402, dom, next_state, new_reactions, key, _STAR_reactions_STAR_41401) {
              return function(_, ___$1, ___$2, ___$3) {
                return rum.core.request_render.call(null, comp);
              };
            }(seq__41409_41438, chunk__41410_41439, count__41411_41440, i__41412_41441, ref_41442, comp, old_reactions, vec__41402, dom, next_state, new_reactions, key, _STAR_reactions_STAR_41401));
          }
          var G__41443 = seq__41409_41438;
          var G__41444 = chunk__41410_41439;
          var G__41445 = count__41411_41440;
          var G__41446 = i__41412_41441 + 1;
          seq__41409_41438 = G__41443;
          chunk__41410_41439 = G__41444;
          count__41411_41440 = G__41445;
          i__41412_41441 = G__41446;
          continue;
        } else {
          var temp__4657__auto___41447 = cljs.core.seq.call(null, seq__41409_41438);
          if (temp__4657__auto___41447) {
            var seq__41409_41448__$1 = temp__4657__auto___41447;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__41409_41448__$1)) {
              var c__30910__auto___41449 = cljs.core.chunk_first.call(null, seq__41409_41448__$1);
              var G__41450 = cljs.core.chunk_rest.call(null, seq__41409_41448__$1);
              var G__41451 = c__30910__auto___41449;
              var G__41452 = cljs.core.count.call(null, c__30910__auto___41449);
              var G__41453 = 0;
              seq__41409_41438 = G__41450;
              chunk__41410_41439 = G__41451;
              count__41411_41440 = G__41452;
              i__41412_41441 = G__41453;
              continue;
            } else {
              var ref_41454 = cljs.core.first.call(null, seq__41409_41448__$1);
              if (cljs.core.contains_QMARK_.call(null, old_reactions, ref_41454)) {
              } else {
                cljs.core.add_watch.call(null, ref_41454, key, function(seq__41409_41438, chunk__41410_41439, count__41411_41440, i__41412_41441, ref_41454, seq__41409_41448__$1, temp__4657__auto___41447, comp, old_reactions, vec__41402, dom, next_state, new_reactions, key, _STAR_reactions_STAR_41401) {
                  return function(_, ___$1, ___$2, ___$3) {
                    return rum.core.request_render.call(null, comp);
                  };
                }(seq__41409_41438, chunk__41410_41439, count__41411_41440, i__41412_41441, ref_41454, seq__41409_41448__$1, temp__4657__auto___41447, comp, old_reactions, vec__41402, dom, next_state, new_reactions, key, _STAR_reactions_STAR_41401));
              }
              var G__41455 = cljs.core.next.call(null, seq__41409_41448__$1);
              var G__41456 = null;
              var G__41457 = 0;
              var G__41458 = 0;
              seq__41409_41438 = G__41455;
              chunk__41410_41439 = G__41456;
              count__41411_41440 = G__41457;
              i__41412_41441 = G__41458;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dom, cljs.core.assoc.call(null, next_state, new cljs.core.Keyword("rum.reactive", "refs", "rum.reactive/refs", -814076325), new_reactions)], null);
    } finally {
      rum.core._STAR_reactions_STAR_ = _STAR_reactions_STAR_41401;
    }
  };
}, new cljs.core.Keyword(null, "will-unmount", "will-unmount", -808051550), function(state) {
  var key_41459 = (new cljs.core.Keyword("rum.reactive", "key", "rum.reactive/key", -803425142)).cljs$core$IFn$_invoke$arity$1(state);
  var seq__41413_41460 = cljs.core.seq.call(null, (new cljs.core.Keyword("rum.reactive", "refs", "rum.reactive/refs", -814076325)).cljs$core$IFn$_invoke$arity$1(state));
  var chunk__41414_41461 = null;
  var count__41415_41462 = 0;
  var i__41416_41463 = 0;
  while (true) {
    if (i__41416_41463 < count__41415_41462) {
      var ref_41464 = cljs.core._nth.call(null, chunk__41414_41461, i__41416_41463);
      cljs.core.remove_watch.call(null, ref_41464, key_41459);
      var G__41465 = seq__41413_41460;
      var G__41466 = chunk__41414_41461;
      var G__41467 = count__41415_41462;
      var G__41468 = i__41416_41463 + 1;
      seq__41413_41460 = G__41465;
      chunk__41414_41461 = G__41466;
      count__41415_41462 = G__41467;
      i__41416_41463 = G__41468;
      continue;
    } else {
      var temp__4657__auto___41469 = cljs.core.seq.call(null, seq__41413_41460);
      if (temp__4657__auto___41469) {
        var seq__41413_41470__$1 = temp__4657__auto___41469;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__41413_41470__$1)) {
          var c__30910__auto___41471 = cljs.core.chunk_first.call(null, seq__41413_41470__$1);
          var G__41472 = cljs.core.chunk_rest.call(null, seq__41413_41470__$1);
          var G__41473 = c__30910__auto___41471;
          var G__41474 = cljs.core.count.call(null, c__30910__auto___41471);
          var G__41475 = 0;
          seq__41413_41460 = G__41472;
          chunk__41414_41461 = G__41473;
          count__41415_41462 = G__41474;
          i__41416_41463 = G__41475;
          continue;
        } else {
          var ref_41476 = cljs.core.first.call(null, seq__41413_41470__$1);
          cljs.core.remove_watch.call(null, ref_41476, key_41459);
          var G__41477 = cljs.core.next.call(null, seq__41413_41470__$1);
          var G__41478 = null;
          var G__41479 = 0;
          var G__41480 = 0;
          seq__41413_41460 = G__41477;
          chunk__41414_41461 = G__41478;
          count__41415_41462 = G__41479;
          i__41416_41463 = G__41480;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.dissoc.call(null, state, new cljs.core.Keyword("rum.reactive", "refs", "rum.reactive/refs", -814076325), new cljs.core.Keyword("rum.reactive", "key", "rum.reactive/key", -803425142));
}], null);
rum.core.react = function rum$core$react(ref) {
  if (cljs.core.truth_(rum.core._STAR_reactions_STAR_)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("rum.core/react is only supported in conjunction with rum.core/reactive"), cljs.core.str("\n"), cljs.core.str("*reactions*")].join(""));
  }
  cljs.core._vreset_BANG_.call(null, rum.core._STAR_reactions_STAR_, cljs.core.conj.call(null, cljs.core._deref.call(null, rum.core._STAR_reactions_STAR_), ref));
  return cljs.core.deref.call(null, ref);
};
rum.core.derived_atom = rum.derived_atom.derived_atom;
rum.core.cursor_in = function rum$core$cursor_in(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___41487 = arguments.length;
  var i__31205__auto___41488 = 0;
  while (true) {
    if (i__31205__auto___41488 < len__31204__auto___41487) {
      args__31211__auto__.push(arguments[i__31205__auto___41488]);
      var G__41489 = i__31205__auto___41488 + 1;
      i__31205__auto___41488 = G__41489;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 2 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(2), 0, null) : null;
  return rum.core.cursor_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31212__auto__);
};
rum.core.cursor_in.cljs$core$IFn$_invoke$arity$variadic = function(ref, path, p__41484) {
  var map__41485 = p__41484;
  var map__41485__$1 = (!(map__41485 == null) ? map__41485.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41485.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41485) : map__41485;
  var options = map__41485__$1;
  if (ref instanceof rum.cursor.Cursor) {
    return new rum.cursor.Cursor(ref.ref, cljs.core.into.call(null, ref.path, path), (new cljs.core.Keyword(null, "meta", "meta", 1499536964)).cljs$core$IFn$_invoke$arity$1(options));
  } else {
    return new rum.cursor.Cursor(ref, path, (new cljs.core.Keyword(null, "meta", "meta", 1499536964)).cljs$core$IFn$_invoke$arity$1(options));
  }
};
rum.core.cursor_in.cljs$lang$maxFixedArity = 2;
rum.core.cursor_in.cljs$lang$applyTo = function(seq41481) {
  var G__41482 = cljs.core.first.call(null, seq41481);
  var seq41481__$1 = cljs.core.next.call(null, seq41481);
  var G__41483 = cljs.core.first.call(null, seq41481__$1);
  var seq41481__$2 = cljs.core.next.call(null, seq41481__$1);
  return rum.core.cursor_in.cljs$core$IFn$_invoke$arity$variadic(G__41482, G__41483, seq41481__$2);
};
rum.core.cursor = function rum$core$cursor(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___41493 = arguments.length;
  var i__31205__auto___41494 = 0;
  while (true) {
    if (i__31205__auto___41494 < len__31204__auto___41493) {
      args__31211__auto__.push(arguments[i__31205__auto___41494]);
      var G__41495 = i__31205__auto___41494 + 1;
      i__31205__auto___41494 = G__41495;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 2 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(2), 0, null) : null;
  return rum.core.cursor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31212__auto__);
};
rum.core.cursor.cljs$core$IFn$_invoke$arity$variadic = function(ref, key, options) {
  return cljs.core.apply.call(null, rum.core.cursor_in, ref, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key], null), options);
};
rum.core.cursor.cljs$lang$maxFixedArity = 2;
rum.core.cursor.cljs$lang$applyTo = function(seq41490) {
  var G__41491 = cljs.core.first.call(null, seq41490);
  var seq41490__$1 = cljs.core.next.call(null, seq41490);
  var G__41492 = cljs.core.first.call(null, seq41490__$1);
  var seq41490__$2 = cljs.core.next.call(null, seq41490__$1);
  return rum.core.cursor.cljs$core$IFn$_invoke$arity$variadic(G__41491, G__41492, seq41490__$2);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__30759__auto__ = port == null ? null : port;
    var m__30760__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, port, fn1_handler);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__30759__auto__ = port == null ? null : port;
    var m__30760__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__30759__auto__ = chan == null ? null : chan;
    var m__30760__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, chan);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__30759__auto__ = chan == null ? null : chan;
    var m__30760__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, chan);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__30759__auto__ = h == null ? null : h;
    var m__30760__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, h);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function cljs$core$async$impl$protocols$blockable_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(h);
  } else {
    var x__30759__auto__ = h == null ? null : h;
    var m__30760__auto__ = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, h);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.blockable_QMARK_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.blockable?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__30759__auto__ = h == null ? null : h;
    var m__30760__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, h);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__30759__auto__ = b == null ? null : b;
    var m__30760__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, b);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__30759__auto__ = b == null ? null : b;
    var m__30760__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, b);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__30759__auto__ = b == null ? null : b;
    var m__30760__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, b, itm);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function cljs$core$async$impl$protocols$close_buf_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(b);
  } else {
    var x__30759__auto__ = b == null ? null : b;
    var m__30760__auto__ = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, b);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.protocols.close_buf_BANG_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var args35495 = [];
  var len__31204__auto___35498 = arguments.length;
  var i__31205__auto___35499 = 0;
  while (true) {
    if (i__31205__auto___35499 < len__31204__auto___35498) {
      args35495.push(arguments[i__31205__auto___35499]);
      var G__35500 = i__31205__auto___35499 + 1;
      i__31205__auto___35499 = G__35500;
      continue;
    } else {
    }
    break;
  }
  var G__35497 = args35495.length;
  switch(G__35497) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35495.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error("Assert failed: (not (nil? itm))");
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__35504 = cnt + 1;
      cnt = G__35504;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__31014__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__31014__auto__) {
      var v_35505 = this$.pop();
      if (keep_QMARK_.call(null, v_35505)) {
        this$.unshift(v_35505);
      } else {
      }
      var G__35506 = x + 1;
      x = G__35506;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str("(\x3e n 0)")].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
if (typeof cljs.core.async.impl.buffers.NO_VAL !== "undefined") {
} else {
  cljs.core.async.impl.buffers.NO_VAL = new Object;
}
cljs.core.async.impl.buffers.undelivered_QMARK_ = function cljs$core$async$impl$buffers$undelivered_QMARK_(val) {
  return cljs.core.async.impl.buffers.NO_VAL === val;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    self__.val = itm;
  } else {
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return self__.val = null;
  } else {
    return null;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return 0;
  } else {
    return 1;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function cljs$core$async$impl$buffers$__GT_PromiseBuffer(val) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(val);
};
cljs.core.async.impl.buffers.promise_buffer = function cljs$core$async$impl$buffers$promise_buffer() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_())) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.useSetImmediate_ = function() {
  if (!goog.global.Window || !goog.global.Window.prototype) {
    return true;
  }
  if (goog.labs.userAgent.browser.isEdge() || goog.global.Window.prototype.setImmediate != goog.global.setImmediate) {
    return true;
  }
  return false;
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = (document.createElement(goog.dom.TagName.IFRAME));
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_35509 = 0;
  while (true) {
    var m_35510 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_35510 == null) {
    } else {
      m_35510.call(null);
      if (count_35509 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__35511 = count_35509 + 1;
        count_35509 = G__35511;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__30084__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__30084__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__30084__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517 = function(val, meta35518) {
      this.val = val;
      this.meta35518 = meta35518;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_35519, meta35518__$1) {
      var self__ = this;
      var _35519__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517(self__.val, meta35518__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517.prototype.cljs$core$IMeta$_meta$arity$1 = function(_35519) {
      var self__ = this;
      var _35519__$1 = this;
      return self__.meta35518;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta35518", "meta35518", -1196614614, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels35517";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
      return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels35517");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels35517 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels35517(val__$1, meta35518) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517(val__$1, meta35518);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels35517(val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_35520 = self__.puts.pop();
    if (putter_35520 == null) {
    } else {
      var put_handler_35521 = putter_35520.handler;
      var val_35522 = putter_35520.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_35521)) {
        var put_cb_35523 = cljs.core.async.impl.protocols.commit.call(null, put_handler_35521);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_35523, put_handler_35521, val_35522, putter_35520, this$__$1) {
          return function() {
            return put_cb_35523.call(null, true);
          };
        }(put_cb_35523, put_handler_35521, val_35522, putter_35520, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str("(not (nil? val))")].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__30084__auto__ = self__.buf;
      if (cljs.core.truth_(and__30084__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__30084__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_35524 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_35524)) {
            var take_cb_35525 = cljs.core.async.impl.protocols.commit.call(null, taker_35524);
            var val_35526__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_35525, val_35526__$1, taker_35524, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_35525.call(null, val_35526__$1);
              };
            }(take_cb_35525, val_35526__$1, taker_35524, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str("(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)")].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        } else {
        }
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_35527 = self__.puts.pop();
          if (putter_35527 == null) {
          } else {
            var put_handler_35528 = putter_35527.handler;
            var val_35529 = putter_35527.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_35528)) {
              var put_cb_35530 = cljs.core.async.impl.protocols.commit.call(null, put_handler_35528);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_35530, put_handler_35528, val_35529, putter_35527, _, retval, this$__$1) {
                return function() {
                  return put_cb_35530.call(null, true);
                };
              }(put_cb_35530, put_handler_35528, val_35529, putter_35527, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_35529))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__30084__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__30084__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__30084__auto__;
            }
          }())) {
            var has_val = function() {
              var and__30084__auto__ = self__.buf;
              if (cljs.core.truth_(and__30084__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__30084__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str("(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)")].join(""));
            }
            self__.takes.unbounded_unshift(handler);
          } else {
          }
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__30084__auto__ = self__.buf;
      if (cljs.core.truth_(and__30084__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__30084__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_35531 = self__.takes.pop();
      if (taker_35531 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_35531)) {
          var take_cb_35532 = cljs.core.async.impl.protocols.commit.call(null, taker_35531);
          var val_35533 = cljs.core.truth_(function() {
            var and__30084__auto__ = self__.buf;
            if (cljs.core.truth_(and__30084__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__30084__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_35532, val_35533, taker_35531, this$__$1) {
            return function() {
              return take_cb_35532.call(null, val_35533);
            };
          }(take_cb_35532, val_35533, taker_35531, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    if (cljs.core.truth_(self__.buf)) {
      cljs.core.async.impl.protocols.close_buf_BANG_.call(null, self__.buf);
    } else {
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__30096__auto__ = exh;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var args35534 = [];
  var len__31204__auto___35539 = arguments.length;
  var i__31205__auto___35540 = 0;
  while (true) {
    if (i__31205__auto___35540 < len__31204__auto___35539) {
      args35534.push(arguments[i__31205__auto___35540]);
      var G__35541 = i__31205__auto___35540 + 1;
      i__31205__auto___35540 = G__35541;
      continue;
    } else {
    }
    break;
  }
  var G__35536 = args35534.length;
  switch(G__35536) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args35534.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__35543 = null;
        var G__35543__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e35537) {
            var t = e35537;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__35543__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e35538) {
            var t = e35538;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__35543 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__35543__1.call(this, buf__$1);
            case 2:
              return G__35543__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__35543.cljs$core$IFn$_invoke$arity$1 = G__35543__1;
        G__35543.cljs$core$IFn$_invoke$arity$2 = G__35543__2;
        return G__35543;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442 = function(f, meta36443) {
      this.f = f;
      this.meta36443 = meta36443;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_36444, meta36443__$1) {
      var self__ = this;
      var _36444__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442(self__.f, meta36443__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.prototype.cljs$core$IMeta$_meta$arity$1 = function(_36444) {
      var self__ = this;
      var _36444__$1 = this;
      return self__.meta36443;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta36443", "meta36443", 1346074850, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers36442";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
      return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers36442");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers36442 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers36442(f__$1, meta36443) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442(f__$1, meta36443);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers36442(f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e36446) {
    if (e36446 instanceof Object) {
      var ex = e36446;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e36446;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_36449_36451 = state;
    statearr_36449_36451[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_36449_36451[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_36450_36452 = state;
    statearr_36450_36452[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_36450_36452[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_36455_36457 = state;
    statearr_36455_36457[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_36455_36457[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_36456_36458 = state;
    statearr_36456_36458[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_36456_36458[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__30718__auto__, k__30719__auto__) {
  var self__ = this;
  var this__30718__auto____$1 = this;
  return cljs.core._lookup.call(null, this__30718__auto____$1, k__30719__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__30720__auto__, k36460, else__30721__auto__) {
  var self__ = this;
  var this__30720__auto____$1 = this;
  var G__36462 = k36460 instanceof cljs.core.Keyword ? k36460.fqn : null;
  switch(G__36462) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k36460, else__30721__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__30732__auto__, writer__30733__auto__, opts__30734__auto__) {
  var self__ = this;
  var this__30732__auto____$1 = this;
  var pr_pair__30735__auto__ = function(this__30732__auto____$1) {
    return function(keyval__30736__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, cljs.core.pr_writer, "", " ", "", opts__30734__auto__, keyval__30736__auto__);
    };
  }(this__30732__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, pr_pair__30735__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__30734__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__36459) {
  var self__ = this;
  var G__36459__$1 = this;
  return new cljs.core.RecordIter(0, G__36459__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__30716__auto__) {
  var self__ = this;
  var this__30716__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__30712__auto__) {
  var self__ = this;
  var this__30712__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__30722__auto__) {
  var self__ = this;
  var this__30722__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__30713__auto__) {
  var self__ = this;
  var this__30713__auto____$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_imap.call(null, this__30713__auto____$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__30714__auto__, other__30715__auto__) {
  var self__ = this;
  var this__30714__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__30084__auto__ = other__30715__auto__;
    if (cljs.core.truth_(and__30084__auto__)) {
      var and__30084__auto____$1 = this__30714__auto____$1.constructor === other__30715__auto__.constructor;
      if (and__30084__auto____$1) {
        return cljs.core.equiv_map.call(null, this__30714__auto____$1, other__30715__auto__);
      } else {
        return and__30084__auto____$1;
      }
    } else {
      return and__30084__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__30727__auto__, k__30728__auto__) {
  var self__ = this;
  var this__30727__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__30728__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__30727__auto____$1), self__.__meta), k__30728__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__30728__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__30725__auto__, k__30726__auto__, G__36459) {
  var self__ = this;
  var this__30725__auto____$1 = this;
  var pred__36463 = cljs.core.keyword_identical_QMARK_;
  var expr__36464 = k__30726__auto__;
  if (cljs.core.truth_(pred__36463.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__36464))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__36459, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__36463.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__36464))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__36459, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__36463.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__36464))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__36459, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__36463.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__36464))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__36459, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__36463.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__36464))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__36459, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__30726__auto__, G__36459), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__30730__auto__) {
  var self__ = this;
  var this__30730__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__30717__auto__, G__36459) {
  var self__ = this;
  var this__30717__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__36459, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__30723__auto__, entry__30724__auto__) {
  var self__ = this;
  var this__30723__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__30724__auto__)) {
    return cljs.core._assoc.call(null, this__30723__auto____$1, cljs.core._nth.call(null, entry__30724__auto__, 0), cljs.core._nth.call(null, entry__30724__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__30723__auto____$1, entry__30724__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__30752__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__30752__auto__, writer__30753__auto__) {
  return cljs.core._write.call(null, writer__30753__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__36461) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__36461), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__36461), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__36461), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__36461), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__36461), null, cljs.core.dissoc.call(null, G__36461, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_36468 = state;
  statearr_36468[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_36468;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__30084__auto__ = exception;
      if (cljs.core.truth_(and__30084__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__30084__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__30084__auto__ = exception;
        if (cljs.core.truth_(and__30084__auto__)) {
          var and__30084__auto____$1 = catch_block;
          if (cljs.core.truth_(and__30084__auto____$1)) {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), catch_exception) || exception instanceof catch_exception;
          } else {
            return and__30084__auto____$1;
          }
        } else {
          return and__30084__auto__;
        }
      }())) {
        var statearr_36474 = state;
        statearr_36474[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_36474[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_36474[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_36474[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_36474;
      } else {
        if (cljs.core.truth_(function() {
          var and__30084__auto__ = exception;
          if (cljs.core.truth_(and__30084__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__30084__auto__;
          }
        }())) {
          var statearr_36475_36479 = state;
          statearr_36475_36479[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__36480 = state;
          state = G__36480;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__30084__auto__ = exception;
            if (cljs.core.truth_(and__30084__auto__)) {
              var and__30084__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__30084__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__30084__auto____$1;
              }
            } else {
              return and__30084__auto__;
            }
          }())) {
            var statearr_36476 = state;
            statearr_36476[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_36476[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_36476;
          } else {
            if (cljs.core.truth_(function() {
              var and__30084__auto__ = cljs.core.not.call(null, exception);
              if (and__30084__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__30084__auto__;
              }
            }())) {
              var statearr_36477 = state;
              statearr_36477[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_36477[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_36477;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_36478 = state;
                statearr_36478[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_36478[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_36478;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var args36483 = [];
  var len__31204__auto___36486 = arguments.length;
  var i__31205__auto___36487 = 0;
  while (true) {
    if (i__31205__auto___36487 < len__31204__auto___36486) {
      args36483.push(arguments[i__31205__auto___36487]);
      var G__36488 = i__31205__auto___36487 + 1;
      i__31205__auto___36487 = G__36488;
      continue;
    } else {
    }
    break;
  }
  var G__36485 = args36483.length;
  switch(G__36485) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36483.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__36490 = level + 1;
      level = G__36490;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var x__30933__auto__ = self__.key;
  return cljs.core._conj.call(null, function() {
    var x__30933__auto____$1 = self__.val;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__30933__auto____$1);
  }(), x__30933__auto__);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var args36491 = [];
  var len__31204__auto___36494 = arguments.length;
  var i__31205__auto___36495 = 0;
  while (true) {
    if (i__31205__auto___36495 < len__31204__auto___36494) {
      args36491.push(arguments[i__31205__auto___36495]);
      var G__36496 = i__31205__auto___36495 + 1;
      i__31205__auto___36495 = G__36496;
      continue;
    } else {
    }
    break;
  }
  var G__36493 = args36491.length;
  switch(G__36493) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36491.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_36498 = 0;
  while (true) {
    if (i_36498 < arr.length) {
      arr[i_36498] = null;
      var G__36499 = i_36498 + 1;
      i_36498 = G__36499;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var args36500 = [];
  var len__31204__auto___36503 = arguments.length;
  var i__31205__auto___36504 = 0;
  while (true) {
    if (i__31205__auto___36504 < len__31204__auto___36503) {
      args36500.push(arguments[i__31205__auto___36504]);
      var G__36505 = i__31205__auto___36504 + 1;
      i__31205__auto___36504 = G__36505;
      continue;
    } else {
    }
    break;
  }
  var G__36502 = args36500.length;
  switch(G__36502) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36500.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4655__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var x_SINGLEQUOTE_ = temp__4655__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__36507 = x_SINGLEQUOTE_;
              x__$1 = G__36507;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__36508 = x__$1;
      var G__36509 = k;
      var G__36510 = level - 1;
      var G__36511 = update;
      x = G__36508;
      k = G__36509;
      level = G__36510;
      update = G__36511;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_36512 = self__.level + 1;
      while (true) {
        if (i_36512 <= new_level + 1) {
          update[i_36512] = self__.header;
          var G__36513 = i_36512 + 1;
          i_36512 = G__36513;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_36514 = 0;
    while (true) {
      if (i_36514 <= self__.level) {
        var links_36515 = update[i_36514].forward;
        if (links_36515[i_36514] === x__$1) {
          links_36515[i_36514] = x__$1.forward[i_36514];
          var G__36516 = i_36514 + 1;
          i_36514 = G__36516;
          continue;
        } else {
          var G__36517 = i_36514 + 1;
          i_36514 = G__36517;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__36518 = x_SINGLEQUOTE_;
              x__$1 = G__36518;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__36519 = nx;
        var G__36520 = level__$1 - 1;
        x = G__36519;
        level__$1 = G__36520;
        continue;
      } else {
        var G__36521 = x;
        var G__36522 = level__$1 - 1;
        x = G__36521;
        level__$1 = G__36522;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__36523 = x_SINGLEQUOTE_;
              x__$1 = G__36523;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__36524 = nx;
        var G__36525 = level__$1 - 1;
        x = G__36524;
        level__$1 = G__36525;
        continue;
      } else {
        var G__36526 = x;
        var G__36527 = level__$1 - 1;
        x = G__36526;
        level__$1 = G__36527;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
  return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout);
  var or__30096__auto__ = cljs.core.truth_(function() {
    var and__30084__auto__ = me;
    if (cljs.core.truth_(and__30084__auto__)) {
      return me.key < timeout + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__30084__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__30096__auto__)) {
    return or__30096__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__30096__auto__, timeout, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__30096__auto__, timeout, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(var_args) {
  var args36583 = [];
  var len__31204__auto___36589 = arguments.length;
  var i__31205__auto___36590 = 0;
  while (true) {
    if (i__31205__auto___36590 < len__31204__auto___36589) {
      args36583.push(arguments[i__31205__auto___36590]);
      var G__36591 = i__31205__auto___36590 + 1;
      i__31205__auto___36590 = G__36591;
      continue;
    } else {
    }
    break;
  }
  var G__36585 = args36583.length;
  switch(G__36585) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36583.length)].join(""));;
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.async.fn_handler.call(null, f, true);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(f, blockable) {
  if (typeof cljs.core.async.t_cljs$core$async36586 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async36586 = function(f, blockable, meta36587) {
      this.f = f;
      this.blockable = blockable;
      this.meta36587 = meta36587;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async36586.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_36588, meta36587__$1) {
      var self__ = this;
      var _36588__$1 = this;
      return new cljs.core.async.t_cljs$core$async36586(self__.f, self__.blockable, meta36587__$1);
    };
    cljs.core.async.t_cljs$core$async36586.prototype.cljs$core$IMeta$_meta$arity$1 = function(_36588) {
      var self__ = this;
      var _36588__$1 = this;
      return self__.meta36587;
    };
    cljs.core.async.t_cljs$core$async36586.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async36586.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async36586.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.blockable;
    };
    cljs.core.async.t_cljs$core$async36586.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async36586.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta36587", "meta36587", -626695512, null)], null);
    };
    cljs.core.async.t_cljs$core$async36586.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async36586.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async36586";
    cljs.core.async.t_cljs$core$async36586.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
      return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async36586");
    };
    cljs.core.async.__GT_t_cljs$core$async36586 = function cljs$core$async$__GT_t_cljs$core$async36586(f__$1, blockable__$1, meta36587) {
      return new cljs.core.async.t_cljs$core$async36586(f__$1, blockable__$1, meta36587);
    };
  }
  return new cljs.core.async.t_cljs$core$async36586(f, blockable, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var args36595 = [];
  var len__31204__auto___36598 = arguments.length;
  var i__31205__auto___36599 = 0;
  while (true) {
    if (i__31205__auto___36599 < len__31204__auto___36598) {
      args36595.push(arguments[i__31205__auto___36599]);
      var G__36600 = i__31205__auto___36599 + 1;
      i__31205__auto___36599 = G__36600;
      continue;
    } else {
    }
    break;
  }
  var G__36597 = args36595.length;
  switch(G__36597) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36595.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str("buf-or-n")].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function cljs$core$async$promise_chan(var_args) {
  var args36602 = [];
  var len__31204__auto___36605 = arguments.length;
  var i__31205__auto___36606 = 0;
  while (true) {
    if (i__31205__auto___36606 < len__31204__auto___36605) {
      args36602.push(arguments[i__31205__auto___36606]);
      var G__36607 = i__31205__auto___36606 + 1;
      i__31205__auto___36606 = G__36607;
      continue;
    } else {
    }
    break;
  }
  var G__36604 = args36602.length;
  switch(G__36604) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36602.length)].join(""));;
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(xform) {
  return cljs.core.async.promise_chan.call(null, xform, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(xform, ex_handler) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), xform, ex_handler);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var args36609 = [];
  var len__31204__auto___36612 = arguments.length;
  var i__31205__auto___36613 = 0;
  while (true) {
    if (i__31205__auto___36613 < len__31204__auto___36612) {
      args36609.push(arguments[i__31205__auto___36613]);
      var G__36614 = i__31205__auto___36613 + 1;
      i__31205__auto___36613 = G__36614;
      continue;
    } else {
    }
    break;
  }
  var G__36611 = args36609.length;
  switch(G__36611) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36609.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_36616 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_36616);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_36616, ret) {
        return function() {
          return fn1.call(null, val_36616);
        };
      }(val_36616, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var args36617 = [];
  var len__31204__auto___36620 = arguments.length;
  var i__31205__auto___36621 = 0;
  while (true) {
    if (i__31205__auto___36621 < len__31204__auto___36620) {
      args36617.push(arguments[i__31205__auto___36621]);
      var G__36622 = i__31205__auto___36621 + 1;
      i__31205__auto___36621 = G__36622;
      continue;
    } else {
    }
    break;
  }
  var G__36619 = args36617.length;
  switch(G__36619) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36617.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ret = temp__4655__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var retb = temp__4655__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4655__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4655__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__31014__auto___36624 = n;
  var x_36625 = 0;
  while (true) {
    if (x_36625 < n__31014__auto___36624) {
      a[x_36625] = 0;
      var G__36626 = x_36625 + 1;
      x_36625 = G__36626;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__36627 = i + 1;
      i = G__36627;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t_cljs$core$async36631 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async36631 = function(flag, meta36632) {
      this.flag = flag;
      this.meta36632 = meta36632;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async36631.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_36633, meta36632__$1) {
        var self__ = this;
        var _36633__$1 = this;
        return new cljs.core.async.t_cljs$core$async36631(self__.flag, meta36632__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async36631.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_36633) {
        var self__ = this;
        var _36633__$1 = this;
        return self__.meta36632;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async36631.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async36631.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async36631.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async36631.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async36631.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta36632", "meta36632", 1172671397, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async36631.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async36631.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async36631";
    cljs.core.async.t_cljs$core$async36631.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
        return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async36631");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async36631 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async36631(flag__$1, meta36632) {
        return new cljs.core.async.t_cljs$core$async36631(flag__$1, meta36632);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async36631(flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t_cljs$core$async36637 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async36637 = function(flag, cb, meta36638) {
      this.flag = flag;
      this.cb = cb;
      this.meta36638 = meta36638;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async36637.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_36639, meta36638__$1) {
      var self__ = this;
      var _36639__$1 = this;
      return new cljs.core.async.t_cljs$core$async36637(self__.flag, self__.cb, meta36638__$1);
    };
    cljs.core.async.t_cljs$core$async36637.prototype.cljs$core$IMeta$_meta$arity$1 = function(_36639) {
      var self__ = this;
      var _36639__$1 = this;
      return self__.meta36638;
    };
    cljs.core.async.t_cljs$core$async36637.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async36637.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async36637.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async36637.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async36637.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta36638", "meta36638", -653324266, null)], null);
    };
    cljs.core.async.t_cljs$core$async36637.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async36637.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async36637";
    cljs.core.async.t_cljs$core$async36637.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
      return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async36637");
    };
    cljs.core.async.__GT_t_cljs$core$async36637 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async36637(flag__$1, cb__$1, meta36638) {
      return new cljs.core.async.t_cljs$core$async36637(flag__$1, cb__$1, meta36638);
    };
  }
  return new cljs.core.async.t_cljs$core$async36637(flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__36640_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__36640_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__36641_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__36641_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__30096__auto__ = wport;
            if (cljs.core.truth_(or__30096__auto__)) {
              return or__30096__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__36642 = i + 1;
          i = G__36642;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__30096__auto__ = ret;
  if (cljs.core.truth_(or__30096__auto__)) {
    return or__30096__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4657__auto__ = function() {
        var and__30084__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__30084__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__30084__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4657__auto__)) {
        var got = temp__4657__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___36648 = arguments.length;
  var i__31205__auto___36649 = 0;
  while (true) {
    if (i__31205__auto___36649 < len__31204__auto___36648) {
      args__31211__auto__.push(arguments[i__31205__auto___36649]);
      var G__36650 = i__31205__auto___36649 + 1;
      i__31205__auto___36649 = G__36650;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__36645) {
  var map__36646 = p__36645;
  var map__36646__$1 = (!(map__36646 == null) ? map__36646.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__36646.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__36646) : map__36646;
  var opts = map__36646__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq36643) {
  var G__36644 = cljs.core.first.call(null, seq36643);
  var seq36643__$1 = cljs.core.next.call(null, seq36643);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__36644, seq36643__$1);
};
cljs.core.async.offer_BANG_ = function cljs$core$async$offer_BANG_(port, val) {
  var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.poll_BANG_ = function cljs$core$async$poll_BANG_(port) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var args36651 = [];
  var len__31204__auto___36701 = arguments.length;
  var i__31205__auto___36702 = 0;
  while (true) {
    if (i__31205__auto___36702 < len__31204__auto___36701) {
      args36651.push(arguments[i__31205__auto___36702]);
      var G__36703 = i__31205__auto___36702 + 1;
      i__31205__auto___36702 = G__36703;
      continue;
    } else {
    }
    break;
  }
  var G__36653 = args36651.length;
  switch(G__36653) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args36651.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__36538__auto___36705 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___36705) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___36705) {
          return function(state_36677) {
            var state_val_36678 = state_36677[1];
            if (state_val_36678 === 7) {
              var inst_36673 = state_36677[2];
              var state_36677__$1 = state_36677;
              var statearr_36679_36706 = state_36677__$1;
              statearr_36679_36706[2] = inst_36673;
              statearr_36679_36706[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_36678 === 1) {
                var state_36677__$1 = state_36677;
                var statearr_36680_36707 = state_36677__$1;
                statearr_36680_36707[2] = null;
                statearr_36680_36707[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_36678 === 4) {
                  var inst_36656 = state_36677[7];
                  var inst_36656__$1 = state_36677[2];
                  var inst_36657 = inst_36656__$1 == null;
                  var state_36677__$1 = function() {
                    var statearr_36681 = state_36677;
                    statearr_36681[7] = inst_36656__$1;
                    return statearr_36681;
                  }();
                  if (cljs.core.truth_(inst_36657)) {
                    var statearr_36682_36708 = state_36677__$1;
                    statearr_36682_36708[1] = 5;
                  } else {
                    var statearr_36683_36709 = state_36677__$1;
                    statearr_36683_36709[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_36678 === 13) {
                    var state_36677__$1 = state_36677;
                    var statearr_36684_36710 = state_36677__$1;
                    statearr_36684_36710[2] = null;
                    statearr_36684_36710[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_36678 === 6) {
                      var inst_36656 = state_36677[7];
                      var state_36677__$1 = state_36677;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_36677__$1, 11, to, inst_36656);
                    } else {
                      if (state_val_36678 === 3) {
                        var inst_36675 = state_36677[2];
                        var state_36677__$1 = state_36677;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36677__$1, inst_36675);
                      } else {
                        if (state_val_36678 === 12) {
                          var state_36677__$1 = state_36677;
                          var statearr_36685_36711 = state_36677__$1;
                          statearr_36685_36711[2] = null;
                          statearr_36685_36711[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_36678 === 2) {
                            var state_36677__$1 = state_36677;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36677__$1, 4, from);
                          } else {
                            if (state_val_36678 === 11) {
                              var inst_36666 = state_36677[2];
                              var state_36677__$1 = state_36677;
                              if (cljs.core.truth_(inst_36666)) {
                                var statearr_36686_36712 = state_36677__$1;
                                statearr_36686_36712[1] = 12;
                              } else {
                                var statearr_36687_36713 = state_36677__$1;
                                statearr_36687_36713[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_36678 === 9) {
                                var state_36677__$1 = state_36677;
                                var statearr_36688_36714 = state_36677__$1;
                                statearr_36688_36714[2] = null;
                                statearr_36688_36714[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_36678 === 5) {
                                  var state_36677__$1 = state_36677;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_36689_36715 = state_36677__$1;
                                    statearr_36689_36715[1] = 8;
                                  } else {
                                    var statearr_36690_36716 = state_36677__$1;
                                    statearr_36690_36716[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_36678 === 14) {
                                    var inst_36671 = state_36677[2];
                                    var state_36677__$1 = state_36677;
                                    var statearr_36691_36717 = state_36677__$1;
                                    statearr_36691_36717[2] = inst_36671;
                                    statearr_36691_36717[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_36678 === 10) {
                                      var inst_36663 = state_36677[2];
                                      var state_36677__$1 = state_36677;
                                      var statearr_36692_36718 = state_36677__$1;
                                      statearr_36692_36718[2] = inst_36663;
                                      statearr_36692_36718[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_36678 === 8) {
                                        var inst_36660 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_36677__$1 = state_36677;
                                        var statearr_36693_36719 = state_36677__$1;
                                        statearr_36693_36719[2] = inst_36660;
                                        statearr_36693_36719[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___36705);
        return function(switch__36426__auto__, c__36538__auto___36705) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_36697 = [null, null, null, null, null, null, null, null];
              statearr_36697[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_36697[1] = 1;
              return statearr_36697;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_36677) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_36677);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e36698) {
                    if (e36698 instanceof Object) {
                      var ex__36430__auto__ = e36698;
                      var statearr_36699_36720 = state_36677;
                      statearr_36699_36720[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36677);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e36698;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__36721 = state_36677;
                  state_36677 = G__36721;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_36677) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_36677);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___36705);
      }();
      var state__36540__auto__ = function() {
        var statearr_36700 = f__36539__auto__.call(null);
        statearr_36700[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___36705;
        return statearr_36700;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___36705));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: (pos? n)");
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__36909) {
      var vec__36910 = p__36909;
      var v = cljs.core.nth.call(null, vec__36910, 0, null);
      var p = cljs.core.nth.call(null, vec__36910, 1, null);
      var job = vec__36910;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__36538__auto___37096 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___37096, res, vec__36910, v, p, job, jobs, results) {
          return function() {
            var f__36539__auto__ = function() {
              var switch__36426__auto__ = function(c__36538__auto___37096, res, vec__36910, v, p, job, jobs, results) {
                return function(state_36917) {
                  var state_val_36918 = state_36917[1];
                  if (state_val_36918 === 1) {
                    var state_36917__$1 = state_36917;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_36917__$1, 2, res, v);
                  } else {
                    if (state_val_36918 === 2) {
                      var inst_36914 = state_36917[2];
                      var inst_36915 = cljs.core.async.close_BANG_.call(null, res);
                      var state_36917__$1 = function() {
                        var statearr_36919 = state_36917;
                        statearr_36919[7] = inst_36914;
                        return statearr_36919;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36917__$1, inst_36915);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__36538__auto___37096, res, vec__36910, v, p, job, jobs, results);
              return function(switch__36426__auto__, c__36538__auto___37096, res, vec__36910, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0 = function() {
                    var statearr_36923 = [null, null, null, null, null, null, null, null];
                    statearr_36923[0] = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
                    statearr_36923[1] = 1;
                    return statearr_36923;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1 = function(state_36917) {
                    while (true) {
                      var ret_value__36428__auto__ = function() {
                        try {
                          while (true) {
                            var result__36429__auto__ = switch__36426__auto__.call(null, state_36917);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__36429__auto__;
                            }
                            break;
                          }
                        } catch (e36924) {
                          if (e36924 instanceof Object) {
                            var ex__36430__auto__ = e36924;
                            var statearr_36925_37097 = state_36917;
                            statearr_36925_37097[5] = ex__36430__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36917);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e36924;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__37098 = state_36917;
                        state_36917 = G__37098;
                        continue;
                      } else {
                        return ret_value__36428__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = function(state_36917) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1.call(this, state_36917);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
                }();
              }(switch__36426__auto__, c__36538__auto___37096, res, vec__36910, v, p, job, jobs, results);
            }();
            var state__36540__auto__ = function() {
              var statearr_36926 = f__36539__auto__.call(null);
              statearr_36926[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___37096;
              return statearr_36926;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
          };
        }(c__36538__auto___37096, res, vec__36910, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__36927) {
      var vec__36928 = p__36927;
      var v = cljs.core.nth.call(null, vec__36928, 0, null);
      var p = cljs.core.nth.call(null, vec__36928, 1, null);
      var job = vec__36928;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__31014__auto___37099 = n;
  var __37100 = 0;
  while (true) {
    if (__37100 < n__31014__auto___37099) {
      var G__36931_37101 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__36931_37101) {
        case "compute":
          var c__36538__auto___37103 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__37100, c__36538__auto___37103, G__36931_37101, n__31014__auto___37099, jobs, results, process, async) {
            return function() {
              var f__36539__auto__ = function() {
                var switch__36426__auto__ = function(__37100, c__36538__auto___37103, G__36931_37101, n__31014__auto___37099, jobs, results, process, async) {
                  return function(state_36944) {
                    var state_val_36945 = state_36944[1];
                    if (state_val_36945 === 1) {
                      var state_36944__$1 = state_36944;
                      var statearr_36946_37104 = state_36944__$1;
                      statearr_36946_37104[2] = null;
                      statearr_36946_37104[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_36945 === 2) {
                        var state_36944__$1 = state_36944;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36944__$1, 4, jobs);
                      } else {
                        if (state_val_36945 === 3) {
                          var inst_36942 = state_36944[2];
                          var state_36944__$1 = state_36944;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36944__$1, inst_36942);
                        } else {
                          if (state_val_36945 === 4) {
                            var inst_36934 = state_36944[2];
                            var inst_36935 = process.call(null, inst_36934);
                            var state_36944__$1 = state_36944;
                            if (cljs.core.truth_(inst_36935)) {
                              var statearr_36947_37105 = state_36944__$1;
                              statearr_36947_37105[1] = 5;
                            } else {
                              var statearr_36948_37106 = state_36944__$1;
                              statearr_36948_37106[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_36945 === 5) {
                              var state_36944__$1 = state_36944;
                              var statearr_36949_37107 = state_36944__$1;
                              statearr_36949_37107[2] = null;
                              statearr_36949_37107[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_36945 === 6) {
                                var state_36944__$1 = state_36944;
                                var statearr_36950_37108 = state_36944__$1;
                                statearr_36950_37108[2] = null;
                                statearr_36950_37108[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_36945 === 7) {
                                  var inst_36940 = state_36944[2];
                                  var state_36944__$1 = state_36944;
                                  var statearr_36951_37109 = state_36944__$1;
                                  statearr_36951_37109[2] = inst_36940;
                                  statearr_36951_37109[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__37100, c__36538__auto___37103, G__36931_37101, n__31014__auto___37099, jobs, results, process, async);
                return function(__37100, switch__36426__auto__, c__36538__auto___37103, G__36931_37101, n__31014__auto___37099, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0 = function() {
                      var statearr_36955 = [null, null, null, null, null, null, null];
                      statearr_36955[0] = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
                      statearr_36955[1] = 1;
                      return statearr_36955;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1 = function(state_36944) {
                      while (true) {
                        var ret_value__36428__auto__ = function() {
                          try {
                            while (true) {
                              var result__36429__auto__ = switch__36426__auto__.call(null, state_36944);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__36429__auto__;
                              }
                              break;
                            }
                          } catch (e36956) {
                            if (e36956 instanceof Object) {
                              var ex__36430__auto__ = e36956;
                              var statearr_36957_37110 = state_36944;
                              statearr_36957_37110[5] = ex__36430__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36944);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e36956;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__37111 = state_36944;
                          state_36944 = G__37111;
                          continue;
                        } else {
                          return ret_value__36428__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = function(state_36944) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1.call(this, state_36944);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
                  }();
                }(__37100, switch__36426__auto__, c__36538__auto___37103, G__36931_37101, n__31014__auto___37099, jobs, results, process, async);
              }();
              var state__36540__auto__ = function() {
                var statearr_36958 = f__36539__auto__.call(null);
                statearr_36958[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___37103;
                return statearr_36958;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
            };
          }(__37100, c__36538__auto___37103, G__36931_37101, n__31014__auto___37099, jobs, results, process, async));
          break;
        case "async":
          var c__36538__auto___37112 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__37100, c__36538__auto___37112, G__36931_37101, n__31014__auto___37099, jobs, results, process, async) {
            return function() {
              var f__36539__auto__ = function() {
                var switch__36426__auto__ = function(__37100, c__36538__auto___37112, G__36931_37101, n__31014__auto___37099, jobs, results, process, async) {
                  return function(state_36971) {
                    var state_val_36972 = state_36971[1];
                    if (state_val_36972 === 1) {
                      var state_36971__$1 = state_36971;
                      var statearr_36973_37113 = state_36971__$1;
                      statearr_36973_37113[2] = null;
                      statearr_36973_37113[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_36972 === 2) {
                        var state_36971__$1 = state_36971;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_36971__$1, 4, jobs);
                      } else {
                        if (state_val_36972 === 3) {
                          var inst_36969 = state_36971[2];
                          var state_36971__$1 = state_36971;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_36971__$1, inst_36969);
                        } else {
                          if (state_val_36972 === 4) {
                            var inst_36961 = state_36971[2];
                            var inst_36962 = async.call(null, inst_36961);
                            var state_36971__$1 = state_36971;
                            if (cljs.core.truth_(inst_36962)) {
                              var statearr_36974_37114 = state_36971__$1;
                              statearr_36974_37114[1] = 5;
                            } else {
                              var statearr_36975_37115 = state_36971__$1;
                              statearr_36975_37115[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_36972 === 5) {
                              var state_36971__$1 = state_36971;
                              var statearr_36976_37116 = state_36971__$1;
                              statearr_36976_37116[2] = null;
                              statearr_36976_37116[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_36972 === 6) {
                                var state_36971__$1 = state_36971;
                                var statearr_36977_37117 = state_36971__$1;
                                statearr_36977_37117[2] = null;
                                statearr_36977_37117[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_36972 === 7) {
                                  var inst_36967 = state_36971[2];
                                  var state_36971__$1 = state_36971;
                                  var statearr_36978_37118 = state_36971__$1;
                                  statearr_36978_37118[2] = inst_36967;
                                  statearr_36978_37118[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__37100, c__36538__auto___37112, G__36931_37101, n__31014__auto___37099, jobs, results, process, async);
                return function(__37100, switch__36426__auto__, c__36538__auto___37112, G__36931_37101, n__31014__auto___37099, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0 = function() {
                      var statearr_36982 = [null, null, null, null, null, null, null];
                      statearr_36982[0] = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
                      statearr_36982[1] = 1;
                      return statearr_36982;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1 = function(state_36971) {
                      while (true) {
                        var ret_value__36428__auto__ = function() {
                          try {
                            while (true) {
                              var result__36429__auto__ = switch__36426__auto__.call(null, state_36971);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__36429__auto__;
                              }
                              break;
                            }
                          } catch (e36983) {
                            if (e36983 instanceof Object) {
                              var ex__36430__auto__ = e36983;
                              var statearr_36984_37119 = state_36971;
                              statearr_36984_37119[5] = ex__36430__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_36971);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e36983;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__37120 = state_36971;
                          state_36971 = G__37120;
                          continue;
                        } else {
                          return ret_value__36428__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = function(state_36971) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1.call(this, state_36971);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
                  }();
                }(__37100, switch__36426__auto__, c__36538__auto___37112, G__36931_37101, n__31014__auto___37099, jobs, results, process, async);
              }();
              var state__36540__auto__ = function() {
                var statearr_36985 = f__36539__auto__.call(null);
                statearr_36985[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___37112;
                return statearr_36985;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
            };
          }(__37100, c__36538__auto___37112, G__36931_37101, n__31014__auto___37099, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__37121 = __37100 + 1;
      __37100 = G__37121;
      continue;
    } else {
    }
    break;
  }
  var c__36538__auto___37122 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___37122, jobs, results, process, async) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___37122, jobs, results, process, async) {
          return function(state_37007) {
            var state_val_37008 = state_37007[1];
            if (state_val_37008 === 1) {
              var state_37007__$1 = state_37007;
              var statearr_37009_37123 = state_37007__$1;
              statearr_37009_37123[2] = null;
              statearr_37009_37123[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_37008 === 2) {
                var state_37007__$1 = state_37007;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37007__$1, 4, from);
              } else {
                if (state_val_37008 === 3) {
                  var inst_37005 = state_37007[2];
                  var state_37007__$1 = state_37007;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37007__$1, inst_37005);
                } else {
                  if (state_val_37008 === 4) {
                    var inst_36988 = state_37007[7];
                    var inst_36988__$1 = state_37007[2];
                    var inst_36989 = inst_36988__$1 == null;
                    var state_37007__$1 = function() {
                      var statearr_37010 = state_37007;
                      statearr_37010[7] = inst_36988__$1;
                      return statearr_37010;
                    }();
                    if (cljs.core.truth_(inst_36989)) {
                      var statearr_37011_37124 = state_37007__$1;
                      statearr_37011_37124[1] = 5;
                    } else {
                      var statearr_37012_37125 = state_37007__$1;
                      statearr_37012_37125[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_37008 === 5) {
                      var inst_36991 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_37007__$1 = state_37007;
                      var statearr_37013_37126 = state_37007__$1;
                      statearr_37013_37126[2] = inst_36991;
                      statearr_37013_37126[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_37008 === 6) {
                        var inst_36993 = state_37007[8];
                        var inst_36988 = state_37007[7];
                        var inst_36993__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_36994 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_36995 = [inst_36988, inst_36993__$1];
                        var inst_36996 = new cljs.core.PersistentVector(null, 2, 5, inst_36994, inst_36995, null);
                        var state_37007__$1 = function() {
                          var statearr_37014 = state_37007;
                          statearr_37014[8] = inst_36993__$1;
                          return statearr_37014;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_37007__$1, 8, jobs, inst_36996);
                      } else {
                        if (state_val_37008 === 7) {
                          var inst_37003 = state_37007[2];
                          var state_37007__$1 = state_37007;
                          var statearr_37015_37127 = state_37007__$1;
                          statearr_37015_37127[2] = inst_37003;
                          statearr_37015_37127[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_37008 === 8) {
                            var inst_36993 = state_37007[8];
                            var inst_36998 = state_37007[2];
                            var state_37007__$1 = function() {
                              var statearr_37016 = state_37007;
                              statearr_37016[9] = inst_36998;
                              return statearr_37016;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_37007__$1, 9, results, inst_36993);
                          } else {
                            if (state_val_37008 === 9) {
                              var inst_37000 = state_37007[2];
                              var state_37007__$1 = function() {
                                var statearr_37017 = state_37007;
                                statearr_37017[10] = inst_37000;
                                return statearr_37017;
                              }();
                              var statearr_37018_37128 = state_37007__$1;
                              statearr_37018_37128[2] = null;
                              statearr_37018_37128[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___37122, jobs, results, process, async);
        return function(switch__36426__auto__, c__36538__auto___37122, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0 = function() {
              var statearr_37022 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_37022[0] = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
              statearr_37022[1] = 1;
              return statearr_37022;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1 = function(state_37007) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_37007);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e37023) {
                    if (e37023 instanceof Object) {
                      var ex__36430__auto__ = e37023;
                      var statearr_37024_37129 = state_37007;
                      statearr_37024_37129[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37007);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e37023;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__37130 = state_37007;
                  state_37007 = G__37130;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = function(state_37007) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1.call(this, state_37007);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___37122, jobs, results, process, async);
      }();
      var state__36540__auto__ = function() {
        var statearr_37025 = f__36539__auto__.call(null);
        statearr_37025[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___37122;
        return statearr_37025;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___37122, jobs, results, process, async));
  var c__36538__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto__, jobs, results, process, async) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto__, jobs, results, process, async) {
          return function(state_37063) {
            var state_val_37064 = state_37063[1];
            if (state_val_37064 === 7) {
              var inst_37059 = state_37063[2];
              var state_37063__$1 = state_37063;
              var statearr_37065_37131 = state_37063__$1;
              statearr_37065_37131[2] = inst_37059;
              statearr_37065_37131[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_37064 === 20) {
                var state_37063__$1 = state_37063;
                var statearr_37066_37132 = state_37063__$1;
                statearr_37066_37132[2] = null;
                statearr_37066_37132[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_37064 === 1) {
                  var state_37063__$1 = state_37063;
                  var statearr_37067_37133 = state_37063__$1;
                  statearr_37067_37133[2] = null;
                  statearr_37067_37133[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_37064 === 4) {
                    var inst_37028 = state_37063[7];
                    var inst_37028__$1 = state_37063[2];
                    var inst_37029 = inst_37028__$1 == null;
                    var state_37063__$1 = function() {
                      var statearr_37068 = state_37063;
                      statearr_37068[7] = inst_37028__$1;
                      return statearr_37068;
                    }();
                    if (cljs.core.truth_(inst_37029)) {
                      var statearr_37069_37134 = state_37063__$1;
                      statearr_37069_37134[1] = 5;
                    } else {
                      var statearr_37070_37135 = state_37063__$1;
                      statearr_37070_37135[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_37064 === 15) {
                      var inst_37041 = state_37063[8];
                      var state_37063__$1 = state_37063;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_37063__$1, 18, to, inst_37041);
                    } else {
                      if (state_val_37064 === 21) {
                        var inst_37054 = state_37063[2];
                        var state_37063__$1 = state_37063;
                        var statearr_37071_37136 = state_37063__$1;
                        statearr_37071_37136[2] = inst_37054;
                        statearr_37071_37136[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_37064 === 13) {
                          var inst_37056 = state_37063[2];
                          var state_37063__$1 = function() {
                            var statearr_37072 = state_37063;
                            statearr_37072[9] = inst_37056;
                            return statearr_37072;
                          }();
                          var statearr_37073_37137 = state_37063__$1;
                          statearr_37073_37137[2] = null;
                          statearr_37073_37137[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_37064 === 6) {
                            var inst_37028 = state_37063[7];
                            var state_37063__$1 = state_37063;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37063__$1, 11, inst_37028);
                          } else {
                            if (state_val_37064 === 17) {
                              var inst_37049 = state_37063[2];
                              var state_37063__$1 = state_37063;
                              if (cljs.core.truth_(inst_37049)) {
                                var statearr_37074_37138 = state_37063__$1;
                                statearr_37074_37138[1] = 19;
                              } else {
                                var statearr_37075_37139 = state_37063__$1;
                                statearr_37075_37139[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_37064 === 3) {
                                var inst_37061 = state_37063[2];
                                var state_37063__$1 = state_37063;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37063__$1, inst_37061);
                              } else {
                                if (state_val_37064 === 12) {
                                  var inst_37038 = state_37063[10];
                                  var state_37063__$1 = state_37063;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37063__$1, 14, inst_37038);
                                } else {
                                  if (state_val_37064 === 2) {
                                    var state_37063__$1 = state_37063;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37063__$1, 4, results);
                                  } else {
                                    if (state_val_37064 === 19) {
                                      var state_37063__$1 = state_37063;
                                      var statearr_37076_37140 = state_37063__$1;
                                      statearr_37076_37140[2] = null;
                                      statearr_37076_37140[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_37064 === 11) {
                                        var inst_37038 = state_37063[2];
                                        var state_37063__$1 = function() {
                                          var statearr_37077 = state_37063;
                                          statearr_37077[10] = inst_37038;
                                          return statearr_37077;
                                        }();
                                        var statearr_37078_37141 = state_37063__$1;
                                        statearr_37078_37141[2] = null;
                                        statearr_37078_37141[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_37064 === 9) {
                                          var state_37063__$1 = state_37063;
                                          var statearr_37079_37142 = state_37063__$1;
                                          statearr_37079_37142[2] = null;
                                          statearr_37079_37142[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_37064 === 5) {
                                            var state_37063__$1 = state_37063;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_37080_37143 = state_37063__$1;
                                              statearr_37080_37143[1] = 8;
                                            } else {
                                              var statearr_37081_37144 = state_37063__$1;
                                              statearr_37081_37144[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_37064 === 14) {
                                              var inst_37041 = state_37063[8];
                                              var inst_37043 = state_37063[11];
                                              var inst_37041__$1 = state_37063[2];
                                              var inst_37042 = inst_37041__$1 == null;
                                              var inst_37043__$1 = cljs.core.not.call(null, inst_37042);
                                              var state_37063__$1 = function() {
                                                var statearr_37082 = state_37063;
                                                statearr_37082[8] = inst_37041__$1;
                                                statearr_37082[11] = inst_37043__$1;
                                                return statearr_37082;
                                              }();
                                              if (inst_37043__$1) {
                                                var statearr_37083_37145 = state_37063__$1;
                                                statearr_37083_37145[1] = 15;
                                              } else {
                                                var statearr_37084_37146 = state_37063__$1;
                                                statearr_37084_37146[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_37064 === 16) {
                                                var inst_37043 = state_37063[11];
                                                var state_37063__$1 = state_37063;
                                                var statearr_37085_37147 = state_37063__$1;
                                                statearr_37085_37147[2] = inst_37043;
                                                statearr_37085_37147[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_37064 === 10) {
                                                  var inst_37035 = state_37063[2];
                                                  var state_37063__$1 = state_37063;
                                                  var statearr_37086_37148 = state_37063__$1;
                                                  statearr_37086_37148[2] = inst_37035;
                                                  statearr_37086_37148[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_37064 === 18) {
                                                    var inst_37046 = state_37063[2];
                                                    var state_37063__$1 = state_37063;
                                                    var statearr_37087_37149 = state_37063__$1;
                                                    statearr_37087_37149[2] = inst_37046;
                                                    statearr_37087_37149[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_37064 === 8) {
                                                      var inst_37032 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_37063__$1 = state_37063;
                                                      var statearr_37088_37150 = state_37063__$1;
                                                      statearr_37088_37150[2] = inst_37032;
                                                      statearr_37088_37150[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto__, jobs, results, process, async);
        return function(switch__36426__auto__, c__36538__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0 = function() {
              var statearr_37092 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_37092[0] = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
              statearr_37092[1] = 1;
              return statearr_37092;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1 = function(state_37063) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_37063);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e37093) {
                    if (e37093 instanceof Object) {
                      var ex__36430__auto__ = e37093;
                      var statearr_37094_37151 = state_37063;
                      statearr_37094_37151[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37063);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e37093;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__37152 = state_37063;
                  state_37063 = G__37152;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__ = function(state_37063) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1.call(this, state_37063);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__36427__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto__, jobs, results, process, async);
      }();
      var state__36540__auto__ = function() {
        var statearr_37095 = f__36539__auto__.call(null);
        statearr_37095[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto__;
        return statearr_37095;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto__, jobs, results, process, async));
  return c__36538__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var args37153 = [];
  var len__31204__auto___37156 = arguments.length;
  var i__31205__auto___37157 = 0;
  while (true) {
    if (i__31205__auto___37157 < len__31204__auto___37156) {
      args37153.push(arguments[i__31205__auto___37157]);
      var G__37158 = i__31205__auto___37157 + 1;
      i__31205__auto___37157 = G__37158;
      continue;
    } else {
    }
    break;
  }
  var G__37155 = args37153.length;
  switch(G__37155) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37153.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var args37160 = [];
  var len__31204__auto___37163 = arguments.length;
  var i__31205__auto___37164 = 0;
  while (true) {
    if (i__31205__auto___37164 < len__31204__auto___37163) {
      args37160.push(arguments[i__31205__auto___37164]);
      var G__37165 = i__31205__auto___37164 + 1;
      i__31205__auto___37164 = G__37165;
      continue;
    } else {
    }
    break;
  }
  var G__37162 = args37160.length;
  switch(G__37162) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37160.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var args37167 = [];
  var len__31204__auto___37220 = arguments.length;
  var i__31205__auto___37221 = 0;
  while (true) {
    if (i__31205__auto___37221 < len__31204__auto___37220) {
      args37167.push(arguments[i__31205__auto___37221]);
      var G__37222 = i__31205__auto___37221 + 1;
      i__31205__auto___37221 = G__37222;
      continue;
    } else {
    }
    break;
  }
  var G__37169 = args37167.length;
  switch(G__37169) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37167.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__36538__auto___37224 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___37224, tc, fc) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___37224, tc, fc) {
          return function(state_37195) {
            var state_val_37196 = state_37195[1];
            if (state_val_37196 === 7) {
              var inst_37191 = state_37195[2];
              var state_37195__$1 = state_37195;
              var statearr_37197_37225 = state_37195__$1;
              statearr_37197_37225[2] = inst_37191;
              statearr_37197_37225[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_37196 === 1) {
                var state_37195__$1 = state_37195;
                var statearr_37198_37226 = state_37195__$1;
                statearr_37198_37226[2] = null;
                statearr_37198_37226[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_37196 === 4) {
                  var inst_37172 = state_37195[7];
                  var inst_37172__$1 = state_37195[2];
                  var inst_37173 = inst_37172__$1 == null;
                  var state_37195__$1 = function() {
                    var statearr_37199 = state_37195;
                    statearr_37199[7] = inst_37172__$1;
                    return statearr_37199;
                  }();
                  if (cljs.core.truth_(inst_37173)) {
                    var statearr_37200_37227 = state_37195__$1;
                    statearr_37200_37227[1] = 5;
                  } else {
                    var statearr_37201_37228 = state_37195__$1;
                    statearr_37201_37228[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_37196 === 13) {
                    var state_37195__$1 = state_37195;
                    var statearr_37202_37229 = state_37195__$1;
                    statearr_37202_37229[2] = null;
                    statearr_37202_37229[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_37196 === 6) {
                      var inst_37172 = state_37195[7];
                      var inst_37178 = p.call(null, inst_37172);
                      var state_37195__$1 = state_37195;
                      if (cljs.core.truth_(inst_37178)) {
                        var statearr_37203_37230 = state_37195__$1;
                        statearr_37203_37230[1] = 9;
                      } else {
                        var statearr_37204_37231 = state_37195__$1;
                        statearr_37204_37231[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_37196 === 3) {
                        var inst_37193 = state_37195[2];
                        var state_37195__$1 = state_37195;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37195__$1, inst_37193);
                      } else {
                        if (state_val_37196 === 12) {
                          var state_37195__$1 = state_37195;
                          var statearr_37205_37232 = state_37195__$1;
                          statearr_37205_37232[2] = null;
                          statearr_37205_37232[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_37196 === 2) {
                            var state_37195__$1 = state_37195;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37195__$1, 4, ch);
                          } else {
                            if (state_val_37196 === 11) {
                              var inst_37172 = state_37195[7];
                              var inst_37182 = state_37195[2];
                              var state_37195__$1 = state_37195;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_37195__$1, 8, inst_37182, inst_37172);
                            } else {
                              if (state_val_37196 === 9) {
                                var state_37195__$1 = state_37195;
                                var statearr_37206_37233 = state_37195__$1;
                                statearr_37206_37233[2] = tc;
                                statearr_37206_37233[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_37196 === 5) {
                                  var inst_37175 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_37176 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_37195__$1 = function() {
                                    var statearr_37207 = state_37195;
                                    statearr_37207[8] = inst_37175;
                                    return statearr_37207;
                                  }();
                                  var statearr_37208_37234 = state_37195__$1;
                                  statearr_37208_37234[2] = inst_37176;
                                  statearr_37208_37234[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_37196 === 14) {
                                    var inst_37189 = state_37195[2];
                                    var state_37195__$1 = state_37195;
                                    var statearr_37209_37235 = state_37195__$1;
                                    statearr_37209_37235[2] = inst_37189;
                                    statearr_37209_37235[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_37196 === 10) {
                                      var state_37195__$1 = state_37195;
                                      var statearr_37210_37236 = state_37195__$1;
                                      statearr_37210_37236[2] = fc;
                                      statearr_37210_37236[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_37196 === 8) {
                                        var inst_37184 = state_37195[2];
                                        var state_37195__$1 = state_37195;
                                        if (cljs.core.truth_(inst_37184)) {
                                          var statearr_37211_37237 = state_37195__$1;
                                          statearr_37211_37237[1] = 12;
                                        } else {
                                          var statearr_37212_37238 = state_37195__$1;
                                          statearr_37212_37238[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___37224, tc, fc);
        return function(switch__36426__auto__, c__36538__auto___37224, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_37216 = [null, null, null, null, null, null, null, null, null];
              statearr_37216[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_37216[1] = 1;
              return statearr_37216;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_37195) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_37195);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e37217) {
                    if (e37217 instanceof Object) {
                      var ex__36430__auto__ = e37217;
                      var statearr_37218_37239 = state_37195;
                      statearr_37218_37239[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37195);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e37217;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__37240 = state_37195;
                  state_37195 = G__37240;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_37195) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_37195);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___37224, tc, fc);
      }();
      var state__36540__auto__ = function() {
        var statearr_37219 = f__36539__auto__.call(null);
        statearr_37219[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___37224;
        return statearr_37219;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___37224, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__36538__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto__) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto__) {
          return function(state_37304) {
            var state_val_37305 = state_37304[1];
            if (state_val_37305 === 7) {
              var inst_37300 = state_37304[2];
              var state_37304__$1 = state_37304;
              var statearr_37306_37327 = state_37304__$1;
              statearr_37306_37327[2] = inst_37300;
              statearr_37306_37327[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_37305 === 1) {
                var inst_37284 = init;
                var state_37304__$1 = function() {
                  var statearr_37307 = state_37304;
                  statearr_37307[7] = inst_37284;
                  return statearr_37307;
                }();
                var statearr_37308_37328 = state_37304__$1;
                statearr_37308_37328[2] = null;
                statearr_37308_37328[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_37305 === 4) {
                  var inst_37287 = state_37304[8];
                  var inst_37287__$1 = state_37304[2];
                  var inst_37288 = inst_37287__$1 == null;
                  var state_37304__$1 = function() {
                    var statearr_37309 = state_37304;
                    statearr_37309[8] = inst_37287__$1;
                    return statearr_37309;
                  }();
                  if (cljs.core.truth_(inst_37288)) {
                    var statearr_37310_37329 = state_37304__$1;
                    statearr_37310_37329[1] = 5;
                  } else {
                    var statearr_37311_37330 = state_37304__$1;
                    statearr_37311_37330[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_37305 === 6) {
                    var inst_37287 = state_37304[8];
                    var inst_37291 = state_37304[9];
                    var inst_37284 = state_37304[7];
                    var inst_37291__$1 = f.call(null, inst_37284, inst_37287);
                    var inst_37292 = cljs.core.reduced_QMARK_.call(null, inst_37291__$1);
                    var state_37304__$1 = function() {
                      var statearr_37312 = state_37304;
                      statearr_37312[9] = inst_37291__$1;
                      return statearr_37312;
                    }();
                    if (inst_37292) {
                      var statearr_37313_37331 = state_37304__$1;
                      statearr_37313_37331[1] = 8;
                    } else {
                      var statearr_37314_37332 = state_37304__$1;
                      statearr_37314_37332[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_37305 === 3) {
                      var inst_37302 = state_37304[2];
                      var state_37304__$1 = state_37304;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37304__$1, inst_37302);
                    } else {
                      if (state_val_37305 === 2) {
                        var state_37304__$1 = state_37304;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37304__$1, 4, ch);
                      } else {
                        if (state_val_37305 === 9) {
                          var inst_37291 = state_37304[9];
                          var inst_37284 = inst_37291;
                          var state_37304__$1 = function() {
                            var statearr_37315 = state_37304;
                            statearr_37315[7] = inst_37284;
                            return statearr_37315;
                          }();
                          var statearr_37316_37333 = state_37304__$1;
                          statearr_37316_37333[2] = null;
                          statearr_37316_37333[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_37305 === 5) {
                            var inst_37284 = state_37304[7];
                            var state_37304__$1 = state_37304;
                            var statearr_37317_37334 = state_37304__$1;
                            statearr_37317_37334[2] = inst_37284;
                            statearr_37317_37334[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_37305 === 10) {
                              var inst_37298 = state_37304[2];
                              var state_37304__$1 = state_37304;
                              var statearr_37318_37335 = state_37304__$1;
                              statearr_37318_37335[2] = inst_37298;
                              statearr_37318_37335[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_37305 === 8) {
                                var inst_37291 = state_37304[9];
                                var inst_37294 = cljs.core.deref.call(null, inst_37291);
                                var state_37304__$1 = state_37304;
                                var statearr_37319_37336 = state_37304__$1;
                                statearr_37319_37336[2] = inst_37294;
                                statearr_37319_37336[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto__);
        return function(switch__36426__auto__, c__36538__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__36427__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__36427__auto____0 = function() {
              var statearr_37323 = [null, null, null, null, null, null, null, null, null, null];
              statearr_37323[0] = cljs$core$async$reduce_$_state_machine__36427__auto__;
              statearr_37323[1] = 1;
              return statearr_37323;
            };
            var cljs$core$async$reduce_$_state_machine__36427__auto____1 = function(state_37304) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_37304);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e37324) {
                    if (e37324 instanceof Object) {
                      var ex__36430__auto__ = e37324;
                      var statearr_37325_37337 = state_37304;
                      statearr_37325_37337[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37304);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e37324;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__37338 = state_37304;
                  state_37304 = G__37338;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__36427__auto__ = function(state_37304) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__36427__auto____1.call(this, state_37304);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__36427__auto____0;
            cljs$core$async$reduce_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__36427__auto____1;
            return cljs$core$async$reduce_$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto__);
      }();
      var state__36540__auto__ = function() {
        var statearr_37326 = f__36539__auto__.call(null);
        statearr_37326[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto__;
        return statearr_37326;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto__));
  return c__36538__auto__;
};
cljs.core.async.transduce = function cljs$core$async$transduce(xform, f, init, ch) {
  var f__$1 = xform.call(null, f);
  var c__36538__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto__, f__$1) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto__, f__$1) {
          return function(state_37358) {
            var state_val_37359 = state_37358[1];
            if (state_val_37359 === 1) {
              var inst_37353 = cljs.core.async.reduce.call(null, f__$1, init, ch);
              var state_37358__$1 = state_37358;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37358__$1, 2, inst_37353);
            } else {
              if (state_val_37359 === 2) {
                var inst_37355 = state_37358[2];
                var inst_37356 = f__$1.call(null, inst_37355);
                var state_37358__$1 = state_37358;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37358__$1, inst_37356);
              } else {
                return null;
              }
            }
          };
        }(c__36538__auto__, f__$1);
        return function(switch__36426__auto__, c__36538__auto__, f__$1) {
          return function() {
            var cljs$core$async$transduce_$_state_machine__36427__auto__ = null;
            var cljs$core$async$transduce_$_state_machine__36427__auto____0 = function() {
              var statearr_37363 = [null, null, null, null, null, null, null];
              statearr_37363[0] = cljs$core$async$transduce_$_state_machine__36427__auto__;
              statearr_37363[1] = 1;
              return statearr_37363;
            };
            var cljs$core$async$transduce_$_state_machine__36427__auto____1 = function(state_37358) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_37358);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e37364) {
                    if (e37364 instanceof Object) {
                      var ex__36430__auto__ = e37364;
                      var statearr_37365_37367 = state_37358;
                      statearr_37365_37367[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37358);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e37364;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__37368 = state_37358;
                  state_37358 = G__37368;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$transduce_$_state_machine__36427__auto__ = function(state_37358) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$transduce_$_state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$transduce_$_state_machine__36427__auto____1.call(this, state_37358);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$transduce_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$transduce_$_state_machine__36427__auto____0;
            cljs$core$async$transduce_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$transduce_$_state_machine__36427__auto____1;
            return cljs$core$async$transduce_$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto__, f__$1);
      }();
      var state__36540__auto__ = function() {
        var statearr_37366 = f__36539__auto__.call(null);
        statearr_37366[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto__;
        return statearr_37366;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto__, f__$1));
  return c__36538__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var args37369 = [];
  var len__31204__auto___37421 = arguments.length;
  var i__31205__auto___37422 = 0;
  while (true) {
    if (i__31205__auto___37422 < len__31204__auto___37421) {
      args37369.push(arguments[i__31205__auto___37422]);
      var G__37423 = i__31205__auto___37422 + 1;
      i__31205__auto___37422 = G__37423;
      continue;
    } else {
    }
    break;
  }
  var G__37371 = args37369.length;
  switch(G__37371) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37369.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__36538__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto__) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto__) {
          return function(state_37396) {
            var state_val_37397 = state_37396[1];
            if (state_val_37397 === 7) {
              var inst_37378 = state_37396[2];
              var state_37396__$1 = state_37396;
              var statearr_37398_37425 = state_37396__$1;
              statearr_37398_37425[2] = inst_37378;
              statearr_37398_37425[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_37397 === 1) {
                var inst_37372 = cljs.core.seq.call(null, coll);
                var inst_37373 = inst_37372;
                var state_37396__$1 = function() {
                  var statearr_37399 = state_37396;
                  statearr_37399[7] = inst_37373;
                  return statearr_37399;
                }();
                var statearr_37400_37426 = state_37396__$1;
                statearr_37400_37426[2] = null;
                statearr_37400_37426[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_37397 === 4) {
                  var inst_37373 = state_37396[7];
                  var inst_37376 = cljs.core.first.call(null, inst_37373);
                  var state_37396__$1 = state_37396;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_37396__$1, 7, ch, inst_37376);
                } else {
                  if (state_val_37397 === 13) {
                    var inst_37390 = state_37396[2];
                    var state_37396__$1 = state_37396;
                    var statearr_37401_37427 = state_37396__$1;
                    statearr_37401_37427[2] = inst_37390;
                    statearr_37401_37427[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_37397 === 6) {
                      var inst_37381 = state_37396[2];
                      var state_37396__$1 = state_37396;
                      if (cljs.core.truth_(inst_37381)) {
                        var statearr_37402_37428 = state_37396__$1;
                        statearr_37402_37428[1] = 8;
                      } else {
                        var statearr_37403_37429 = state_37396__$1;
                        statearr_37403_37429[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_37397 === 3) {
                        var inst_37394 = state_37396[2];
                        var state_37396__$1 = state_37396;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37396__$1, inst_37394);
                      } else {
                        if (state_val_37397 === 12) {
                          var state_37396__$1 = state_37396;
                          var statearr_37404_37430 = state_37396__$1;
                          statearr_37404_37430[2] = null;
                          statearr_37404_37430[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_37397 === 2) {
                            var inst_37373 = state_37396[7];
                            var state_37396__$1 = state_37396;
                            if (cljs.core.truth_(inst_37373)) {
                              var statearr_37405_37431 = state_37396__$1;
                              statearr_37405_37431[1] = 4;
                            } else {
                              var statearr_37406_37432 = state_37396__$1;
                              statearr_37406_37432[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_37397 === 11) {
                              var inst_37387 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_37396__$1 = state_37396;
                              var statearr_37407_37433 = state_37396__$1;
                              statearr_37407_37433[2] = inst_37387;
                              statearr_37407_37433[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_37397 === 9) {
                                var state_37396__$1 = state_37396;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_37408_37434 = state_37396__$1;
                                  statearr_37408_37434[1] = 11;
                                } else {
                                  var statearr_37409_37435 = state_37396__$1;
                                  statearr_37409_37435[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_37397 === 5) {
                                  var inst_37373 = state_37396[7];
                                  var state_37396__$1 = state_37396;
                                  var statearr_37410_37436 = state_37396__$1;
                                  statearr_37410_37436[2] = inst_37373;
                                  statearr_37410_37436[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_37397 === 10) {
                                    var inst_37392 = state_37396[2];
                                    var state_37396__$1 = state_37396;
                                    var statearr_37411_37437 = state_37396__$1;
                                    statearr_37411_37437[2] = inst_37392;
                                    statearr_37411_37437[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_37397 === 8) {
                                      var inst_37373 = state_37396[7];
                                      var inst_37383 = cljs.core.next.call(null, inst_37373);
                                      var inst_37373__$1 = inst_37383;
                                      var state_37396__$1 = function() {
                                        var statearr_37412 = state_37396;
                                        statearr_37412[7] = inst_37373__$1;
                                        return statearr_37412;
                                      }();
                                      var statearr_37413_37438 = state_37396__$1;
                                      statearr_37413_37438[2] = null;
                                      statearr_37413_37438[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto__);
        return function(switch__36426__auto__, c__36538__auto__) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_37417 = [null, null, null, null, null, null, null, null];
              statearr_37417[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_37417[1] = 1;
              return statearr_37417;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_37396) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_37396);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e37418) {
                    if (e37418 instanceof Object) {
                      var ex__36430__auto__ = e37418;
                      var statearr_37419_37439 = state_37396;
                      statearr_37419_37439[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37396);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e37418;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__37440 = state_37396;
                  state_37396 = G__37440;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_37396) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_37396);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto__);
      }();
      var state__36540__auto__ = function() {
        var statearr_37420 = f__36539__auto__.call(null);
        statearr_37420[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto__;
        return statearr_37420;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto__));
  return c__36538__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__30759__auto__ = _ == null ? null : _;
    var m__30760__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, _);
    } else {
      var m__30760__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__30759__auto__ = m == null ? null : m;
    var m__30760__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__30760__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__30759__auto__ = m == null ? null : m;
    var m__30760__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, m, ch);
    } else {
      var m__30760__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__30759__auto__ = m == null ? null : m;
    var m__30760__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, m);
    } else {
      var m__30760__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async37666 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async37666 = function(ch, cs, meta37667) {
        this.ch = ch;
        this.cs = cs;
        this.meta37667 = meta37667;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async37666.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_37668, meta37667__$1) {
          var self__ = this;
          var _37668__$1 = this;
          return new cljs.core.async.t_cljs$core$async37666(self__.ch, self__.cs, meta37667__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async37666.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_37668) {
          var self__ = this;
          var _37668__$1 = this;
          return self__.meta37667;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async37666.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async37666.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async37666.prototype.cljs$core$async$Mult$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async37666.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async37666.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async37666.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async37666.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta37667", "meta37667", 1446480175, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async37666.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async37666.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async37666";
      cljs.core.async.t_cljs$core$async37666.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
          return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async37666");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async37666 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async37666(ch__$1, cs__$1, meta37667) {
          return new cljs.core.async.t_cljs$core$async37666(ch__$1, cs__$1, meta37667);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async37666(ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__36538__auto___37891 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___37891, cs, m, dchan, dctr, done) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___37891, cs, m, dchan, dctr, done) {
          return function(state_37803) {
            var state_val_37804 = state_37803[1];
            if (state_val_37804 === 7) {
              var inst_37799 = state_37803[2];
              var state_37803__$1 = state_37803;
              var statearr_37805_37892 = state_37803__$1;
              statearr_37805_37892[2] = inst_37799;
              statearr_37805_37892[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_37804 === 20) {
                var inst_37702 = state_37803[7];
                var inst_37714 = cljs.core.first.call(null, inst_37702);
                var inst_37715 = cljs.core.nth.call(null, inst_37714, 0, null);
                var inst_37716 = cljs.core.nth.call(null, inst_37714, 1, null);
                var state_37803__$1 = function() {
                  var statearr_37806 = state_37803;
                  statearr_37806[8] = inst_37715;
                  return statearr_37806;
                }();
                if (cljs.core.truth_(inst_37716)) {
                  var statearr_37807_37893 = state_37803__$1;
                  statearr_37807_37893[1] = 22;
                } else {
                  var statearr_37808_37894 = state_37803__$1;
                  statearr_37808_37894[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_37804 === 27) {
                  var inst_37746 = state_37803[9];
                  var inst_37744 = state_37803[10];
                  var inst_37671 = state_37803[11];
                  var inst_37751 = state_37803[12];
                  var inst_37751__$1 = cljs.core._nth.call(null, inst_37744, inst_37746);
                  var inst_37752 = cljs.core.async.put_BANG_.call(null, inst_37751__$1, inst_37671, done);
                  var state_37803__$1 = function() {
                    var statearr_37809 = state_37803;
                    statearr_37809[12] = inst_37751__$1;
                    return statearr_37809;
                  }();
                  if (cljs.core.truth_(inst_37752)) {
                    var statearr_37810_37895 = state_37803__$1;
                    statearr_37810_37895[1] = 30;
                  } else {
                    var statearr_37811_37896 = state_37803__$1;
                    statearr_37811_37896[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_37804 === 1) {
                    var state_37803__$1 = state_37803;
                    var statearr_37812_37897 = state_37803__$1;
                    statearr_37812_37897[2] = null;
                    statearr_37812_37897[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_37804 === 24) {
                      var inst_37702 = state_37803[7];
                      var inst_37721 = state_37803[2];
                      var inst_37722 = cljs.core.next.call(null, inst_37702);
                      var inst_37680 = inst_37722;
                      var inst_37681 = null;
                      var inst_37682 = 0;
                      var inst_37683 = 0;
                      var state_37803__$1 = function() {
                        var statearr_37813 = state_37803;
                        statearr_37813[13] = inst_37682;
                        statearr_37813[14] = inst_37721;
                        statearr_37813[15] = inst_37680;
                        statearr_37813[16] = inst_37681;
                        statearr_37813[17] = inst_37683;
                        return statearr_37813;
                      }();
                      var statearr_37814_37898 = state_37803__$1;
                      statearr_37814_37898[2] = null;
                      statearr_37814_37898[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_37804 === 39) {
                        var state_37803__$1 = state_37803;
                        var statearr_37818_37899 = state_37803__$1;
                        statearr_37818_37899[2] = null;
                        statearr_37818_37899[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_37804 === 4) {
                          var inst_37671 = state_37803[11];
                          var inst_37671__$1 = state_37803[2];
                          var inst_37672 = inst_37671__$1 == null;
                          var state_37803__$1 = function() {
                            var statearr_37819 = state_37803;
                            statearr_37819[11] = inst_37671__$1;
                            return statearr_37819;
                          }();
                          if (cljs.core.truth_(inst_37672)) {
                            var statearr_37820_37900 = state_37803__$1;
                            statearr_37820_37900[1] = 5;
                          } else {
                            var statearr_37821_37901 = state_37803__$1;
                            statearr_37821_37901[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_37804 === 15) {
                            var inst_37682 = state_37803[13];
                            var inst_37680 = state_37803[15];
                            var inst_37681 = state_37803[16];
                            var inst_37683 = state_37803[17];
                            var inst_37698 = state_37803[2];
                            var inst_37699 = inst_37683 + 1;
                            var tmp37815 = inst_37682;
                            var tmp37816 = inst_37680;
                            var tmp37817 = inst_37681;
                            var inst_37680__$1 = tmp37816;
                            var inst_37681__$1 = tmp37817;
                            var inst_37682__$1 = tmp37815;
                            var inst_37683__$1 = inst_37699;
                            var state_37803__$1 = function() {
                              var statearr_37822 = state_37803;
                              statearr_37822[13] = inst_37682__$1;
                              statearr_37822[15] = inst_37680__$1;
                              statearr_37822[18] = inst_37698;
                              statearr_37822[16] = inst_37681__$1;
                              statearr_37822[17] = inst_37683__$1;
                              return statearr_37822;
                            }();
                            var statearr_37823_37902 = state_37803__$1;
                            statearr_37823_37902[2] = null;
                            statearr_37823_37902[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_37804 === 21) {
                              var inst_37725 = state_37803[2];
                              var state_37803__$1 = state_37803;
                              var statearr_37827_37903 = state_37803__$1;
                              statearr_37827_37903[2] = inst_37725;
                              statearr_37827_37903[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_37804 === 31) {
                                var inst_37751 = state_37803[12];
                                var inst_37755 = done.call(null, null);
                                var inst_37756 = cljs.core.async.untap_STAR_.call(null, m, inst_37751);
                                var state_37803__$1 = function() {
                                  var statearr_37828 = state_37803;
                                  statearr_37828[19] = inst_37755;
                                  return statearr_37828;
                                }();
                                var statearr_37829_37904 = state_37803__$1;
                                statearr_37829_37904[2] = inst_37756;
                                statearr_37829_37904[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_37804 === 32) {
                                  var inst_37746 = state_37803[9];
                                  var inst_37743 = state_37803[20];
                                  var inst_37744 = state_37803[10];
                                  var inst_37745 = state_37803[21];
                                  var inst_37758 = state_37803[2];
                                  var inst_37759 = inst_37746 + 1;
                                  var tmp37824 = inst_37743;
                                  var tmp37825 = inst_37744;
                                  var tmp37826 = inst_37745;
                                  var inst_37743__$1 = tmp37824;
                                  var inst_37744__$1 = tmp37825;
                                  var inst_37745__$1 = tmp37826;
                                  var inst_37746__$1 = inst_37759;
                                  var state_37803__$1 = function() {
                                    var statearr_37830 = state_37803;
                                    statearr_37830[9] = inst_37746__$1;
                                    statearr_37830[22] = inst_37758;
                                    statearr_37830[20] = inst_37743__$1;
                                    statearr_37830[10] = inst_37744__$1;
                                    statearr_37830[21] = inst_37745__$1;
                                    return statearr_37830;
                                  }();
                                  var statearr_37831_37905 = state_37803__$1;
                                  statearr_37831_37905[2] = null;
                                  statearr_37831_37905[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_37804 === 40) {
                                    var inst_37771 = state_37803[23];
                                    var inst_37775 = done.call(null, null);
                                    var inst_37776 = cljs.core.async.untap_STAR_.call(null, m, inst_37771);
                                    var state_37803__$1 = function() {
                                      var statearr_37832 = state_37803;
                                      statearr_37832[24] = inst_37775;
                                      return statearr_37832;
                                    }();
                                    var statearr_37833_37906 = state_37803__$1;
                                    statearr_37833_37906[2] = inst_37776;
                                    statearr_37833_37906[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_37804 === 33) {
                                      var inst_37762 = state_37803[25];
                                      var inst_37764 = cljs.core.chunked_seq_QMARK_.call(null, inst_37762);
                                      var state_37803__$1 = state_37803;
                                      if (inst_37764) {
                                        var statearr_37834_37907 = state_37803__$1;
                                        statearr_37834_37907[1] = 36;
                                      } else {
                                        var statearr_37835_37908 = state_37803__$1;
                                        statearr_37835_37908[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_37804 === 13) {
                                        var inst_37692 = state_37803[26];
                                        var inst_37695 = cljs.core.async.close_BANG_.call(null, inst_37692);
                                        var state_37803__$1 = state_37803;
                                        var statearr_37836_37909 = state_37803__$1;
                                        statearr_37836_37909[2] = inst_37695;
                                        statearr_37836_37909[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_37804 === 22) {
                                          var inst_37715 = state_37803[8];
                                          var inst_37718 = cljs.core.async.close_BANG_.call(null, inst_37715);
                                          var state_37803__$1 = state_37803;
                                          var statearr_37837_37910 = state_37803__$1;
                                          statearr_37837_37910[2] = inst_37718;
                                          statearr_37837_37910[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_37804 === 36) {
                                            var inst_37762 = state_37803[25];
                                            var inst_37766 = cljs.core.chunk_first.call(null, inst_37762);
                                            var inst_37767 = cljs.core.chunk_rest.call(null, inst_37762);
                                            var inst_37768 = cljs.core.count.call(null, inst_37766);
                                            var inst_37743 = inst_37767;
                                            var inst_37744 = inst_37766;
                                            var inst_37745 = inst_37768;
                                            var inst_37746 = 0;
                                            var state_37803__$1 = function() {
                                              var statearr_37838 = state_37803;
                                              statearr_37838[9] = inst_37746;
                                              statearr_37838[20] = inst_37743;
                                              statearr_37838[10] = inst_37744;
                                              statearr_37838[21] = inst_37745;
                                              return statearr_37838;
                                            }();
                                            var statearr_37839_37911 = state_37803__$1;
                                            statearr_37839_37911[2] = null;
                                            statearr_37839_37911[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_37804 === 41) {
                                              var inst_37762 = state_37803[25];
                                              var inst_37778 = state_37803[2];
                                              var inst_37779 = cljs.core.next.call(null, inst_37762);
                                              var inst_37743 = inst_37779;
                                              var inst_37744 = null;
                                              var inst_37745 = 0;
                                              var inst_37746 = 0;
                                              var state_37803__$1 = function() {
                                                var statearr_37840 = state_37803;
                                                statearr_37840[9] = inst_37746;
                                                statearr_37840[27] = inst_37778;
                                                statearr_37840[20] = inst_37743;
                                                statearr_37840[10] = inst_37744;
                                                statearr_37840[21] = inst_37745;
                                                return statearr_37840;
                                              }();
                                              var statearr_37841_37912 = state_37803__$1;
                                              statearr_37841_37912[2] = null;
                                              statearr_37841_37912[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_37804 === 43) {
                                                var state_37803__$1 = state_37803;
                                                var statearr_37842_37913 = state_37803__$1;
                                                statearr_37842_37913[2] = null;
                                                statearr_37842_37913[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_37804 === 29) {
                                                  var inst_37787 = state_37803[2];
                                                  var state_37803__$1 = state_37803;
                                                  var statearr_37843_37914 = state_37803__$1;
                                                  statearr_37843_37914[2] = inst_37787;
                                                  statearr_37843_37914[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_37804 === 44) {
                                                    var inst_37796 = state_37803[2];
                                                    var state_37803__$1 = function() {
                                                      var statearr_37844 = state_37803;
                                                      statearr_37844[28] = inst_37796;
                                                      return statearr_37844;
                                                    }();
                                                    var statearr_37845_37915 = state_37803__$1;
                                                    statearr_37845_37915[2] = null;
                                                    statearr_37845_37915[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_37804 === 6) {
                                                      var inst_37735 = state_37803[29];
                                                      var inst_37734 = cljs.core.deref.call(null, cs);
                                                      var inst_37735__$1 = cljs.core.keys.call(null, inst_37734);
                                                      var inst_37736 = cljs.core.count.call(null, inst_37735__$1);
                                                      var inst_37737 = cljs.core.reset_BANG_.call(null, dctr, inst_37736);
                                                      var inst_37742 = cljs.core.seq.call(null, inst_37735__$1);
                                                      var inst_37743 = inst_37742;
                                                      var inst_37744 = null;
                                                      var inst_37745 = 0;
                                                      var inst_37746 = 0;
                                                      var state_37803__$1 = function() {
                                                        var statearr_37846 = state_37803;
                                                        statearr_37846[9] = inst_37746;
                                                        statearr_37846[29] = inst_37735__$1;
                                                        statearr_37846[20] = inst_37743;
                                                        statearr_37846[10] = inst_37744;
                                                        statearr_37846[30] = inst_37737;
                                                        statearr_37846[21] = inst_37745;
                                                        return statearr_37846;
                                                      }();
                                                      var statearr_37847_37916 = state_37803__$1;
                                                      statearr_37847_37916[2] = null;
                                                      statearr_37847_37916[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_37804 === 28) {
                                                        var inst_37762 = state_37803[25];
                                                        var inst_37743 = state_37803[20];
                                                        var inst_37762__$1 = cljs.core.seq.call(null, inst_37743);
                                                        var state_37803__$1 = function() {
                                                          var statearr_37848 = state_37803;
                                                          statearr_37848[25] = inst_37762__$1;
                                                          return statearr_37848;
                                                        }();
                                                        if (inst_37762__$1) {
                                                          var statearr_37849_37917 = state_37803__$1;
                                                          statearr_37849_37917[1] = 33;
                                                        } else {
                                                          var statearr_37850_37918 = state_37803__$1;
                                                          statearr_37850_37918[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_37804 === 25) {
                                                          var inst_37746 = state_37803[9];
                                                          var inst_37745 = state_37803[21];
                                                          var inst_37748 = inst_37746 < inst_37745;
                                                          var inst_37749 = inst_37748;
                                                          var state_37803__$1 = state_37803;
                                                          if (cljs.core.truth_(inst_37749)) {
                                                            var statearr_37851_37919 = state_37803__$1;
                                                            statearr_37851_37919[1] = 27;
                                                          } else {
                                                            var statearr_37852_37920 = state_37803__$1;
                                                            statearr_37852_37920[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_37804 === 34) {
                                                            var state_37803__$1 = state_37803;
                                                            var statearr_37853_37921 = state_37803__$1;
                                                            statearr_37853_37921[2] = null;
                                                            statearr_37853_37921[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_37804 === 17) {
                                                              var state_37803__$1 = state_37803;
                                                              var statearr_37854_37922 = state_37803__$1;
                                                              statearr_37854_37922[2] = null;
                                                              statearr_37854_37922[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_37804 === 3) {
                                                                var inst_37801 = state_37803[2];
                                                                var state_37803__$1 = state_37803;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_37803__$1, inst_37801);
                                                              } else {
                                                                if (state_val_37804 === 12) {
                                                                  var inst_37730 = state_37803[2];
                                                                  var state_37803__$1 = state_37803;
                                                                  var statearr_37855_37923 = state_37803__$1;
                                                                  statearr_37855_37923[2] = inst_37730;
                                                                  statearr_37855_37923[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_37804 === 2) {
                                                                    var state_37803__$1 = state_37803;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37803__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_37804 === 23) {
                                                                      var state_37803__$1 = state_37803;
                                                                      var statearr_37856_37924 = state_37803__$1;
                                                                      statearr_37856_37924[2] = null;
                                                                      statearr_37856_37924[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_37804 === 35) {
                                                                        var inst_37785 = state_37803[2];
                                                                        var state_37803__$1 = state_37803;
                                                                        var statearr_37857_37925 = state_37803__$1;
                                                                        statearr_37857_37925[2] = inst_37785;
                                                                        statearr_37857_37925[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_37804 === 19) {
                                                                          var inst_37702 = state_37803[7];
                                                                          var inst_37706 = cljs.core.chunk_first.call(null, inst_37702);
                                                                          var inst_37707 = cljs.core.chunk_rest.call(null, inst_37702);
                                                                          var inst_37708 = cljs.core.count.call(null, inst_37706);
                                                                          var inst_37680 = inst_37707;
                                                                          var inst_37681 = inst_37706;
                                                                          var inst_37682 = inst_37708;
                                                                          var inst_37683 = 0;
                                                                          var state_37803__$1 = function() {
                                                                            var statearr_37858 = state_37803;
                                                                            statearr_37858[13] = inst_37682;
                                                                            statearr_37858[15] = inst_37680;
                                                                            statearr_37858[16] = inst_37681;
                                                                            statearr_37858[17] = inst_37683;
                                                                            return statearr_37858;
                                                                          }();
                                                                          var statearr_37859_37926 = state_37803__$1;
                                                                          statearr_37859_37926[2] = null;
                                                                          statearr_37859_37926[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_37804 === 11) {
                                                                            var inst_37702 = state_37803[7];
                                                                            var inst_37680 = state_37803[15];
                                                                            var inst_37702__$1 = cljs.core.seq.call(null, inst_37680);
                                                                            var state_37803__$1 = function() {
                                                                              var statearr_37860 = state_37803;
                                                                              statearr_37860[7] = inst_37702__$1;
                                                                              return statearr_37860;
                                                                            }();
                                                                            if (inst_37702__$1) {
                                                                              var statearr_37861_37927 = state_37803__$1;
                                                                              statearr_37861_37927[1] = 16;
                                                                            } else {
                                                                              var statearr_37862_37928 = state_37803__$1;
                                                                              statearr_37862_37928[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_37804 === 9) {
                                                                              var inst_37732 = state_37803[2];
                                                                              var state_37803__$1 = state_37803;
                                                                              var statearr_37863_37929 = state_37803__$1;
                                                                              statearr_37863_37929[2] = inst_37732;
                                                                              statearr_37863_37929[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_37804 === 5) {
                                                                                var inst_37678 = cljs.core.deref.call(null, cs);
                                                                                var inst_37679 = cljs.core.seq.call(null, inst_37678);
                                                                                var inst_37680 = inst_37679;
                                                                                var inst_37681 = null;
                                                                                var inst_37682 = 0;
                                                                                var inst_37683 = 0;
                                                                                var state_37803__$1 = function() {
                                                                                  var statearr_37864 = state_37803;
                                                                                  statearr_37864[13] = inst_37682;
                                                                                  statearr_37864[15] = inst_37680;
                                                                                  statearr_37864[16] = inst_37681;
                                                                                  statearr_37864[17] = inst_37683;
                                                                                  return statearr_37864;
                                                                                }();
                                                                                var statearr_37865_37930 = state_37803__$1;
                                                                                statearr_37865_37930[2] = null;
                                                                                statearr_37865_37930[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_37804 === 14) {
                                                                                  var state_37803__$1 = state_37803;
                                                                                  var statearr_37866_37931 = state_37803__$1;
                                                                                  statearr_37866_37931[2] = null;
                                                                                  statearr_37866_37931[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_37804 === 45) {
                                                                                    var inst_37793 = state_37803[2];
                                                                                    var state_37803__$1 = state_37803;
                                                                                    var statearr_37867_37932 = state_37803__$1;
                                                                                    statearr_37867_37932[2] = inst_37793;
                                                                                    statearr_37867_37932[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_37804 === 26) {
                                                                                      var inst_37735 = state_37803[29];
                                                                                      var inst_37789 = state_37803[2];
                                                                                      var inst_37790 = cljs.core.seq.call(null, inst_37735);
                                                                                      var state_37803__$1 = function() {
                                                                                        var statearr_37868 = state_37803;
                                                                                        statearr_37868[31] = inst_37789;
                                                                                        return statearr_37868;
                                                                                      }();
                                                                                      if (inst_37790) {
                                                                                        var statearr_37869_37933 = state_37803__$1;
                                                                                        statearr_37869_37933[1] = 42;
                                                                                      } else {
                                                                                        var statearr_37870_37934 = state_37803__$1;
                                                                                        statearr_37870_37934[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_37804 === 16) {
                                                                                        var inst_37702 = state_37803[7];
                                                                                        var inst_37704 = cljs.core.chunked_seq_QMARK_.call(null, inst_37702);
                                                                                        var state_37803__$1 = state_37803;
                                                                                        if (inst_37704) {
                                                                                          var statearr_37871_37935 = state_37803__$1;
                                                                                          statearr_37871_37935[1] = 19;
                                                                                        } else {
                                                                                          var statearr_37872_37936 = state_37803__$1;
                                                                                          statearr_37872_37936[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_37804 === 38) {
                                                                                          var inst_37782 = state_37803[2];
                                                                                          var state_37803__$1 = state_37803;
                                                                                          var statearr_37873_37937 = state_37803__$1;
                                                                                          statearr_37873_37937[2] = inst_37782;
                                                                                          statearr_37873_37937[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_37804 === 30) {
                                                                                            var state_37803__$1 = state_37803;
                                                                                            var statearr_37874_37938 = state_37803__$1;
                                                                                            statearr_37874_37938[2] = null;
                                                                                            statearr_37874_37938[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_37804 === 10) {
                                                                                              var inst_37681 = state_37803[16];
                                                                                              var inst_37683 = state_37803[17];
                                                                                              var inst_37691 = cljs.core._nth.call(null, inst_37681, inst_37683);
                                                                                              var inst_37692 = cljs.core.nth.call(null, inst_37691, 0, null);
                                                                                              var inst_37693 = cljs.core.nth.call(null, inst_37691, 1, null);
                                                                                              var state_37803__$1 = function() {
                                                                                                var statearr_37875 = state_37803;
                                                                                                statearr_37875[26] = inst_37692;
                                                                                                return statearr_37875;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_37693)) {
                                                                                                var statearr_37876_37939 = state_37803__$1;
                                                                                                statearr_37876_37939[1] = 13;
                                                                                              } else {
                                                                                                var statearr_37877_37940 = state_37803__$1;
                                                                                                statearr_37877_37940[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_37804 === 18) {
                                                                                                var inst_37728 = state_37803[2];
                                                                                                var state_37803__$1 = state_37803;
                                                                                                var statearr_37878_37941 = state_37803__$1;
                                                                                                statearr_37878_37941[2] = inst_37728;
                                                                                                statearr_37878_37941[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_37804 === 42) {
                                                                                                  var state_37803__$1 = state_37803;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_37803__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_37804 === 37) {
                                                                                                    var inst_37762 = state_37803[25];
                                                                                                    var inst_37671 = state_37803[11];
                                                                                                    var inst_37771 = state_37803[23];
                                                                                                    var inst_37771__$1 = cljs.core.first.call(null, inst_37762);
                                                                                                    var inst_37772 = cljs.core.async.put_BANG_.call(null, inst_37771__$1, inst_37671, done);
                                                                                                    var state_37803__$1 = function() {
                                                                                                      var statearr_37879 = state_37803;
                                                                                                      statearr_37879[23] = inst_37771__$1;
                                                                                                      return statearr_37879;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_37772)) {
                                                                                                      var statearr_37880_37942 = state_37803__$1;
                                                                                                      statearr_37880_37942[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_37881_37943 = state_37803__$1;
                                                                                                      statearr_37881_37943[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_37804 === 8) {
                                                                                                      var inst_37682 = state_37803[13];
                                                                                                      var inst_37683 = state_37803[17];
                                                                                                      var inst_37685 = inst_37683 < inst_37682;
                                                                                                      var inst_37686 = inst_37685;
                                                                                                      var state_37803__$1 = state_37803;
                                                                                                      if (cljs.core.truth_(inst_37686)) {
                                                                                                        var statearr_37882_37944 = state_37803__$1;
                                                                                                        statearr_37882_37944[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_37883_37945 = state_37803__$1;
                                                                                                        statearr_37883_37945[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___37891, cs, m, dchan, dctr, done);
        return function(switch__36426__auto__, c__36538__auto___37891, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__36427__auto__ = null;
            var cljs$core$async$mult_$_state_machine__36427__auto____0 = function() {
              var statearr_37887 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_37887[0] = cljs$core$async$mult_$_state_machine__36427__auto__;
              statearr_37887[1] = 1;
              return statearr_37887;
            };
            var cljs$core$async$mult_$_state_machine__36427__auto____1 = function(state_37803) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_37803);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e37888) {
                    if (e37888 instanceof Object) {
                      var ex__36430__auto__ = e37888;
                      var statearr_37889_37946 = state_37803;
                      statearr_37889_37946[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_37803);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e37888;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__37947 = state_37803;
                  state_37803 = G__37947;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__36427__auto__ = function(state_37803) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__36427__auto____1.call(this, state_37803);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__36427__auto____0;
            cljs$core$async$mult_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__36427__auto____1;
            return cljs$core$async$mult_$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___37891, cs, m, dchan, dctr, done);
      }();
      var state__36540__auto__ = function() {
        var statearr_37890 = f__36539__auto__.call(null);
        statearr_37890[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___37891;
        return statearr_37890;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___37891, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var args37948 = [];
  var len__31204__auto___37951 = arguments.length;
  var i__31205__auto___37952 = 0;
  while (true) {
    if (i__31205__auto___37952 < len__31204__auto___37951) {
      args37948.push(arguments[i__31205__auto___37952]);
      var G__37953 = i__31205__auto___37952 + 1;
      i__31205__auto___37952 = G__37953;
      continue;
    } else {
    }
    break;
  }
  var G__37950 = args37948.length;
  switch(G__37950) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args37948.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__30759__auto__ = m == null ? null : m;
    var m__30760__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, m, ch);
    } else {
      var m__30760__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__30759__auto__ = m == null ? null : m;
    var m__30760__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, m, ch);
    } else {
      var m__30760__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__30759__auto__ = m == null ? null : m;
    var m__30760__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, m);
    } else {
      var m__30760__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__30759__auto__ = m == null ? null : m;
    var m__30760__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, m, state_map);
    } else {
      var m__30760__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__30759__auto__ = m == null ? null : m;
    var m__30760__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, m, mode);
    } else {
      var m__30760__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___37965 = arguments.length;
  var i__31205__auto___37966 = 0;
  while (true) {
    if (i__31205__auto___37966 < len__31204__auto___37965) {
      args__31211__auto__.push(arguments[i__31205__auto___37966]);
      var G__37967 = i__31205__auto___37966 + 1;
      i__31205__auto___37966 = G__37967;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 3 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(3), 0, null) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__31212__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__37959) {
  var map__37960 = p__37959;
  var map__37960__$1 = (!(map__37960 == null) ? map__37960.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__37960.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__37960) : map__37960;
  var opts = map__37960__$1;
  var statearr_37962_37968 = state;
  statearr_37962_37968[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4657__auto__ = cljs.core.async.do_alts.call(null, function(map__37960, map__37960__$1, opts) {
    return function(val) {
      var statearr_37963_37969 = state;
      statearr_37963_37969[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__37960, map__37960__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var cb = temp__4657__auto__;
    var statearr_37964_37970 = state;
    statearr_37964_37970[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq37955) {
  var G__37956 = cljs.core.first.call(null, seq37955);
  var seq37955__$1 = cljs.core.next.call(null, seq37955);
  var G__37957 = cljs.core.first.call(null, seq37955__$1);
  var seq37955__$2 = cljs.core.next.call(null, seq37955__$1);
  var G__37958 = cljs.core.first.call(null, seq37955__$2);
  var seq37955__$3 = cljs.core.next.call(null, seq37955__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__37956, G__37957, G__37958, seq37955__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async38138 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async38138 = function(out, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, meta38139) {
        this.out = out;
        this.cs = cs;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.solo_mode = solo_mode;
        this.change = change;
        this.changed = changed;
        this.pick = pick;
        this.calc_state = calc_state;
        this.meta38139 = meta38139;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_38140, meta38139__$1) {
          var self__ = this;
          var _38140__$1 = this;
          return new cljs.core.async.t_cljs$core$async38138(self__.out, self__.cs, self__.solo_modes, self__.attrs, self__.solo_mode, self__.change, self__.changed, self__.pick, self__.calc_state, meta38139__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_38140) {
          var self__ = this;
          var _38140__$1 = this;
          return self__.meta38139;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$async$Mix$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str("(solo-modes mode)")].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "change", "change", 477485025, null), new cljs.core.Symbol(null, 
          "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "meta38139", "meta38139", 1023871206, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async38138.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async38138.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async38138";
      cljs.core.async.t_cljs$core$async38138.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
          return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async38138");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async38138 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async38138(out__$1, cs__$1, solo_modes__$1, attrs__$1, solo_mode__$1, change__$1, changed__$1, pick__$1, calc_state__$1, meta38139) {
          return new cljs.core.async.t_cljs$core$async38138(out__$1, cs__$1, solo_modes__$1, attrs__$1, solo_mode__$1, change__$1, changed__$1, pick__$1, calc_state__$1, meta38139);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async38138(out, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__36538__auto___38305 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___38305, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___38305, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_38242) {
            var state_val_38243 = state_38242[1];
            if (state_val_38243 === 7) {
              var inst_38157 = state_38242[2];
              var state_38242__$1 = state_38242;
              var statearr_38244_38306 = state_38242__$1;
              statearr_38244_38306[2] = inst_38157;
              statearr_38244_38306[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_38243 === 20) {
                var inst_38169 = state_38242[7];
                var state_38242__$1 = state_38242;
                var statearr_38245_38307 = state_38242__$1;
                statearr_38245_38307[2] = inst_38169;
                statearr_38245_38307[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_38243 === 27) {
                  var state_38242__$1 = state_38242;
                  var statearr_38246_38308 = state_38242__$1;
                  statearr_38246_38308[2] = null;
                  statearr_38246_38308[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_38243 === 1) {
                    var inst_38144 = state_38242[8];
                    var inst_38144__$1 = calc_state.call(null);
                    var inst_38146 = inst_38144__$1 == null;
                    var inst_38147 = cljs.core.not.call(null, inst_38146);
                    var state_38242__$1 = function() {
                      var statearr_38247 = state_38242;
                      statearr_38247[8] = inst_38144__$1;
                      return statearr_38247;
                    }();
                    if (inst_38147) {
                      var statearr_38248_38309 = state_38242__$1;
                      statearr_38248_38309[1] = 2;
                    } else {
                      var statearr_38249_38310 = state_38242__$1;
                      statearr_38249_38310[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_38243 === 24) {
                      var inst_38216 = state_38242[9];
                      var inst_38193 = state_38242[10];
                      var inst_38202 = state_38242[11];
                      var inst_38216__$1 = inst_38193.call(null, inst_38202);
                      var state_38242__$1 = function() {
                        var statearr_38250 = state_38242;
                        statearr_38250[9] = inst_38216__$1;
                        return statearr_38250;
                      }();
                      if (cljs.core.truth_(inst_38216__$1)) {
                        var statearr_38251_38311 = state_38242__$1;
                        statearr_38251_38311[1] = 29;
                      } else {
                        var statearr_38252_38312 = state_38242__$1;
                        statearr_38252_38312[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_38243 === 4) {
                        var inst_38160 = state_38242[2];
                        var state_38242__$1 = state_38242;
                        if (cljs.core.truth_(inst_38160)) {
                          var statearr_38253_38313 = state_38242__$1;
                          statearr_38253_38313[1] = 8;
                        } else {
                          var statearr_38254_38314 = state_38242__$1;
                          statearr_38254_38314[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_38243 === 15) {
                          var inst_38187 = state_38242[2];
                          var state_38242__$1 = state_38242;
                          if (cljs.core.truth_(inst_38187)) {
                            var statearr_38255_38315 = state_38242__$1;
                            statearr_38255_38315[1] = 19;
                          } else {
                            var statearr_38256_38316 = state_38242__$1;
                            statearr_38256_38316[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_38243 === 21) {
                            var inst_38192 = state_38242[12];
                            var inst_38192__$1 = state_38242[2];
                            var inst_38193 = cljs.core.get.call(null, inst_38192__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_38194 = cljs.core.get.call(null, inst_38192__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_38195 = cljs.core.get.call(null, inst_38192__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_38242__$1 = function() {
                              var statearr_38257 = state_38242;
                              statearr_38257[10] = inst_38193;
                              statearr_38257[13] = inst_38194;
                              statearr_38257[12] = inst_38192__$1;
                              return statearr_38257;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_38242__$1, 22, inst_38195);
                          } else {
                            if (state_val_38243 === 31) {
                              var inst_38224 = state_38242[2];
                              var state_38242__$1 = state_38242;
                              if (cljs.core.truth_(inst_38224)) {
                                var statearr_38258_38317 = state_38242__$1;
                                statearr_38258_38317[1] = 32;
                              } else {
                                var statearr_38259_38318 = state_38242__$1;
                                statearr_38259_38318[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_38243 === 32) {
                                var inst_38201 = state_38242[14];
                                var state_38242__$1 = state_38242;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_38242__$1, 35, out, inst_38201);
                              } else {
                                if (state_val_38243 === 33) {
                                  var inst_38192 = state_38242[12];
                                  var inst_38169 = inst_38192;
                                  var state_38242__$1 = function() {
                                    var statearr_38260 = state_38242;
                                    statearr_38260[7] = inst_38169;
                                    return statearr_38260;
                                  }();
                                  var statearr_38261_38319 = state_38242__$1;
                                  statearr_38261_38319[2] = null;
                                  statearr_38261_38319[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_38243 === 13) {
                                    var inst_38169 = state_38242[7];
                                    var inst_38176 = inst_38169.cljs$lang$protocol_mask$partition0$;
                                    var inst_38177 = inst_38176 & 64;
                                    var inst_38178 = inst_38169.cljs$core$ISeq$;
                                    var inst_38179 = cljs.core.PROTOCOL_SENTINEL === inst_38178;
                                    var inst_38180 = inst_38177 || inst_38179;
                                    var state_38242__$1 = state_38242;
                                    if (cljs.core.truth_(inst_38180)) {
                                      var statearr_38262_38320 = state_38242__$1;
                                      statearr_38262_38320[1] = 16;
                                    } else {
                                      var statearr_38263_38321 = state_38242__$1;
                                      statearr_38263_38321[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_38243 === 22) {
                                      var inst_38201 = state_38242[14];
                                      var inst_38202 = state_38242[11];
                                      var inst_38200 = state_38242[2];
                                      var inst_38201__$1 = cljs.core.nth.call(null, inst_38200, 0, null);
                                      var inst_38202__$1 = cljs.core.nth.call(null, inst_38200, 1, null);
                                      var inst_38203 = inst_38201__$1 == null;
                                      var inst_38204 = cljs.core._EQ_.call(null, inst_38202__$1, change);
                                      var inst_38205 = inst_38203 || inst_38204;
                                      var state_38242__$1 = function() {
                                        var statearr_38264 = state_38242;
                                        statearr_38264[14] = inst_38201__$1;
                                        statearr_38264[11] = inst_38202__$1;
                                        return statearr_38264;
                                      }();
                                      if (cljs.core.truth_(inst_38205)) {
                                        var statearr_38265_38322 = state_38242__$1;
                                        statearr_38265_38322[1] = 23;
                                      } else {
                                        var statearr_38266_38323 = state_38242__$1;
                                        statearr_38266_38323[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_38243 === 36) {
                                        var inst_38192 = state_38242[12];
                                        var inst_38169 = inst_38192;
                                        var state_38242__$1 = function() {
                                          var statearr_38267 = state_38242;
                                          statearr_38267[7] = inst_38169;
                                          return statearr_38267;
                                        }();
                                        var statearr_38268_38324 = state_38242__$1;
                                        statearr_38268_38324[2] = null;
                                        statearr_38268_38324[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_38243 === 29) {
                                          var inst_38216 = state_38242[9];
                                          var state_38242__$1 = state_38242;
                                          var statearr_38269_38325 = state_38242__$1;
                                          statearr_38269_38325[2] = inst_38216;
                                          statearr_38269_38325[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_38243 === 6) {
                                            var state_38242__$1 = state_38242;
                                            var statearr_38270_38326 = state_38242__$1;
                                            statearr_38270_38326[2] = false;
                                            statearr_38270_38326[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_38243 === 28) {
                                              var inst_38212 = state_38242[2];
                                              var inst_38213 = calc_state.call(null);
                                              var inst_38169 = inst_38213;
                                              var state_38242__$1 = function() {
                                                var statearr_38271 = state_38242;
                                                statearr_38271[15] = inst_38212;
                                                statearr_38271[7] = inst_38169;
                                                return statearr_38271;
                                              }();
                                              var statearr_38272_38327 = state_38242__$1;
                                              statearr_38272_38327[2] = null;
                                              statearr_38272_38327[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_38243 === 25) {
                                                var inst_38238 = state_38242[2];
                                                var state_38242__$1 = state_38242;
                                                var statearr_38273_38328 = state_38242__$1;
                                                statearr_38273_38328[2] = inst_38238;
                                                statearr_38273_38328[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_38243 === 34) {
                                                  var inst_38236 = state_38242[2];
                                                  var state_38242__$1 = state_38242;
                                                  var statearr_38274_38329 = state_38242__$1;
                                                  statearr_38274_38329[2] = inst_38236;
                                                  statearr_38274_38329[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_38243 === 17) {
                                                    var state_38242__$1 = state_38242;
                                                    var statearr_38275_38330 = state_38242__$1;
                                                    statearr_38275_38330[2] = false;
                                                    statearr_38275_38330[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_38243 === 3) {
                                                      var state_38242__$1 = state_38242;
                                                      var statearr_38276_38331 = state_38242__$1;
                                                      statearr_38276_38331[2] = false;
                                                      statearr_38276_38331[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_38243 === 12) {
                                                        var inst_38240 = state_38242[2];
                                                        var state_38242__$1 = state_38242;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_38242__$1, inst_38240);
                                                      } else {
                                                        if (state_val_38243 === 2) {
                                                          var inst_38144 = state_38242[8];
                                                          var inst_38149 = inst_38144.cljs$lang$protocol_mask$partition0$;
                                                          var inst_38150 = inst_38149 & 64;
                                                          var inst_38151 = inst_38144.cljs$core$ISeq$;
                                                          var inst_38152 = cljs.core.PROTOCOL_SENTINEL === inst_38151;
                                                          var inst_38153 = inst_38150 || inst_38152;
                                                          var state_38242__$1 = state_38242;
                                                          if (cljs.core.truth_(inst_38153)) {
                                                            var statearr_38277_38332 = state_38242__$1;
                                                            statearr_38277_38332[1] = 5;
                                                          } else {
                                                            var statearr_38278_38333 = state_38242__$1;
                                                            statearr_38278_38333[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_38243 === 23) {
                                                            var inst_38201 = state_38242[14];
                                                            var inst_38207 = inst_38201 == null;
                                                            var state_38242__$1 = state_38242;
                                                            if (cljs.core.truth_(inst_38207)) {
                                                              var statearr_38279_38334 = state_38242__$1;
                                                              statearr_38279_38334[1] = 26;
                                                            } else {
                                                              var statearr_38280_38335 = state_38242__$1;
                                                              statearr_38280_38335[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_38243 === 35) {
                                                              var inst_38227 = state_38242[2];
                                                              var state_38242__$1 = state_38242;
                                                              if (cljs.core.truth_(inst_38227)) {
                                                                var statearr_38281_38336 = state_38242__$1;
                                                                statearr_38281_38336[1] = 36;
                                                              } else {
                                                                var statearr_38282_38337 = state_38242__$1;
                                                                statearr_38282_38337[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_38243 === 19) {
                                                                var inst_38169 = state_38242[7];
                                                                var inst_38189 = cljs.core.apply.call(null, cljs.core.hash_map, inst_38169);
                                                                var state_38242__$1 = state_38242;
                                                                var statearr_38283_38338 = state_38242__$1;
                                                                statearr_38283_38338[2] = inst_38189;
                                                                statearr_38283_38338[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_38243 === 11) {
                                                                  var inst_38169 = state_38242[7];
                                                                  var inst_38173 = inst_38169 == null;
                                                                  var inst_38174 = cljs.core.not.call(null, inst_38173);
                                                                  var state_38242__$1 = state_38242;
                                                                  if (inst_38174) {
                                                                    var statearr_38284_38339 = state_38242__$1;
                                                                    statearr_38284_38339[1] = 13;
                                                                  } else {
                                                                    var statearr_38285_38340 = state_38242__$1;
                                                                    statearr_38285_38340[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_38243 === 9) {
                                                                    var inst_38144 = state_38242[8];
                                                                    var state_38242__$1 = state_38242;
                                                                    var statearr_38286_38341 = state_38242__$1;
                                                                    statearr_38286_38341[2] = inst_38144;
                                                                    statearr_38286_38341[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_38243 === 5) {
                                                                      var state_38242__$1 = state_38242;
                                                                      var statearr_38287_38342 = state_38242__$1;
                                                                      statearr_38287_38342[2] = true;
                                                                      statearr_38287_38342[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_38243 === 14) {
                                                                        var state_38242__$1 = state_38242;
                                                                        var statearr_38288_38343 = state_38242__$1;
                                                                        statearr_38288_38343[2] = false;
                                                                        statearr_38288_38343[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_38243 === 26) {
                                                                          var inst_38202 = state_38242[11];
                                                                          var inst_38209 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_38202);
                                                                          var state_38242__$1 = state_38242;
                                                                          var statearr_38289_38344 = state_38242__$1;
                                                                          statearr_38289_38344[2] = inst_38209;
                                                                          statearr_38289_38344[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_38243 === 16) {
                                                                            var state_38242__$1 = state_38242;
                                                                            var statearr_38290_38345 = state_38242__$1;
                                                                            statearr_38290_38345[2] = true;
                                                                            statearr_38290_38345[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_38243 === 38) {
                                                                              var inst_38232 = state_38242[2];
                                                                              var state_38242__$1 = state_38242;
                                                                              var statearr_38291_38346 = state_38242__$1;
                                                                              statearr_38291_38346[2] = inst_38232;
                                                                              statearr_38291_38346[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_38243 === 30) {
                                                                                var inst_38193 = state_38242[10];
                                                                                var inst_38194 = state_38242[13];
                                                                                var inst_38202 = state_38242[11];
                                                                                var inst_38219 = cljs.core.empty_QMARK_.call(null, inst_38193);
                                                                                var inst_38220 = inst_38194.call(null, inst_38202);
                                                                                var inst_38221 = cljs.core.not.call(null, inst_38220);
                                                                                var inst_38222 = inst_38219 && inst_38221;
                                                                                var state_38242__$1 = state_38242;
                                                                                var statearr_38292_38347 = state_38242__$1;
                                                                                statearr_38292_38347[2] = inst_38222;
                                                                                statearr_38292_38347[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_38243 === 10) {
                                                                                  var inst_38144 = state_38242[8];
                                                                                  var inst_38165 = state_38242[2];
                                                                                  var inst_38166 = cljs.core.get.call(null, inst_38165, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_38167 = cljs.core.get.call(null, inst_38165, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_38168 = cljs.core.get.call(null, inst_38165, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_38169 = inst_38144;
                                                                                  var state_38242__$1 = function() {
                                                                                    var statearr_38293 = state_38242;
                                                                                    statearr_38293[16] = inst_38168;
                                                                                    statearr_38293[17] = inst_38167;
                                                                                    statearr_38293[18] = inst_38166;
                                                                                    statearr_38293[7] = inst_38169;
                                                                                    return statearr_38293;
                                                                                  }();
                                                                                  var statearr_38294_38348 = state_38242__$1;
                                                                                  statearr_38294_38348[2] = null;
                                                                                  statearr_38294_38348[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_38243 === 18) {
                                                                                    var inst_38184 = state_38242[2];
                                                                                    var state_38242__$1 = state_38242;
                                                                                    var statearr_38295_38349 = state_38242__$1;
                                                                                    statearr_38295_38349[2] = inst_38184;
                                                                                    statearr_38295_38349[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_38243 === 37) {
                                                                                      var state_38242__$1 = state_38242;
                                                                                      var statearr_38296_38350 = state_38242__$1;
                                                                                      statearr_38296_38350[2] = null;
                                                                                      statearr_38296_38350[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_38243 === 8) {
                                                                                        var inst_38144 = state_38242[8];
                                                                                        var inst_38162 = cljs.core.apply.call(null, cljs.core.hash_map, inst_38144);
                                                                                        var state_38242__$1 = state_38242;
                                                                                        var statearr_38297_38351 = state_38242__$1;
                                                                                        statearr_38297_38351[2] = inst_38162;
                                                                                        statearr_38297_38351[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___38305, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__36426__auto__, c__36538__auto___38305, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__36427__auto__ = null;
            var cljs$core$async$mix_$_state_machine__36427__auto____0 = function() {
              var statearr_38301 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_38301[0] = cljs$core$async$mix_$_state_machine__36427__auto__;
              statearr_38301[1] = 1;
              return statearr_38301;
            };
            var cljs$core$async$mix_$_state_machine__36427__auto____1 = function(state_38242) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_38242);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e38302) {
                    if (e38302 instanceof Object) {
                      var ex__36430__auto__ = e38302;
                      var statearr_38303_38352 = state_38242;
                      statearr_38303_38352[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_38242);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e38302;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__38353 = state_38242;
                  state_38242 = G__38353;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__36427__auto__ = function(state_38242) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__36427__auto____1.call(this, state_38242);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__36427__auto____0;
            cljs$core$async$mix_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__36427__auto____1;
            return cljs$core$async$mix_$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___38305, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__36540__auto__ = function() {
        var statearr_38304 = f__36539__auto__.call(null);
        statearr_38304[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___38305;
        return statearr_38304;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___38305, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__30759__auto__ = p == null ? null : p;
    var m__30760__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__30760__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__30759__auto__ = p == null ? null : p;
    var m__30760__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, p, v, ch);
    } else {
      var m__30760__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var args38354 = [];
  var len__31204__auto___38357 = arguments.length;
  var i__31205__auto___38358 = 0;
  while (true) {
    if (i__31205__auto___38358 < len__31204__auto___38357) {
      args38354.push(arguments[i__31205__auto___38358]);
      var G__38359 = i__31205__auto___38358 + 1;
      i__31205__auto___38358 = G__38359;
      continue;
    } else {
    }
    break;
  }
  var G__38356 = args38354.length;
  switch(G__38356) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38354.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__30759__auto__ = p == null ? null : p;
    var m__30760__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, p);
    } else {
      var m__30760__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__30759__auto__ = p == null ? null : p;
    var m__30760__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, p, v);
    } else {
      var m__30760__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var args38362 = [];
  var len__31204__auto___38487 = arguments.length;
  var i__31205__auto___38488 = 0;
  while (true) {
    if (i__31205__auto___38488 < len__31204__auto___38487) {
      args38362.push(arguments[i__31205__auto___38488]);
      var G__38489 = i__31205__auto___38488 + 1;
      i__31205__auto___38488 = G__38489;
      continue;
    } else {
    }
    break;
  }
  var G__38364 = args38362.length;
  switch(G__38364) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38362.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__30096__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__30096__auto__)) {
        return or__30096__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__30096__auto__, mults) {
          return function(p1__38361_SHARP_) {
            if (cljs.core.truth_(p1__38361_SHARP_.call(null, topic))) {
              return p1__38361_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__38361_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__30096__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t_cljs$core$async38365 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async38365 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta38366) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta38366 = meta38366;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_38367, meta38366__$1) {
          var self__ = this;
          var _38367__$1 = this;
          return new cljs.core.async.t_cljs$core$async38365(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta38366__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_38367) {
          var self__ = this;
          var _38367__$1 = this;
          return self__.meta38366;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$async$Mux$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$async$Pub$ = cljs.core.PROTOCOL_SENTINEL;
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4657__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4657__auto__)) {
            var m = temp__4657__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async38365.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async38365.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta38366", "meta38366", 525666910, null)], 
          null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async38365.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async38365.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async38365";
      cljs.core.async.t_cljs$core$async38365.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
          return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async38365");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async38365 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async38365(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta38366) {
          return new cljs.core.async.t_cljs$core$async38365(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta38366);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async38365(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__36538__auto___38491 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___38491, mults, ensure_mult, p) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___38491, mults, ensure_mult, p) {
          return function(state_38439) {
            var state_val_38440 = state_38439[1];
            if (state_val_38440 === 7) {
              var inst_38435 = state_38439[2];
              var state_38439__$1 = state_38439;
              var statearr_38441_38492 = state_38439__$1;
              statearr_38441_38492[2] = inst_38435;
              statearr_38441_38492[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_38440 === 20) {
                var state_38439__$1 = state_38439;
                var statearr_38442_38493 = state_38439__$1;
                statearr_38442_38493[2] = null;
                statearr_38442_38493[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_38440 === 1) {
                  var state_38439__$1 = state_38439;
                  var statearr_38443_38494 = state_38439__$1;
                  statearr_38443_38494[2] = null;
                  statearr_38443_38494[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_38440 === 24) {
                    var inst_38418 = state_38439[7];
                    var inst_38427 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_38418);
                    var state_38439__$1 = state_38439;
                    var statearr_38444_38495 = state_38439__$1;
                    statearr_38444_38495[2] = inst_38427;
                    statearr_38444_38495[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_38440 === 4) {
                      var inst_38370 = state_38439[8];
                      var inst_38370__$1 = state_38439[2];
                      var inst_38371 = inst_38370__$1 == null;
                      var state_38439__$1 = function() {
                        var statearr_38445 = state_38439;
                        statearr_38445[8] = inst_38370__$1;
                        return statearr_38445;
                      }();
                      if (cljs.core.truth_(inst_38371)) {
                        var statearr_38446_38496 = state_38439__$1;
                        statearr_38446_38496[1] = 5;
                      } else {
                        var statearr_38447_38497 = state_38439__$1;
                        statearr_38447_38497[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_38440 === 15) {
                        var inst_38412 = state_38439[2];
                        var state_38439__$1 = state_38439;
                        var statearr_38448_38498 = state_38439__$1;
                        statearr_38448_38498[2] = inst_38412;
                        statearr_38448_38498[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_38440 === 21) {
                          var inst_38432 = state_38439[2];
                          var state_38439__$1 = function() {
                            var statearr_38449 = state_38439;
                            statearr_38449[9] = inst_38432;
                            return statearr_38449;
                          }();
                          var statearr_38450_38499 = state_38439__$1;
                          statearr_38450_38499[2] = null;
                          statearr_38450_38499[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_38440 === 13) {
                            var inst_38394 = state_38439[10];
                            var inst_38396 = cljs.core.chunked_seq_QMARK_.call(null, inst_38394);
                            var state_38439__$1 = state_38439;
                            if (inst_38396) {
                              var statearr_38451_38500 = state_38439__$1;
                              statearr_38451_38500[1] = 16;
                            } else {
                              var statearr_38452_38501 = state_38439__$1;
                              statearr_38452_38501[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_38440 === 22) {
                              var inst_38424 = state_38439[2];
                              var state_38439__$1 = state_38439;
                              if (cljs.core.truth_(inst_38424)) {
                                var statearr_38453_38502 = state_38439__$1;
                                statearr_38453_38502[1] = 23;
                              } else {
                                var statearr_38454_38503 = state_38439__$1;
                                statearr_38454_38503[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_38440 === 6) {
                                var inst_38420 = state_38439[11];
                                var inst_38418 = state_38439[7];
                                var inst_38370 = state_38439[8];
                                var inst_38418__$1 = topic_fn.call(null, inst_38370);
                                var inst_38419 = cljs.core.deref.call(null, mults);
                                var inst_38420__$1 = cljs.core.get.call(null, inst_38419, inst_38418__$1);
                                var state_38439__$1 = function() {
                                  var statearr_38455 = state_38439;
                                  statearr_38455[11] = inst_38420__$1;
                                  statearr_38455[7] = inst_38418__$1;
                                  return statearr_38455;
                                }();
                                if (cljs.core.truth_(inst_38420__$1)) {
                                  var statearr_38456_38504 = state_38439__$1;
                                  statearr_38456_38504[1] = 19;
                                } else {
                                  var statearr_38457_38505 = state_38439__$1;
                                  statearr_38457_38505[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_38440 === 25) {
                                  var inst_38429 = state_38439[2];
                                  var state_38439__$1 = state_38439;
                                  var statearr_38458_38506 = state_38439__$1;
                                  statearr_38458_38506[2] = inst_38429;
                                  statearr_38458_38506[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_38440 === 17) {
                                    var inst_38394 = state_38439[10];
                                    var inst_38403 = cljs.core.first.call(null, inst_38394);
                                    var inst_38404 = cljs.core.async.muxch_STAR_.call(null, inst_38403);
                                    var inst_38405 = cljs.core.async.close_BANG_.call(null, inst_38404);
                                    var inst_38406 = cljs.core.next.call(null, inst_38394);
                                    var inst_38380 = inst_38406;
                                    var inst_38381 = null;
                                    var inst_38382 = 0;
                                    var inst_38383 = 0;
                                    var state_38439__$1 = function() {
                                      var statearr_38459 = state_38439;
                                      statearr_38459[12] = inst_38383;
                                      statearr_38459[13] = inst_38380;
                                      statearr_38459[14] = inst_38381;
                                      statearr_38459[15] = inst_38405;
                                      statearr_38459[16] = inst_38382;
                                      return statearr_38459;
                                    }();
                                    var statearr_38460_38507 = state_38439__$1;
                                    statearr_38460_38507[2] = null;
                                    statearr_38460_38507[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_38440 === 3) {
                                      var inst_38437 = state_38439[2];
                                      var state_38439__$1 = state_38439;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_38439__$1, inst_38437);
                                    } else {
                                      if (state_val_38440 === 12) {
                                        var inst_38414 = state_38439[2];
                                        var state_38439__$1 = state_38439;
                                        var statearr_38461_38508 = state_38439__$1;
                                        statearr_38461_38508[2] = inst_38414;
                                        statearr_38461_38508[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_38440 === 2) {
                                          var state_38439__$1 = state_38439;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_38439__$1, 4, ch);
                                        } else {
                                          if (state_val_38440 === 23) {
                                            var state_38439__$1 = state_38439;
                                            var statearr_38462_38509 = state_38439__$1;
                                            statearr_38462_38509[2] = null;
                                            statearr_38462_38509[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_38440 === 19) {
                                              var inst_38420 = state_38439[11];
                                              var inst_38370 = state_38439[8];
                                              var inst_38422 = cljs.core.async.muxch_STAR_.call(null, inst_38420);
                                              var state_38439__$1 = state_38439;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_38439__$1, 22, inst_38422, inst_38370);
                                            } else {
                                              if (state_val_38440 === 11) {
                                                var inst_38380 = state_38439[13];
                                                var inst_38394 = state_38439[10];
                                                var inst_38394__$1 = cljs.core.seq.call(null, inst_38380);
                                                var state_38439__$1 = function() {
                                                  var statearr_38463 = state_38439;
                                                  statearr_38463[10] = inst_38394__$1;
                                                  return statearr_38463;
                                                }();
                                                if (inst_38394__$1) {
                                                  var statearr_38464_38510 = state_38439__$1;
                                                  statearr_38464_38510[1] = 13;
                                                } else {
                                                  var statearr_38465_38511 = state_38439__$1;
                                                  statearr_38465_38511[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_38440 === 9) {
                                                  var inst_38416 = state_38439[2];
                                                  var state_38439__$1 = state_38439;
                                                  var statearr_38466_38512 = state_38439__$1;
                                                  statearr_38466_38512[2] = inst_38416;
                                                  statearr_38466_38512[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_38440 === 5) {
                                                    var inst_38377 = cljs.core.deref.call(null, mults);
                                                    var inst_38378 = cljs.core.vals.call(null, inst_38377);
                                                    var inst_38379 = cljs.core.seq.call(null, inst_38378);
                                                    var inst_38380 = inst_38379;
                                                    var inst_38381 = null;
                                                    var inst_38382 = 0;
                                                    var inst_38383 = 0;
                                                    var state_38439__$1 = function() {
                                                      var statearr_38467 = state_38439;
                                                      statearr_38467[12] = inst_38383;
                                                      statearr_38467[13] = inst_38380;
                                                      statearr_38467[14] = inst_38381;
                                                      statearr_38467[16] = inst_38382;
                                                      return statearr_38467;
                                                    }();
                                                    var statearr_38468_38513 = state_38439__$1;
                                                    statearr_38468_38513[2] = null;
                                                    statearr_38468_38513[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_38440 === 14) {
                                                      var state_38439__$1 = state_38439;
                                                      var statearr_38472_38514 = state_38439__$1;
                                                      statearr_38472_38514[2] = null;
                                                      statearr_38472_38514[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_38440 === 16) {
                                                        var inst_38394 = state_38439[10];
                                                        var inst_38398 = cljs.core.chunk_first.call(null, inst_38394);
                                                        var inst_38399 = cljs.core.chunk_rest.call(null, inst_38394);
                                                        var inst_38400 = cljs.core.count.call(null, inst_38398);
                                                        var inst_38380 = inst_38399;
                                                        var inst_38381 = inst_38398;
                                                        var inst_38382 = inst_38400;
                                                        var inst_38383 = 0;
                                                        var state_38439__$1 = function() {
                                                          var statearr_38473 = state_38439;
                                                          statearr_38473[12] = inst_38383;
                                                          statearr_38473[13] = inst_38380;
                                                          statearr_38473[14] = inst_38381;
                                                          statearr_38473[16] = inst_38382;
                                                          return statearr_38473;
                                                        }();
                                                        var statearr_38474_38515 = state_38439__$1;
                                                        statearr_38474_38515[2] = null;
                                                        statearr_38474_38515[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_38440 === 10) {
                                                          var inst_38383 = state_38439[12];
                                                          var inst_38380 = state_38439[13];
                                                          var inst_38381 = state_38439[14];
                                                          var inst_38382 = state_38439[16];
                                                          var inst_38388 = cljs.core._nth.call(null, inst_38381, inst_38383);
                                                          var inst_38389 = cljs.core.async.muxch_STAR_.call(null, inst_38388);
                                                          var inst_38390 = cljs.core.async.close_BANG_.call(null, inst_38389);
                                                          var inst_38391 = inst_38383 + 1;
                                                          var tmp38469 = inst_38380;
                                                          var tmp38470 = inst_38381;
                                                          var tmp38471 = inst_38382;
                                                          var inst_38380__$1 = tmp38469;
                                                          var inst_38381__$1 = tmp38470;
                                                          var inst_38382__$1 = tmp38471;
                                                          var inst_38383__$1 = inst_38391;
                                                          var state_38439__$1 = function() {
                                                            var statearr_38475 = state_38439;
                                                            statearr_38475[12] = inst_38383__$1;
                                                            statearr_38475[17] = inst_38390;
                                                            statearr_38475[13] = inst_38380__$1;
                                                            statearr_38475[14] = inst_38381__$1;
                                                            statearr_38475[16] = inst_38382__$1;
                                                            return statearr_38475;
                                                          }();
                                                          var statearr_38476_38516 = state_38439__$1;
                                                          statearr_38476_38516[2] = null;
                                                          statearr_38476_38516[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_38440 === 18) {
                                                            var inst_38409 = state_38439[2];
                                                            var state_38439__$1 = state_38439;
                                                            var statearr_38477_38517 = state_38439__$1;
                                                            statearr_38477_38517[2] = inst_38409;
                                                            statearr_38477_38517[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_38440 === 8) {
                                                              var inst_38383 = state_38439[12];
                                                              var inst_38382 = state_38439[16];
                                                              var inst_38385 = inst_38383 < inst_38382;
                                                              var inst_38386 = inst_38385;
                                                              var state_38439__$1 = state_38439;
                                                              if (cljs.core.truth_(inst_38386)) {
                                                                var statearr_38478_38518 = state_38439__$1;
                                                                statearr_38478_38518[1] = 10;
                                                              } else {
                                                                var statearr_38479_38519 = state_38439__$1;
                                                                statearr_38479_38519[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___38491, mults, ensure_mult, p);
        return function(switch__36426__auto__, c__36538__auto___38491, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_38483 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_38483[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_38483[1] = 1;
              return statearr_38483;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_38439) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_38439);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e38484) {
                    if (e38484 instanceof Object) {
                      var ex__36430__auto__ = e38484;
                      var statearr_38485_38520 = state_38439;
                      statearr_38485_38520[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_38439);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e38484;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__38521 = state_38439;
                  state_38439 = G__38521;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_38439) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_38439);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___38491, mults, ensure_mult, p);
      }();
      var state__36540__auto__ = function() {
        var statearr_38486 = f__36539__auto__.call(null);
        statearr_38486[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___38491;
        return statearr_38486;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___38491, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var args38522 = [];
  var len__31204__auto___38525 = arguments.length;
  var i__31205__auto___38526 = 0;
  while (true) {
    if (i__31205__auto___38526 < len__31204__auto___38525) {
      args38522.push(arguments[i__31205__auto___38526]);
      var G__38527 = i__31205__auto___38526 + 1;
      i__31205__auto___38526 = G__38527;
      continue;
    } else {
    }
    break;
  }
  var G__38524 = args38522.length;
  switch(G__38524) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38522.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var args38529 = [];
  var len__31204__auto___38532 = arguments.length;
  var i__31205__auto___38533 = 0;
  while (true) {
    if (i__31205__auto___38533 < len__31204__auto___38532) {
      args38529.push(arguments[i__31205__auto___38533]);
      var G__38534 = i__31205__auto___38533 + 1;
      i__31205__auto___38533 = G__38534;
      continue;
    } else {
    }
    break;
  }
  var G__38531 = args38529.length;
  switch(G__38531) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38529.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var args38536 = [];
  var len__31204__auto___38607 = arguments.length;
  var i__31205__auto___38608 = 0;
  while (true) {
    if (i__31205__auto___38608 < len__31204__auto___38607) {
      args38536.push(arguments[i__31205__auto___38608]);
      var G__38609 = i__31205__auto___38608 + 1;
      i__31205__auto___38608 = G__38609;
      continue;
    } else {
    }
    break;
  }
  var G__38538 = args38536.length;
  switch(G__38538) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38536.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__36538__auto___38611 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___38611, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___38611, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_38577) {
            var state_val_38578 = state_38577[1];
            if (state_val_38578 === 7) {
              var state_38577__$1 = state_38577;
              var statearr_38579_38612 = state_38577__$1;
              statearr_38579_38612[2] = null;
              statearr_38579_38612[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_38578 === 1) {
                var state_38577__$1 = state_38577;
                var statearr_38580_38613 = state_38577__$1;
                statearr_38580_38613[2] = null;
                statearr_38580_38613[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_38578 === 4) {
                  var inst_38541 = state_38577[7];
                  var inst_38543 = inst_38541 < cnt;
                  var state_38577__$1 = state_38577;
                  if (cljs.core.truth_(inst_38543)) {
                    var statearr_38581_38614 = state_38577__$1;
                    statearr_38581_38614[1] = 6;
                  } else {
                    var statearr_38582_38615 = state_38577__$1;
                    statearr_38582_38615[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_38578 === 15) {
                    var inst_38573 = state_38577[2];
                    var state_38577__$1 = state_38577;
                    var statearr_38583_38616 = state_38577__$1;
                    statearr_38583_38616[2] = inst_38573;
                    statearr_38583_38616[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_38578 === 13) {
                      var inst_38566 = cljs.core.async.close_BANG_.call(null, out);
                      var state_38577__$1 = state_38577;
                      var statearr_38584_38617 = state_38577__$1;
                      statearr_38584_38617[2] = inst_38566;
                      statearr_38584_38617[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_38578 === 6) {
                        var state_38577__$1 = state_38577;
                        var statearr_38585_38618 = state_38577__$1;
                        statearr_38585_38618[2] = null;
                        statearr_38585_38618[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_38578 === 3) {
                          var inst_38575 = state_38577[2];
                          var state_38577__$1 = state_38577;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_38577__$1, inst_38575);
                        } else {
                          if (state_val_38578 === 12) {
                            var inst_38563 = state_38577[8];
                            var inst_38563__$1 = state_38577[2];
                            var inst_38564 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_38563__$1);
                            var state_38577__$1 = function() {
                              var statearr_38586 = state_38577;
                              statearr_38586[8] = inst_38563__$1;
                              return statearr_38586;
                            }();
                            if (cljs.core.truth_(inst_38564)) {
                              var statearr_38587_38619 = state_38577__$1;
                              statearr_38587_38619[1] = 13;
                            } else {
                              var statearr_38588_38620 = state_38577__$1;
                              statearr_38588_38620[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_38578 === 2) {
                              var inst_38540 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_38541 = 0;
                              var state_38577__$1 = function() {
                                var statearr_38589 = state_38577;
                                statearr_38589[7] = inst_38541;
                                statearr_38589[9] = inst_38540;
                                return statearr_38589;
                              }();
                              var statearr_38590_38621 = state_38577__$1;
                              statearr_38590_38621[2] = null;
                              statearr_38590_38621[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_38578 === 11) {
                                var inst_38541 = state_38577[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_38577, 10, Object, null, 9);
                                var inst_38550 = chs__$1.call(null, inst_38541);
                                var inst_38551 = done.call(null, inst_38541);
                                var inst_38552 = cljs.core.async.take_BANG_.call(null, inst_38550, inst_38551);
                                var state_38577__$1 = state_38577;
                                var statearr_38591_38622 = state_38577__$1;
                                statearr_38591_38622[2] = inst_38552;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_38577__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_38578 === 9) {
                                  var inst_38541 = state_38577[7];
                                  var inst_38554 = state_38577[2];
                                  var inst_38555 = inst_38541 + 1;
                                  var inst_38541__$1 = inst_38555;
                                  var state_38577__$1 = function() {
                                    var statearr_38592 = state_38577;
                                    statearr_38592[7] = inst_38541__$1;
                                    statearr_38592[10] = inst_38554;
                                    return statearr_38592;
                                  }();
                                  var statearr_38593_38623 = state_38577__$1;
                                  statearr_38593_38623[2] = null;
                                  statearr_38593_38623[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_38578 === 5) {
                                    var inst_38561 = state_38577[2];
                                    var state_38577__$1 = function() {
                                      var statearr_38594 = state_38577;
                                      statearr_38594[11] = inst_38561;
                                      return statearr_38594;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_38577__$1, 12, dchan);
                                  } else {
                                    if (state_val_38578 === 14) {
                                      var inst_38563 = state_38577[8];
                                      var inst_38568 = cljs.core.apply.call(null, f, inst_38563);
                                      var state_38577__$1 = state_38577;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_38577__$1, 16, out, inst_38568);
                                    } else {
                                      if (state_val_38578 === 16) {
                                        var inst_38570 = state_38577[2];
                                        var state_38577__$1 = function() {
                                          var statearr_38595 = state_38577;
                                          statearr_38595[12] = inst_38570;
                                          return statearr_38595;
                                        }();
                                        var statearr_38596_38624 = state_38577__$1;
                                        statearr_38596_38624[2] = null;
                                        statearr_38596_38624[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_38578 === 10) {
                                          var inst_38545 = state_38577[2];
                                          var inst_38546 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_38577__$1 = function() {
                                            var statearr_38597 = state_38577;
                                            statearr_38597[13] = inst_38545;
                                            return statearr_38597;
                                          }();
                                          var statearr_38598_38625 = state_38577__$1;
                                          statearr_38598_38625[2] = inst_38546;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_38577__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_38578 === 8) {
                                            var inst_38559 = state_38577[2];
                                            var state_38577__$1 = state_38577;
                                            var statearr_38599_38626 = state_38577__$1;
                                            statearr_38599_38626[2] = inst_38559;
                                            statearr_38599_38626[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___38611, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__36426__auto__, c__36538__auto___38611, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_38603 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_38603[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_38603[1] = 1;
              return statearr_38603;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_38577) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_38577);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e38604) {
                    if (e38604 instanceof Object) {
                      var ex__36430__auto__ = e38604;
                      var statearr_38605_38627 = state_38577;
                      statearr_38605_38627[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_38577);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e38604;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__38628 = state_38577;
                  state_38577 = G__38628;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_38577) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_38577);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___38611, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__36540__auto__ = function() {
        var statearr_38606 = f__36539__auto__.call(null);
        statearr_38606[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___38611;
        return statearr_38606;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___38611, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var args38630 = [];
  var len__31204__auto___38688 = arguments.length;
  var i__31205__auto___38689 = 0;
  while (true) {
    if (i__31205__auto___38689 < len__31204__auto___38688) {
      args38630.push(arguments[i__31205__auto___38689]);
      var G__38690 = i__31205__auto___38689 + 1;
      i__31205__auto___38689 = G__38690;
      continue;
    } else {
    }
    break;
  }
  var G__38632 = args38630.length;
  switch(G__38632) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38630.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__36538__auto___38692 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___38692, out) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___38692, out) {
          return function(state_38664) {
            var state_val_38665 = state_38664[1];
            if (state_val_38665 === 7) {
              var inst_38644 = state_38664[7];
              var inst_38643 = state_38664[8];
              var inst_38643__$1 = state_38664[2];
              var inst_38644__$1 = cljs.core.nth.call(null, inst_38643__$1, 0, null);
              var inst_38645 = cljs.core.nth.call(null, inst_38643__$1, 1, null);
              var inst_38646 = inst_38644__$1 == null;
              var state_38664__$1 = function() {
                var statearr_38666 = state_38664;
                statearr_38666[7] = inst_38644__$1;
                statearr_38666[9] = inst_38645;
                statearr_38666[8] = inst_38643__$1;
                return statearr_38666;
              }();
              if (cljs.core.truth_(inst_38646)) {
                var statearr_38667_38693 = state_38664__$1;
                statearr_38667_38693[1] = 8;
              } else {
                var statearr_38668_38694 = state_38664__$1;
                statearr_38668_38694[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_38665 === 1) {
                var inst_38633 = cljs.core.vec.call(null, chs);
                var inst_38634 = inst_38633;
                var state_38664__$1 = function() {
                  var statearr_38669 = state_38664;
                  statearr_38669[10] = inst_38634;
                  return statearr_38669;
                }();
                var statearr_38670_38695 = state_38664__$1;
                statearr_38670_38695[2] = null;
                statearr_38670_38695[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_38665 === 4) {
                  var inst_38634 = state_38664[10];
                  var state_38664__$1 = state_38664;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_38664__$1, 7, inst_38634);
                } else {
                  if (state_val_38665 === 6) {
                    var inst_38660 = state_38664[2];
                    var state_38664__$1 = state_38664;
                    var statearr_38671_38696 = state_38664__$1;
                    statearr_38671_38696[2] = inst_38660;
                    statearr_38671_38696[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_38665 === 3) {
                      var inst_38662 = state_38664[2];
                      var state_38664__$1 = state_38664;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_38664__$1, inst_38662);
                    } else {
                      if (state_val_38665 === 2) {
                        var inst_38634 = state_38664[10];
                        var inst_38636 = cljs.core.count.call(null, inst_38634);
                        var inst_38637 = inst_38636 > 0;
                        var state_38664__$1 = state_38664;
                        if (cljs.core.truth_(inst_38637)) {
                          var statearr_38673_38697 = state_38664__$1;
                          statearr_38673_38697[1] = 4;
                        } else {
                          var statearr_38674_38698 = state_38664__$1;
                          statearr_38674_38698[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_38665 === 11) {
                          var inst_38634 = state_38664[10];
                          var inst_38653 = state_38664[2];
                          var tmp38672 = inst_38634;
                          var inst_38634__$1 = tmp38672;
                          var state_38664__$1 = function() {
                            var statearr_38675 = state_38664;
                            statearr_38675[10] = inst_38634__$1;
                            statearr_38675[11] = inst_38653;
                            return statearr_38675;
                          }();
                          var statearr_38676_38699 = state_38664__$1;
                          statearr_38676_38699[2] = null;
                          statearr_38676_38699[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_38665 === 9) {
                            var inst_38644 = state_38664[7];
                            var state_38664__$1 = state_38664;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_38664__$1, 11, out, inst_38644);
                          } else {
                            if (state_val_38665 === 5) {
                              var inst_38658 = cljs.core.async.close_BANG_.call(null, out);
                              var state_38664__$1 = state_38664;
                              var statearr_38677_38700 = state_38664__$1;
                              statearr_38677_38700[2] = inst_38658;
                              statearr_38677_38700[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_38665 === 10) {
                                var inst_38656 = state_38664[2];
                                var state_38664__$1 = state_38664;
                                var statearr_38678_38701 = state_38664__$1;
                                statearr_38678_38701[2] = inst_38656;
                                statearr_38678_38701[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_38665 === 8) {
                                  var inst_38634 = state_38664[10];
                                  var inst_38644 = state_38664[7];
                                  var inst_38645 = state_38664[9];
                                  var inst_38643 = state_38664[8];
                                  var inst_38648 = function() {
                                    var cs = inst_38634;
                                    var vec__38639 = inst_38643;
                                    var v = inst_38644;
                                    var c = inst_38645;
                                    return function(cs, vec__38639, v, c, inst_38634, inst_38644, inst_38645, inst_38643, state_val_38665, c__36538__auto___38692, out) {
                                      return function(p1__38629_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__38629_SHARP_);
                                      };
                                    }(cs, vec__38639, v, c, inst_38634, inst_38644, inst_38645, inst_38643, state_val_38665, c__36538__auto___38692, out);
                                  }();
                                  var inst_38649 = cljs.core.filterv.call(null, inst_38648, inst_38634);
                                  var inst_38634__$1 = inst_38649;
                                  var state_38664__$1 = function() {
                                    var statearr_38679 = state_38664;
                                    statearr_38679[10] = inst_38634__$1;
                                    return statearr_38679;
                                  }();
                                  var statearr_38680_38702 = state_38664__$1;
                                  statearr_38680_38702[2] = null;
                                  statearr_38680_38702[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___38692, out);
        return function(switch__36426__auto__, c__36538__auto___38692, out) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_38684 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_38684[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_38684[1] = 1;
              return statearr_38684;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_38664) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_38664);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e38685) {
                    if (e38685 instanceof Object) {
                      var ex__36430__auto__ = e38685;
                      var statearr_38686_38703 = state_38664;
                      statearr_38686_38703[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_38664);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e38685;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__38704 = state_38664;
                  state_38664 = G__38704;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_38664) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_38664);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___38692, out);
      }();
      var state__36540__auto__ = function() {
        var statearr_38687 = f__36539__auto__.call(null);
        statearr_38687[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___38692;
        return statearr_38687;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___38692, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var args38705 = [];
  var len__31204__auto___38754 = arguments.length;
  var i__31205__auto___38755 = 0;
  while (true) {
    if (i__31205__auto___38755 < len__31204__auto___38754) {
      args38705.push(arguments[i__31205__auto___38755]);
      var G__38756 = i__31205__auto___38755 + 1;
      i__31205__auto___38755 = G__38756;
      continue;
    } else {
    }
    break;
  }
  var G__38707 = args38705.length;
  switch(G__38707) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38705.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__36538__auto___38758 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___38758, out) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___38758, out) {
          return function(state_38731) {
            var state_val_38732 = state_38731[1];
            if (state_val_38732 === 7) {
              var inst_38713 = state_38731[7];
              var inst_38713__$1 = state_38731[2];
              var inst_38714 = inst_38713__$1 == null;
              var inst_38715 = cljs.core.not.call(null, inst_38714);
              var state_38731__$1 = function() {
                var statearr_38733 = state_38731;
                statearr_38733[7] = inst_38713__$1;
                return statearr_38733;
              }();
              if (inst_38715) {
                var statearr_38734_38759 = state_38731__$1;
                statearr_38734_38759[1] = 8;
              } else {
                var statearr_38735_38760 = state_38731__$1;
                statearr_38735_38760[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_38732 === 1) {
                var inst_38708 = 0;
                var state_38731__$1 = function() {
                  var statearr_38736 = state_38731;
                  statearr_38736[8] = inst_38708;
                  return statearr_38736;
                }();
                var statearr_38737_38761 = state_38731__$1;
                statearr_38737_38761[2] = null;
                statearr_38737_38761[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_38732 === 4) {
                  var state_38731__$1 = state_38731;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_38731__$1, 7, ch);
                } else {
                  if (state_val_38732 === 6) {
                    var inst_38726 = state_38731[2];
                    var state_38731__$1 = state_38731;
                    var statearr_38738_38762 = state_38731__$1;
                    statearr_38738_38762[2] = inst_38726;
                    statearr_38738_38762[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_38732 === 3) {
                      var inst_38728 = state_38731[2];
                      var inst_38729 = cljs.core.async.close_BANG_.call(null, out);
                      var state_38731__$1 = function() {
                        var statearr_38739 = state_38731;
                        statearr_38739[9] = inst_38728;
                        return statearr_38739;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_38731__$1, inst_38729);
                    } else {
                      if (state_val_38732 === 2) {
                        var inst_38708 = state_38731[8];
                        var inst_38710 = inst_38708 < n;
                        var state_38731__$1 = state_38731;
                        if (cljs.core.truth_(inst_38710)) {
                          var statearr_38740_38763 = state_38731__$1;
                          statearr_38740_38763[1] = 4;
                        } else {
                          var statearr_38741_38764 = state_38731__$1;
                          statearr_38741_38764[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_38732 === 11) {
                          var inst_38708 = state_38731[8];
                          var inst_38718 = state_38731[2];
                          var inst_38719 = inst_38708 + 1;
                          var inst_38708__$1 = inst_38719;
                          var state_38731__$1 = function() {
                            var statearr_38742 = state_38731;
                            statearr_38742[8] = inst_38708__$1;
                            statearr_38742[10] = inst_38718;
                            return statearr_38742;
                          }();
                          var statearr_38743_38765 = state_38731__$1;
                          statearr_38743_38765[2] = null;
                          statearr_38743_38765[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_38732 === 9) {
                            var state_38731__$1 = state_38731;
                            var statearr_38744_38766 = state_38731__$1;
                            statearr_38744_38766[2] = null;
                            statearr_38744_38766[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_38732 === 5) {
                              var state_38731__$1 = state_38731;
                              var statearr_38745_38767 = state_38731__$1;
                              statearr_38745_38767[2] = null;
                              statearr_38745_38767[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_38732 === 10) {
                                var inst_38723 = state_38731[2];
                                var state_38731__$1 = state_38731;
                                var statearr_38746_38768 = state_38731__$1;
                                statearr_38746_38768[2] = inst_38723;
                                statearr_38746_38768[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_38732 === 8) {
                                  var inst_38713 = state_38731[7];
                                  var state_38731__$1 = state_38731;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_38731__$1, 11, out, inst_38713);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___38758, out);
        return function(switch__36426__auto__, c__36538__auto___38758, out) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_38750 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_38750[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_38750[1] = 1;
              return statearr_38750;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_38731) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_38731);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e38751) {
                    if (e38751 instanceof Object) {
                      var ex__36430__auto__ = e38751;
                      var statearr_38752_38769 = state_38731;
                      statearr_38752_38769[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_38731);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e38751;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__38770 = state_38731;
                  state_38731 = G__38770;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_38731) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_38731);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___38758, out);
      }();
      var state__36540__auto__ = function() {
        var statearr_38753 = f__36539__auto__.call(null);
        statearr_38753[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___38758;
        return statearr_38753;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___38758, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async38778 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async38778 = function(f, ch, meta38779) {
      this.f = f;
      this.ch = ch;
      this.meta38779 = meta38779;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_38780, meta38779__$1) {
      var self__ = this;
      var _38780__$1 = this;
      return new cljs.core.async.t_cljs$core$async38778(self__.f, self__.ch, meta38779__$1);
    };
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$IMeta$_meta$arity$1 = function(_38780) {
      var self__ = this;
      var _38780__$1 = this;
      return self__.meta38779;
    };
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t_cljs$core$async38781 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async38781 = function(f, ch, meta38779, _, fn1, meta38782) {
            this.f = f;
            this.ch = ch;
            this.meta38779 = meta38779;
            this._ = _;
            this.fn1 = fn1;
            this.meta38782 = meta38782;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async38781.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_38783, meta38782__$1) {
              var self__ = this;
              var _38783__$1 = this;
              return new cljs.core.async.t_cljs$core$async38781(self__.f, self__.ch, self__.meta38779, self__._, self__.fn1, meta38782__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async38781.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_38783) {
              var self__ = this;
              var _38783__$1 = this;
              return self__.meta38782;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async38781.prototype.cljs$core$async$impl$protocols$Handler$ = cljs.core.PROTOCOL_SENTINEL;
          cljs.core.async.t_cljs$core$async38781.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async38781.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return true;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async38781.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__38771_SHARP_) {
                  return f1.call(null, p1__38771_SHARP_ == null ? null : self__.f.call(null, p1__38771_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async38781.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta38779", "meta38779", -17029813, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", 
              "t_cljs$core$async38778", "cljs.core.async/t_cljs$core$async38778", -729512181, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta38782", "meta38782", 1851284296, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async38781.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async38781.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async38781";
          cljs.core.async.t_cljs$core$async38781.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
              return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async38781");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async38781 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async38781(f__$1, ch__$1, meta38779__$1, ___$2, fn1__$1, meta38782) {
              return new cljs.core.async.t_cljs$core$async38781(f__$1, ch__$1, meta38779__$1, ___$2, fn1__$1, meta38782);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async38781(self__.f, self__.ch, self__.meta38779, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__30084__auto__ = ret;
        if (cljs.core.truth_(and__30084__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__30084__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38778.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async38778.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta38779", "meta38779", -17029813, null)], null);
    };
    cljs.core.async.t_cljs$core$async38778.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async38778.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async38778";
    cljs.core.async.t_cljs$core$async38778.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
      return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async38778");
    };
    cljs.core.async.__GT_t_cljs$core$async38778 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async38778(f__$1, ch__$1, meta38779) {
      return new cljs.core.async.t_cljs$core$async38778(f__$1, ch__$1, meta38779);
    };
  }
  return new cljs.core.async.t_cljs$core$async38778(f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async38787 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async38787 = function(f, ch, meta38788) {
      this.f = f;
      this.ch = ch;
      this.meta38788 = meta38788;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async38787.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_38789, meta38788__$1) {
      var self__ = this;
      var _38789__$1 = this;
      return new cljs.core.async.t_cljs$core$async38787(self__.f, self__.ch, meta38788__$1);
    };
    cljs.core.async.t_cljs$core$async38787.prototype.cljs$core$IMeta$_meta$arity$1 = function(_38789) {
      var self__ = this;
      var _38789__$1 = this;
      return self__.meta38788;
    };
    cljs.core.async.t_cljs$core$async38787.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38787.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async38787.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38787.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async38787.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38787.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async38787.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta38788", "meta38788", -1917040097, null)], null);
    };
    cljs.core.async.t_cljs$core$async38787.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async38787.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async38787";
    cljs.core.async.t_cljs$core$async38787.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
      return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async38787");
    };
    cljs.core.async.__GT_t_cljs$core$async38787 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async38787(f__$1, ch__$1, meta38788) {
      return new cljs.core.async.t_cljs$core$async38787(f__$1, ch__$1, meta38788);
    };
  }
  return new cljs.core.async.t_cljs$core$async38787(f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t_cljs$core$async38793 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async38793 = function(p, ch, meta38794) {
      this.p = p;
      this.ch = ch;
      this.meta38794 = meta38794;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_38795, meta38794__$1) {
      var self__ = this;
      var _38795__$1 = this;
      return new cljs.core.async.t_cljs$core$async38793(self__.p, self__.ch, meta38794__$1);
    };
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$IMeta$_meta$arity$1 = function(_38795) {
      var self__ = this;
      var _38795__$1 = this;
      return self__.meta38794;
    };
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$async$impl$protocols$Channel$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$async$impl$protocols$WritePort$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.core.async.t_cljs$core$async38793.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async38793.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta38794", "meta38794", 189710622, null)], null);
    };
    cljs.core.async.t_cljs$core$async38793.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async38793.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async38793";
    cljs.core.async.t_cljs$core$async38793.cljs$lang$ctorPrWriter = function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
      return cljs.core._write.call(null, writer__30703__auto__, "cljs.core.async/t_cljs$core$async38793");
    };
    cljs.core.async.__GT_t_cljs$core$async38793 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async38793(p__$1, ch__$1, meta38794) {
      return new cljs.core.async.t_cljs$core$async38793(p__$1, ch__$1, meta38794);
    };
  }
  return new cljs.core.async.t_cljs$core$async38793(p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var args38796 = [];
  var len__31204__auto___38840 = arguments.length;
  var i__31205__auto___38841 = 0;
  while (true) {
    if (i__31205__auto___38841 < len__31204__auto___38840) {
      args38796.push(arguments[i__31205__auto___38841]);
      var G__38842 = i__31205__auto___38841 + 1;
      i__31205__auto___38841 = G__38842;
      continue;
    } else {
    }
    break;
  }
  var G__38798 = args38796.length;
  switch(G__38798) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38796.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__36538__auto___38844 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___38844, out) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___38844, out) {
          return function(state_38819) {
            var state_val_38820 = state_38819[1];
            if (state_val_38820 === 7) {
              var inst_38815 = state_38819[2];
              var state_38819__$1 = state_38819;
              var statearr_38821_38845 = state_38819__$1;
              statearr_38821_38845[2] = inst_38815;
              statearr_38821_38845[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_38820 === 1) {
                var state_38819__$1 = state_38819;
                var statearr_38822_38846 = state_38819__$1;
                statearr_38822_38846[2] = null;
                statearr_38822_38846[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_38820 === 4) {
                  var inst_38801 = state_38819[7];
                  var inst_38801__$1 = state_38819[2];
                  var inst_38802 = inst_38801__$1 == null;
                  var state_38819__$1 = function() {
                    var statearr_38823 = state_38819;
                    statearr_38823[7] = inst_38801__$1;
                    return statearr_38823;
                  }();
                  if (cljs.core.truth_(inst_38802)) {
                    var statearr_38824_38847 = state_38819__$1;
                    statearr_38824_38847[1] = 5;
                  } else {
                    var statearr_38825_38848 = state_38819__$1;
                    statearr_38825_38848[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_38820 === 6) {
                    var inst_38801 = state_38819[7];
                    var inst_38806 = p.call(null, inst_38801);
                    var state_38819__$1 = state_38819;
                    if (cljs.core.truth_(inst_38806)) {
                      var statearr_38826_38849 = state_38819__$1;
                      statearr_38826_38849[1] = 8;
                    } else {
                      var statearr_38827_38850 = state_38819__$1;
                      statearr_38827_38850[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_38820 === 3) {
                      var inst_38817 = state_38819[2];
                      var state_38819__$1 = state_38819;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_38819__$1, inst_38817);
                    } else {
                      if (state_val_38820 === 2) {
                        var state_38819__$1 = state_38819;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_38819__$1, 4, ch);
                      } else {
                        if (state_val_38820 === 11) {
                          var inst_38809 = state_38819[2];
                          var state_38819__$1 = state_38819;
                          var statearr_38828_38851 = state_38819__$1;
                          statearr_38828_38851[2] = inst_38809;
                          statearr_38828_38851[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_38820 === 9) {
                            var state_38819__$1 = state_38819;
                            var statearr_38829_38852 = state_38819__$1;
                            statearr_38829_38852[2] = null;
                            statearr_38829_38852[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_38820 === 5) {
                              var inst_38804 = cljs.core.async.close_BANG_.call(null, out);
                              var state_38819__$1 = state_38819;
                              var statearr_38830_38853 = state_38819__$1;
                              statearr_38830_38853[2] = inst_38804;
                              statearr_38830_38853[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_38820 === 10) {
                                var inst_38812 = state_38819[2];
                                var state_38819__$1 = function() {
                                  var statearr_38831 = state_38819;
                                  statearr_38831[8] = inst_38812;
                                  return statearr_38831;
                                }();
                                var statearr_38832_38854 = state_38819__$1;
                                statearr_38832_38854[2] = null;
                                statearr_38832_38854[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_38820 === 8) {
                                  var inst_38801 = state_38819[7];
                                  var state_38819__$1 = state_38819;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_38819__$1, 11, out, inst_38801);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___38844, out);
        return function(switch__36426__auto__, c__36538__auto___38844, out) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_38836 = [null, null, null, null, null, null, null, null, null];
              statearr_38836[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_38836[1] = 1;
              return statearr_38836;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_38819) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_38819);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e38837) {
                    if (e38837 instanceof Object) {
                      var ex__36430__auto__ = e38837;
                      var statearr_38838_38855 = state_38819;
                      statearr_38838_38855[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_38819);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e38837;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__38856 = state_38819;
                  state_38819 = G__38856;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_38819) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_38819);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___38844, out);
      }();
      var state__36540__auto__ = function() {
        var statearr_38839 = f__36539__auto__.call(null);
        statearr_38839[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___38844;
        return statearr_38839;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___38844, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var args38857 = [];
  var len__31204__auto___38860 = arguments.length;
  var i__31205__auto___38861 = 0;
  while (true) {
    if (i__31205__auto___38861 < len__31204__auto___38860) {
      args38857.push(arguments[i__31205__auto___38861]);
      var G__38862 = i__31205__auto___38861 + 1;
      i__31205__auto___38861 = G__38862;
      continue;
    } else {
    }
    break;
  }
  var G__38859 = args38857.length;
  switch(G__38859) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args38857.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__36538__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto__) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto__) {
          return function(state_39029) {
            var state_val_39030 = state_39029[1];
            if (state_val_39030 === 7) {
              var inst_39025 = state_39029[2];
              var state_39029__$1 = state_39029;
              var statearr_39031_39072 = state_39029__$1;
              statearr_39031_39072[2] = inst_39025;
              statearr_39031_39072[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_39030 === 20) {
                var inst_38995 = state_39029[7];
                var inst_39006 = state_39029[2];
                var inst_39007 = cljs.core.next.call(null, inst_38995);
                var inst_38981 = inst_39007;
                var inst_38982 = null;
                var inst_38983 = 0;
                var inst_38984 = 0;
                var state_39029__$1 = function() {
                  var statearr_39032 = state_39029;
                  statearr_39032[8] = inst_38983;
                  statearr_39032[9] = inst_39006;
                  statearr_39032[10] = inst_38984;
                  statearr_39032[11] = inst_38981;
                  statearr_39032[12] = inst_38982;
                  return statearr_39032;
                }();
                var statearr_39033_39073 = state_39029__$1;
                statearr_39033_39073[2] = null;
                statearr_39033_39073[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_39030 === 1) {
                  var state_39029__$1 = state_39029;
                  var statearr_39034_39074 = state_39029__$1;
                  statearr_39034_39074[2] = null;
                  statearr_39034_39074[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_39030 === 4) {
                    var inst_38970 = state_39029[13];
                    var inst_38970__$1 = state_39029[2];
                    var inst_38971 = inst_38970__$1 == null;
                    var state_39029__$1 = function() {
                      var statearr_39035 = state_39029;
                      statearr_39035[13] = inst_38970__$1;
                      return statearr_39035;
                    }();
                    if (cljs.core.truth_(inst_38971)) {
                      var statearr_39036_39075 = state_39029__$1;
                      statearr_39036_39075[1] = 5;
                    } else {
                      var statearr_39037_39076 = state_39029__$1;
                      statearr_39037_39076[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_39030 === 15) {
                      var state_39029__$1 = state_39029;
                      var statearr_39041_39077 = state_39029__$1;
                      statearr_39041_39077[2] = null;
                      statearr_39041_39077[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_39030 === 21) {
                        var state_39029__$1 = state_39029;
                        var statearr_39042_39078 = state_39029__$1;
                        statearr_39042_39078[2] = null;
                        statearr_39042_39078[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_39030 === 13) {
                          var inst_38983 = state_39029[8];
                          var inst_38984 = state_39029[10];
                          var inst_38981 = state_39029[11];
                          var inst_38982 = state_39029[12];
                          var inst_38991 = state_39029[2];
                          var inst_38992 = inst_38984 + 1;
                          var tmp39038 = inst_38983;
                          var tmp39039 = inst_38981;
                          var tmp39040 = inst_38982;
                          var inst_38981__$1 = tmp39039;
                          var inst_38982__$1 = tmp39040;
                          var inst_38983__$1 = tmp39038;
                          var inst_38984__$1 = inst_38992;
                          var state_39029__$1 = function() {
                            var statearr_39043 = state_39029;
                            statearr_39043[8] = inst_38983__$1;
                            statearr_39043[14] = inst_38991;
                            statearr_39043[10] = inst_38984__$1;
                            statearr_39043[11] = inst_38981__$1;
                            statearr_39043[12] = inst_38982__$1;
                            return statearr_39043;
                          }();
                          var statearr_39044_39079 = state_39029__$1;
                          statearr_39044_39079[2] = null;
                          statearr_39044_39079[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_39030 === 22) {
                            var state_39029__$1 = state_39029;
                            var statearr_39045_39080 = state_39029__$1;
                            statearr_39045_39080[2] = null;
                            statearr_39045_39080[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_39030 === 6) {
                              var inst_38970 = state_39029[13];
                              var inst_38979 = f.call(null, inst_38970);
                              var inst_38980 = cljs.core.seq.call(null, inst_38979);
                              var inst_38981 = inst_38980;
                              var inst_38982 = null;
                              var inst_38983 = 0;
                              var inst_38984 = 0;
                              var state_39029__$1 = function() {
                                var statearr_39046 = state_39029;
                                statearr_39046[8] = inst_38983;
                                statearr_39046[10] = inst_38984;
                                statearr_39046[11] = inst_38981;
                                statearr_39046[12] = inst_38982;
                                return statearr_39046;
                              }();
                              var statearr_39047_39081 = state_39029__$1;
                              statearr_39047_39081[2] = null;
                              statearr_39047_39081[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_39030 === 17) {
                                var inst_38995 = state_39029[7];
                                var inst_38999 = cljs.core.chunk_first.call(null, inst_38995);
                                var inst_39000 = cljs.core.chunk_rest.call(null, inst_38995);
                                var inst_39001 = cljs.core.count.call(null, inst_38999);
                                var inst_38981 = inst_39000;
                                var inst_38982 = inst_38999;
                                var inst_38983 = inst_39001;
                                var inst_38984 = 0;
                                var state_39029__$1 = function() {
                                  var statearr_39048 = state_39029;
                                  statearr_39048[8] = inst_38983;
                                  statearr_39048[10] = inst_38984;
                                  statearr_39048[11] = inst_38981;
                                  statearr_39048[12] = inst_38982;
                                  return statearr_39048;
                                }();
                                var statearr_39049_39082 = state_39029__$1;
                                statearr_39049_39082[2] = null;
                                statearr_39049_39082[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_39030 === 3) {
                                  var inst_39027 = state_39029[2];
                                  var state_39029__$1 = state_39029;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39029__$1, inst_39027);
                                } else {
                                  if (state_val_39030 === 12) {
                                    var inst_39015 = state_39029[2];
                                    var state_39029__$1 = state_39029;
                                    var statearr_39050_39083 = state_39029__$1;
                                    statearr_39050_39083[2] = inst_39015;
                                    statearr_39050_39083[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_39030 === 2) {
                                      var state_39029__$1 = state_39029;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39029__$1, 4, in$);
                                    } else {
                                      if (state_val_39030 === 23) {
                                        var inst_39023 = state_39029[2];
                                        var state_39029__$1 = state_39029;
                                        var statearr_39051_39084 = state_39029__$1;
                                        statearr_39051_39084[2] = inst_39023;
                                        statearr_39051_39084[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_39030 === 19) {
                                          var inst_39010 = state_39029[2];
                                          var state_39029__$1 = state_39029;
                                          var statearr_39052_39085 = state_39029__$1;
                                          statearr_39052_39085[2] = inst_39010;
                                          statearr_39052_39085[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_39030 === 11) {
                                            var inst_38995 = state_39029[7];
                                            var inst_38981 = state_39029[11];
                                            var inst_38995__$1 = cljs.core.seq.call(null, inst_38981);
                                            var state_39029__$1 = function() {
                                              var statearr_39053 = state_39029;
                                              statearr_39053[7] = inst_38995__$1;
                                              return statearr_39053;
                                            }();
                                            if (inst_38995__$1) {
                                              var statearr_39054_39086 = state_39029__$1;
                                              statearr_39054_39086[1] = 14;
                                            } else {
                                              var statearr_39055_39087 = state_39029__$1;
                                              statearr_39055_39087[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_39030 === 9) {
                                              var inst_39017 = state_39029[2];
                                              var inst_39018 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_39029__$1 = function() {
                                                var statearr_39056 = state_39029;
                                                statearr_39056[15] = inst_39017;
                                                return statearr_39056;
                                              }();
                                              if (cljs.core.truth_(inst_39018)) {
                                                var statearr_39057_39088 = state_39029__$1;
                                                statearr_39057_39088[1] = 21;
                                              } else {
                                                var statearr_39058_39089 = state_39029__$1;
                                                statearr_39058_39089[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_39030 === 5) {
                                                var inst_38973 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_39029__$1 = state_39029;
                                                var statearr_39059_39090 = state_39029__$1;
                                                statearr_39059_39090[2] = inst_38973;
                                                statearr_39059_39090[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_39030 === 14) {
                                                  var inst_38995 = state_39029[7];
                                                  var inst_38997 = cljs.core.chunked_seq_QMARK_.call(null, inst_38995);
                                                  var state_39029__$1 = state_39029;
                                                  if (inst_38997) {
                                                    var statearr_39060_39091 = state_39029__$1;
                                                    statearr_39060_39091[1] = 17;
                                                  } else {
                                                    var statearr_39061_39092 = state_39029__$1;
                                                    statearr_39061_39092[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_39030 === 16) {
                                                    var inst_39013 = state_39029[2];
                                                    var state_39029__$1 = state_39029;
                                                    var statearr_39062_39093 = state_39029__$1;
                                                    statearr_39062_39093[2] = inst_39013;
                                                    statearr_39062_39093[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_39030 === 10) {
                                                      var inst_38984 = state_39029[10];
                                                      var inst_38982 = state_39029[12];
                                                      var inst_38989 = cljs.core._nth.call(null, inst_38982, inst_38984);
                                                      var state_39029__$1 = state_39029;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_39029__$1, 13, out, inst_38989);
                                                    } else {
                                                      if (state_val_39030 === 18) {
                                                        var inst_38995 = state_39029[7];
                                                        var inst_39004 = cljs.core.first.call(null, inst_38995);
                                                        var state_39029__$1 = state_39029;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_39029__$1, 20, out, inst_39004);
                                                      } else {
                                                        if (state_val_39030 === 8) {
                                                          var inst_38983 = state_39029[8];
                                                          var inst_38984 = state_39029[10];
                                                          var inst_38986 = inst_38984 < inst_38983;
                                                          var inst_38987 = inst_38986;
                                                          var state_39029__$1 = state_39029;
                                                          if (cljs.core.truth_(inst_38987)) {
                                                            var statearr_39063_39094 = state_39029__$1;
                                                            statearr_39063_39094[1] = 10;
                                                          } else {
                                                            var statearr_39064_39095 = state_39029__$1;
                                                            statearr_39064_39095[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto__);
        return function(switch__36426__auto__, c__36538__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__36427__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__36427__auto____0 = function() {
              var statearr_39068 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_39068[0] = cljs$core$async$mapcat_STAR__$_state_machine__36427__auto__;
              statearr_39068[1] = 1;
              return statearr_39068;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__36427__auto____1 = function(state_39029) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39029);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39069) {
                    if (e39069 instanceof Object) {
                      var ex__36430__auto__ = e39069;
                      var statearr_39070_39096 = state_39029;
                      statearr_39070_39096[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39029);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39069;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39097 = state_39029;
                  state_39029 = G__39097;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__36427__auto__ = function(state_39029) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__36427__auto____1.call(this, state_39029);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__36427__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__36427__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto__);
      }();
      var state__36540__auto__ = function() {
        var statearr_39071 = f__36539__auto__.call(null);
        statearr_39071[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto__;
        return statearr_39071;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto__));
  return c__36538__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var args39098 = [];
  var len__31204__auto___39101 = arguments.length;
  var i__31205__auto___39102 = 0;
  while (true) {
    if (i__31205__auto___39102 < len__31204__auto___39101) {
      args39098.push(arguments[i__31205__auto___39102]);
      var G__39103 = i__31205__auto___39102 + 1;
      i__31205__auto___39102 = G__39103;
      continue;
    } else {
    }
    break;
  }
  var G__39100 = args39098.length;
  switch(G__39100) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39098.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var args39105 = [];
  var len__31204__auto___39108 = arguments.length;
  var i__31205__auto___39109 = 0;
  while (true) {
    if (i__31205__auto___39109 < len__31204__auto___39108) {
      args39105.push(arguments[i__31205__auto___39109]);
      var G__39110 = i__31205__auto___39109 + 1;
      i__31205__auto___39109 = G__39110;
      continue;
    } else {
    }
    break;
  }
  var G__39107 = args39105.length;
  switch(G__39107) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39105.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var args39112 = [];
  var len__31204__auto___39163 = arguments.length;
  var i__31205__auto___39164 = 0;
  while (true) {
    if (i__31205__auto___39164 < len__31204__auto___39163) {
      args39112.push(arguments[i__31205__auto___39164]);
      var G__39165 = i__31205__auto___39164 + 1;
      i__31205__auto___39164 = G__39165;
      continue;
    } else {
    }
    break;
  }
  var G__39114 = args39112.length;
  switch(G__39114) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39112.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__36538__auto___39167 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___39167, out) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___39167, out) {
          return function(state_39138) {
            var state_val_39139 = state_39138[1];
            if (state_val_39139 === 7) {
              var inst_39133 = state_39138[2];
              var state_39138__$1 = state_39138;
              var statearr_39140_39168 = state_39138__$1;
              statearr_39140_39168[2] = inst_39133;
              statearr_39140_39168[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_39139 === 1) {
                var inst_39115 = null;
                var state_39138__$1 = function() {
                  var statearr_39141 = state_39138;
                  statearr_39141[7] = inst_39115;
                  return statearr_39141;
                }();
                var statearr_39142_39169 = state_39138__$1;
                statearr_39142_39169[2] = null;
                statearr_39142_39169[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_39139 === 4) {
                  var inst_39118 = state_39138[8];
                  var inst_39118__$1 = state_39138[2];
                  var inst_39119 = inst_39118__$1 == null;
                  var inst_39120 = cljs.core.not.call(null, inst_39119);
                  var state_39138__$1 = function() {
                    var statearr_39143 = state_39138;
                    statearr_39143[8] = inst_39118__$1;
                    return statearr_39143;
                  }();
                  if (inst_39120) {
                    var statearr_39144_39170 = state_39138__$1;
                    statearr_39144_39170[1] = 5;
                  } else {
                    var statearr_39145_39171 = state_39138__$1;
                    statearr_39145_39171[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_39139 === 6) {
                    var state_39138__$1 = state_39138;
                    var statearr_39146_39172 = state_39138__$1;
                    statearr_39146_39172[2] = null;
                    statearr_39146_39172[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_39139 === 3) {
                      var inst_39135 = state_39138[2];
                      var inst_39136 = cljs.core.async.close_BANG_.call(null, out);
                      var state_39138__$1 = function() {
                        var statearr_39147 = state_39138;
                        statearr_39147[9] = inst_39135;
                        return statearr_39147;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39138__$1, inst_39136);
                    } else {
                      if (state_val_39139 === 2) {
                        var state_39138__$1 = state_39138;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39138__$1, 4, ch);
                      } else {
                        if (state_val_39139 === 11) {
                          var inst_39118 = state_39138[8];
                          var inst_39127 = state_39138[2];
                          var inst_39115 = inst_39118;
                          var state_39138__$1 = function() {
                            var statearr_39148 = state_39138;
                            statearr_39148[7] = inst_39115;
                            statearr_39148[10] = inst_39127;
                            return statearr_39148;
                          }();
                          var statearr_39149_39173 = state_39138__$1;
                          statearr_39149_39173[2] = null;
                          statearr_39149_39173[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_39139 === 9) {
                            var inst_39118 = state_39138[8];
                            var state_39138__$1 = state_39138;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_39138__$1, 11, out, inst_39118);
                          } else {
                            if (state_val_39139 === 5) {
                              var inst_39118 = state_39138[8];
                              var inst_39115 = state_39138[7];
                              var inst_39122 = cljs.core._EQ_.call(null, inst_39118, inst_39115);
                              var state_39138__$1 = state_39138;
                              if (inst_39122) {
                                var statearr_39151_39174 = state_39138__$1;
                                statearr_39151_39174[1] = 8;
                              } else {
                                var statearr_39152_39175 = state_39138__$1;
                                statearr_39152_39175[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_39139 === 10) {
                                var inst_39130 = state_39138[2];
                                var state_39138__$1 = state_39138;
                                var statearr_39153_39176 = state_39138__$1;
                                statearr_39153_39176[2] = inst_39130;
                                statearr_39153_39176[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_39139 === 8) {
                                  var inst_39115 = state_39138[7];
                                  var tmp39150 = inst_39115;
                                  var inst_39115__$1 = tmp39150;
                                  var state_39138__$1 = function() {
                                    var statearr_39154 = state_39138;
                                    statearr_39154[7] = inst_39115__$1;
                                    return statearr_39154;
                                  }();
                                  var statearr_39155_39177 = state_39138__$1;
                                  statearr_39155_39177[2] = null;
                                  statearr_39155_39177[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___39167, out);
        return function(switch__36426__auto__, c__36538__auto___39167, out) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_39159 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_39159[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_39159[1] = 1;
              return statearr_39159;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_39138) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39138);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39160) {
                    if (e39160 instanceof Object) {
                      var ex__36430__auto__ = e39160;
                      var statearr_39161_39178 = state_39138;
                      statearr_39161_39178[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39138);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39160;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39179 = state_39138;
                  state_39138 = G__39179;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_39138) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_39138);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___39167, out);
      }();
      var state__36540__auto__ = function() {
        var statearr_39162 = f__36539__auto__.call(null);
        statearr_39162[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___39167;
        return statearr_39162;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___39167, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var args39180 = [];
  var len__31204__auto___39250 = arguments.length;
  var i__31205__auto___39251 = 0;
  while (true) {
    if (i__31205__auto___39251 < len__31204__auto___39250) {
      args39180.push(arguments[i__31205__auto___39251]);
      var G__39252 = i__31205__auto___39251 + 1;
      i__31205__auto___39251 = G__39252;
      continue;
    } else {
    }
    break;
  }
  var G__39182 = args39180.length;
  switch(G__39182) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39180.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__36538__auto___39254 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___39254, out) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___39254, out) {
          return function(state_39220) {
            var state_val_39221 = state_39220[1];
            if (state_val_39221 === 7) {
              var inst_39216 = state_39220[2];
              var state_39220__$1 = state_39220;
              var statearr_39222_39255 = state_39220__$1;
              statearr_39222_39255[2] = inst_39216;
              statearr_39222_39255[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_39221 === 1) {
                var inst_39183 = new Array(n);
                var inst_39184 = inst_39183;
                var inst_39185 = 0;
                var state_39220__$1 = function() {
                  var statearr_39223 = state_39220;
                  statearr_39223[7] = inst_39185;
                  statearr_39223[8] = inst_39184;
                  return statearr_39223;
                }();
                var statearr_39224_39256 = state_39220__$1;
                statearr_39224_39256[2] = null;
                statearr_39224_39256[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_39221 === 4) {
                  var inst_39188 = state_39220[9];
                  var inst_39188__$1 = state_39220[2];
                  var inst_39189 = inst_39188__$1 == null;
                  var inst_39190 = cljs.core.not.call(null, inst_39189);
                  var state_39220__$1 = function() {
                    var statearr_39225 = state_39220;
                    statearr_39225[9] = inst_39188__$1;
                    return statearr_39225;
                  }();
                  if (inst_39190) {
                    var statearr_39226_39257 = state_39220__$1;
                    statearr_39226_39257[1] = 5;
                  } else {
                    var statearr_39227_39258 = state_39220__$1;
                    statearr_39227_39258[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_39221 === 15) {
                    var inst_39210 = state_39220[2];
                    var state_39220__$1 = state_39220;
                    var statearr_39228_39259 = state_39220__$1;
                    statearr_39228_39259[2] = inst_39210;
                    statearr_39228_39259[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_39221 === 13) {
                      var state_39220__$1 = state_39220;
                      var statearr_39229_39260 = state_39220__$1;
                      statearr_39229_39260[2] = null;
                      statearr_39229_39260[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_39221 === 6) {
                        var inst_39185 = state_39220[7];
                        var inst_39206 = inst_39185 > 0;
                        var state_39220__$1 = state_39220;
                        if (cljs.core.truth_(inst_39206)) {
                          var statearr_39230_39261 = state_39220__$1;
                          statearr_39230_39261[1] = 12;
                        } else {
                          var statearr_39231_39262 = state_39220__$1;
                          statearr_39231_39262[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_39221 === 3) {
                          var inst_39218 = state_39220[2];
                          var state_39220__$1 = state_39220;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39220__$1, inst_39218);
                        } else {
                          if (state_val_39221 === 12) {
                            var inst_39184 = state_39220[8];
                            var inst_39208 = cljs.core.vec.call(null, inst_39184);
                            var state_39220__$1 = state_39220;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_39220__$1, 15, out, inst_39208);
                          } else {
                            if (state_val_39221 === 2) {
                              var state_39220__$1 = state_39220;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39220__$1, 4, ch);
                            } else {
                              if (state_val_39221 === 11) {
                                var inst_39200 = state_39220[2];
                                var inst_39201 = new Array(n);
                                var inst_39184 = inst_39201;
                                var inst_39185 = 0;
                                var state_39220__$1 = function() {
                                  var statearr_39232 = state_39220;
                                  statearr_39232[7] = inst_39185;
                                  statearr_39232[10] = inst_39200;
                                  statearr_39232[8] = inst_39184;
                                  return statearr_39232;
                                }();
                                var statearr_39233_39263 = state_39220__$1;
                                statearr_39233_39263[2] = null;
                                statearr_39233_39263[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_39221 === 9) {
                                  var inst_39184 = state_39220[8];
                                  var inst_39198 = cljs.core.vec.call(null, inst_39184);
                                  var state_39220__$1 = state_39220;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_39220__$1, 11, out, inst_39198);
                                } else {
                                  if (state_val_39221 === 5) {
                                    var inst_39185 = state_39220[7];
                                    var inst_39193 = state_39220[11];
                                    var inst_39188 = state_39220[9];
                                    var inst_39184 = state_39220[8];
                                    var inst_39192 = inst_39184[inst_39185] = inst_39188;
                                    var inst_39193__$1 = inst_39185 + 1;
                                    var inst_39194 = inst_39193__$1 < n;
                                    var state_39220__$1 = function() {
                                      var statearr_39234 = state_39220;
                                      statearr_39234[12] = inst_39192;
                                      statearr_39234[11] = inst_39193__$1;
                                      return statearr_39234;
                                    }();
                                    if (cljs.core.truth_(inst_39194)) {
                                      var statearr_39235_39264 = state_39220__$1;
                                      statearr_39235_39264[1] = 8;
                                    } else {
                                      var statearr_39236_39265 = state_39220__$1;
                                      statearr_39236_39265[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_39221 === 14) {
                                      var inst_39213 = state_39220[2];
                                      var inst_39214 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_39220__$1 = function() {
                                        var statearr_39238 = state_39220;
                                        statearr_39238[13] = inst_39213;
                                        return statearr_39238;
                                      }();
                                      var statearr_39239_39266 = state_39220__$1;
                                      statearr_39239_39266[2] = inst_39214;
                                      statearr_39239_39266[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_39221 === 10) {
                                        var inst_39204 = state_39220[2];
                                        var state_39220__$1 = state_39220;
                                        var statearr_39240_39267 = state_39220__$1;
                                        statearr_39240_39267[2] = inst_39204;
                                        statearr_39240_39267[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_39221 === 8) {
                                          var inst_39193 = state_39220[11];
                                          var inst_39184 = state_39220[8];
                                          var tmp39237 = inst_39184;
                                          var inst_39184__$1 = tmp39237;
                                          var inst_39185 = inst_39193;
                                          var state_39220__$1 = function() {
                                            var statearr_39241 = state_39220;
                                            statearr_39241[7] = inst_39185;
                                            statearr_39241[8] = inst_39184__$1;
                                            return statearr_39241;
                                          }();
                                          var statearr_39242_39268 = state_39220__$1;
                                          statearr_39242_39268[2] = null;
                                          statearr_39242_39268[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___39254, out);
        return function(switch__36426__auto__, c__36538__auto___39254, out) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_39246 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_39246[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_39246[1] = 1;
              return statearr_39246;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_39220) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39220);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39247) {
                    if (e39247 instanceof Object) {
                      var ex__36430__auto__ = e39247;
                      var statearr_39248_39269 = state_39220;
                      statearr_39248_39269[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39220);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39247;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39270 = state_39220;
                  state_39220 = G__39270;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_39220) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_39220);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___39254, out);
      }();
      var state__36540__auto__ = function() {
        var statearr_39249 = f__36539__auto__.call(null);
        statearr_39249[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___39254;
        return statearr_39249;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___39254, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var args39271 = [];
  var len__31204__auto___39345 = arguments.length;
  var i__31205__auto___39346 = 0;
  while (true) {
    if (i__31205__auto___39346 < len__31204__auto___39345) {
      args39271.push(arguments[i__31205__auto___39346]);
      var G__39347 = i__31205__auto___39346 + 1;
      i__31205__auto___39346 = G__39347;
      continue;
    } else {
    }
    break;
  }
  var G__39273 = args39271.length;
  switch(G__39273) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args39271.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__36538__auto___39349 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___39349, out) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___39349, out) {
          return function(state_39315) {
            var state_val_39316 = state_39315[1];
            if (state_val_39316 === 7) {
              var inst_39311 = state_39315[2];
              var state_39315__$1 = state_39315;
              var statearr_39317_39350 = state_39315__$1;
              statearr_39317_39350[2] = inst_39311;
              statearr_39317_39350[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_39316 === 1) {
                var inst_39274 = [];
                var inst_39275 = inst_39274;
                var inst_39276 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_39315__$1 = function() {
                  var statearr_39318 = state_39315;
                  statearr_39318[7] = inst_39276;
                  statearr_39318[8] = inst_39275;
                  return statearr_39318;
                }();
                var statearr_39319_39351 = state_39315__$1;
                statearr_39319_39351[2] = null;
                statearr_39319_39351[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_39316 === 4) {
                  var inst_39279 = state_39315[9];
                  var inst_39279__$1 = state_39315[2];
                  var inst_39280 = inst_39279__$1 == null;
                  var inst_39281 = cljs.core.not.call(null, inst_39280);
                  var state_39315__$1 = function() {
                    var statearr_39320 = state_39315;
                    statearr_39320[9] = inst_39279__$1;
                    return statearr_39320;
                  }();
                  if (inst_39281) {
                    var statearr_39321_39352 = state_39315__$1;
                    statearr_39321_39352[1] = 5;
                  } else {
                    var statearr_39322_39353 = state_39315__$1;
                    statearr_39322_39353[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_39316 === 15) {
                    var inst_39305 = state_39315[2];
                    var state_39315__$1 = state_39315;
                    var statearr_39323_39354 = state_39315__$1;
                    statearr_39323_39354[2] = inst_39305;
                    statearr_39323_39354[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_39316 === 13) {
                      var state_39315__$1 = state_39315;
                      var statearr_39324_39355 = state_39315__$1;
                      statearr_39324_39355[2] = null;
                      statearr_39324_39355[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_39316 === 6) {
                        var inst_39275 = state_39315[8];
                        var inst_39300 = inst_39275.length;
                        var inst_39301 = inst_39300 > 0;
                        var state_39315__$1 = state_39315;
                        if (cljs.core.truth_(inst_39301)) {
                          var statearr_39325_39356 = state_39315__$1;
                          statearr_39325_39356[1] = 12;
                        } else {
                          var statearr_39326_39357 = state_39315__$1;
                          statearr_39326_39357[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_39316 === 3) {
                          var inst_39313 = state_39315[2];
                          var state_39315__$1 = state_39315;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39315__$1, inst_39313);
                        } else {
                          if (state_val_39316 === 12) {
                            var inst_39275 = state_39315[8];
                            var inst_39303 = cljs.core.vec.call(null, inst_39275);
                            var state_39315__$1 = state_39315;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_39315__$1, 15, out, inst_39303);
                          } else {
                            if (state_val_39316 === 2) {
                              var state_39315__$1 = state_39315;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39315__$1, 4, ch);
                            } else {
                              if (state_val_39316 === 11) {
                                var inst_39283 = state_39315[10];
                                var inst_39279 = state_39315[9];
                                var inst_39293 = state_39315[2];
                                var inst_39294 = [];
                                var inst_39295 = inst_39294.push(inst_39279);
                                var inst_39275 = inst_39294;
                                var inst_39276 = inst_39283;
                                var state_39315__$1 = function() {
                                  var statearr_39327 = state_39315;
                                  statearr_39327[7] = inst_39276;
                                  statearr_39327[8] = inst_39275;
                                  statearr_39327[11] = inst_39293;
                                  statearr_39327[12] = inst_39295;
                                  return statearr_39327;
                                }();
                                var statearr_39328_39358 = state_39315__$1;
                                statearr_39328_39358[2] = null;
                                statearr_39328_39358[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_39316 === 9) {
                                  var inst_39275 = state_39315[8];
                                  var inst_39291 = cljs.core.vec.call(null, inst_39275);
                                  var state_39315__$1 = state_39315;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_39315__$1, 11, out, inst_39291);
                                } else {
                                  if (state_val_39316 === 5) {
                                    var inst_39276 = state_39315[7];
                                    var inst_39283 = state_39315[10];
                                    var inst_39279 = state_39315[9];
                                    var inst_39283__$1 = f.call(null, inst_39279);
                                    var inst_39284 = cljs.core._EQ_.call(null, inst_39283__$1, inst_39276);
                                    var inst_39285 = cljs.core.keyword_identical_QMARK_.call(null, inst_39276, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_39286 = inst_39284 || inst_39285;
                                    var state_39315__$1 = function() {
                                      var statearr_39329 = state_39315;
                                      statearr_39329[10] = inst_39283__$1;
                                      return statearr_39329;
                                    }();
                                    if (cljs.core.truth_(inst_39286)) {
                                      var statearr_39330_39359 = state_39315__$1;
                                      statearr_39330_39359[1] = 8;
                                    } else {
                                      var statearr_39331_39360 = state_39315__$1;
                                      statearr_39331_39360[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_39316 === 14) {
                                      var inst_39308 = state_39315[2];
                                      var inst_39309 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_39315__$1 = function() {
                                        var statearr_39333 = state_39315;
                                        statearr_39333[13] = inst_39308;
                                        return statearr_39333;
                                      }();
                                      var statearr_39334_39361 = state_39315__$1;
                                      statearr_39334_39361[2] = inst_39309;
                                      statearr_39334_39361[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_39316 === 10) {
                                        var inst_39298 = state_39315[2];
                                        var state_39315__$1 = state_39315;
                                        var statearr_39335_39362 = state_39315__$1;
                                        statearr_39335_39362[2] = inst_39298;
                                        statearr_39335_39362[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_39316 === 8) {
                                          var inst_39283 = state_39315[10];
                                          var inst_39279 = state_39315[9];
                                          var inst_39275 = state_39315[8];
                                          var inst_39288 = inst_39275.push(inst_39279);
                                          var tmp39332 = inst_39275;
                                          var inst_39275__$1 = tmp39332;
                                          var inst_39276 = inst_39283;
                                          var state_39315__$1 = function() {
                                            var statearr_39336 = state_39315;
                                            statearr_39336[7] = inst_39276;
                                            statearr_39336[8] = inst_39275__$1;
                                            statearr_39336[14] = inst_39288;
                                            return statearr_39336;
                                          }();
                                          var statearr_39337_39363 = state_39315__$1;
                                          statearr_39337_39363[2] = null;
                                          statearr_39337_39363[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___39349, out);
        return function(switch__36426__auto__, c__36538__auto___39349, out) {
          return function() {
            var cljs$core$async$state_machine__36427__auto__ = null;
            var cljs$core$async$state_machine__36427__auto____0 = function() {
              var statearr_39341 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_39341[0] = cljs$core$async$state_machine__36427__auto__;
              statearr_39341[1] = 1;
              return statearr_39341;
            };
            var cljs$core$async$state_machine__36427__auto____1 = function(state_39315) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39315);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39342) {
                    if (e39342 instanceof Object) {
                      var ex__36430__auto__ = e39342;
                      var statearr_39343_39364 = state_39315;
                      statearr_39343_39364[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39315);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39342;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39365 = state_39315;
                  state_39315 = G__39365;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__36427__auto__ = function(state_39315) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__36427__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__36427__auto____1.call(this, state_39315);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__36427__auto____0;
            cljs$core$async$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__36427__auto____1;
            return cljs$core$async$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___39349, out);
      }();
      var state__36540__auto__ = function() {
        var statearr_39344 = f__36539__auto__.call(null);
        statearr_39344[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___39349;
        return statearr_39344;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___39349, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("redditv.components.utils");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("rum.core");
redditv.components.utils.mixin_async_mult = function redditv$components$utils$mixin_async_mult(multi_chan) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "did-mount", "did-mount", 918232960), function(state) {
    var react_component = (new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248)).cljs$core$IFn$_invoke$arity$1(state);
    var recv_chan = cljs.core.async.chan.call(null);
    cljs.core.async.tap.call(null, multi_chan, recv_chan);
    var c__36538__auto___42094 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___42094, react_component, recv_chan) {
      return function() {
        var f__36539__auto__ = function() {
          var switch__36426__auto__ = function(c__36538__auto___42094, react_component, recv_chan) {
            return function(state_42082) {
              var state_val_42083 = state_42082[1];
              if (state_val_42083 === 1) {
                var state_42082__$1 = state_42082;
                var statearr_42084_42095 = state_42082__$1;
                statearr_42084_42095[2] = null;
                statearr_42084_42095[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_42083 === 2) {
                  var state_42082__$1 = state_42082;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_42082__$1, 4, recv_chan);
                } else {
                  if (state_val_42083 === 3) {
                    var inst_42080 = state_42082[2];
                    var state_42082__$1 = state_42082;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_42082__$1, inst_42080);
                  } else {
                    if (state_val_42083 === 4) {
                      var inst_42075 = state_42082[2];
                      var inst_42076 = cljs.core.assoc.call(null, state, new cljs.core.Keyword("redditv.components.utils", "recv-message", "redditv.components.utils/recv-message", 223791707), inst_42075);
                      var inst_42077 = rum.core.request_render.call(null, react_component);
                      var state_42082__$1 = function() {
                        var statearr_42085 = state_42082;
                        statearr_42085[7] = inst_42076;
                        statearr_42085[8] = inst_42077;
                        return statearr_42085;
                      }();
                      var statearr_42086_42096 = state_42082__$1;
                      statearr_42086_42096[2] = null;
                      statearr_42086_42096[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      return null;
                    }
                  }
                }
              }
            };
          }(c__36538__auto___42094, react_component, recv_chan);
          return function(switch__36426__auto__, c__36538__auto___42094, react_component, recv_chan) {
            return function() {
              var redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto__ = null;
              var redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto____0 = function() {
                var statearr_42090 = [null, null, null, null, null, null, null, null, null];
                statearr_42090[0] = redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto__;
                statearr_42090[1] = 1;
                return statearr_42090;
              };
              var redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto____1 = function(state_42082) {
                while (true) {
                  var ret_value__36428__auto__ = function() {
                    try {
                      while (true) {
                        var result__36429__auto__ = switch__36426__auto__.call(null, state_42082);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__36429__auto__;
                        }
                        break;
                      }
                    } catch (e42091) {
                      if (e42091 instanceof Object) {
                        var ex__36430__auto__ = e42091;
                        var statearr_42092_42097 = state_42082;
                        statearr_42092_42097[5] = ex__36430__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_42082);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e42091;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__42098 = state_42082;
                    state_42082 = G__42098;
                    continue;
                  } else {
                    return ret_value__36428__auto__;
                  }
                  break;
                }
              };
              redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto__ = function(state_42082) {
                switch(arguments.length) {
                  case 0:
                    return redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto____0.call(this);
                  case 1:
                    return redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto____1.call(this, state_42082);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto____0;
              redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto____1;
              return redditv$components$utils$mixin_async_mult_$_state_machine__36427__auto__;
            }();
          }(switch__36426__auto__, c__36538__auto___42094, react_component, recv_chan);
        }();
        var state__36540__auto__ = function() {
          var statearr_42093 = f__36539__auto__.call(null);
          statearr_42093[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___42094;
          return statearr_42093;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
      };
    }(c__36538__auto___42094, react_component, recv_chan));
    return cljs.core.assoc.call(null, state, new cljs.core.Keyword("redditv.components.utils", "recv-chan", "redditv.components.utils/recv-chan", 232921457), recv_chan);
  }, new cljs.core.Keyword(null, "will-unmount", "will-unmount", -808051550), function(state) {
    cljs.core.async.untap.call(null, multi_chan, (new cljs.core.Keyword("redditv.components.utils", "recv-chan", "redditv.components.utils/recv-chan", 232921457)).cljs$core$IFn$_invoke$arity$1(state));
    return cljs.core.dissoc.call(null, cljs.core.dissoc.call(null, state, new cljs.core.Keyword("redditv.components.utils", "recv-chan", "redditv.components.utils/recv-chan", 232921457)), new cljs.core.Keyword("redditv.components.utils", "recv-message", "redditv.components.utils/recv-message", 223791707));
  }], null);
};
goog.provide("goog.dom.InputType");
goog.dom.InputType = {BUTTON:"button", CHECKBOX:"checkbox", COLOR:"color", DATE:"date", DATETIME:"datetime", DATETIME_LOCAL:"datetime-local", EMAIL:"email", FILE:"file", HIDDEN:"hidden", IMAGE:"image", MENU:"menu", MONTH:"month", NUMBER:"number", PASSWORD:"password", RADIO:"radio", RANGE:"range", RESET:"reset", SEARCH:"search", SELECT_MULTIPLE:"select-multiple", SELECT_ONE:"select-one", SUBMIT:"submit", TEL:"tel", TEXT:"text", TEXTAREA:"textarea", TIME:"time", URL:"url", WEEK:"week"};
goog.provide("redditv.player");
goog.require("cljs.core");
goog.require("cljs.core.async");
redditv.player.IPlayer = function() {
};
redditv.player.play = function redditv$player$play(this$) {
  if (!(this$ == null) && !(this$.redditv$player$IPlayer$play$arity$1 == null)) {
    return this$.redditv$player$IPlayer$play$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = redditv.player.play[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = redditv.player.play["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPlayer.play", this$);
      }
    }
  }
};
redditv.player.pause = function redditv$player$pause(this$) {
  if (!(this$ == null) && !(this$.redditv$player$IPlayer$pause$arity$1 == null)) {
    return this$.redditv$player$IPlayer$pause$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = redditv.player.pause[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = redditv.player.pause["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPlayer.pause", this$);
      }
    }
  }
};
redditv.player.fullscreen = function redditv$player$fullscreen(this$) {
  if (!(this$ == null) && !(this$.redditv$player$IPlayer$fullscreen$arity$1 == null)) {
    return this$.redditv$player$IPlayer$fullscreen$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = redditv.player.fullscreen[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = redditv.player.fullscreen["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPlayer.fullscreen", this$);
      }
    }
  }
};
redditv.player.dispose = function redditv$player$dispose(this$) {
  if (!(this$ == null) && !(this$.redditv$player$IPlayer$dispose$arity$1 == null)) {
    return this$.redditv$player$IPlayer$dispose$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = redditv.player.dispose[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = redditv.player.dispose["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPlayer.dispose", this$);
      }
    }
  }
};
redditv.player.NullPlayer = function(__meta, __extmap, __hash) {
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
redditv.player.NullPlayer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__30718__auto__, k__30719__auto__) {
  var self__ = this;
  var this__30718__auto____$1 = this;
  return cljs.core._lookup.call(null, this__30718__auto____$1, k__30719__auto__, null);
};
redditv.player.NullPlayer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__30720__auto__, k39369, else__30721__auto__) {
  var self__ = this;
  var this__30720__auto____$1 = this;
  var G__39371 = k39369;
  switch(G__39371) {
    default:
      return cljs.core.get.call(null, self__.__extmap, k39369, else__30721__auto__);
  }
};
redditv.player.NullPlayer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__30732__auto__, writer__30733__auto__, opts__30734__auto__) {
  var self__ = this;
  var this__30732__auto____$1 = this;
  var pr_pair__30735__auto__ = function(this__30732__auto____$1) {
    return function(keyval__30736__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, cljs.core.pr_writer, "", " ", "", opts__30734__auto__, keyval__30736__auto__);
    };
  }(this__30732__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, pr_pair__30735__auto__, "#redditv.player.NullPlayer{", ", ", "}", opts__30734__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap));
};
redditv.player.NullPlayer.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
redditv.player.NullPlayer.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__39368) {
  var self__ = this;
  var G__39368__$1 = this;
  return new cljs.core.RecordIter(0, G__39368__$1, 0, cljs.core.PersistentVector.EMPTY, cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
redditv.player.NullPlayer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__30716__auto__) {
  var self__ = this;
  var this__30716__auto____$1 = this;
  return self__.__meta;
};
redditv.player.NullPlayer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__30712__auto__) {
  var self__ = this;
  var this__30712__auto____$1 = this;
  return new redditv.player.NullPlayer(self__.__meta, self__.__extmap, self__.__hash);
};
redditv.player.NullPlayer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__30722__auto__) {
  var self__ = this;
  var this__30722__auto____$1 = this;
  return 0 + cljs.core.count.call(null, self__.__extmap);
};
redditv.player.NullPlayer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__30713__auto__) {
  var self__ = this;
  var this__30713__auto____$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_imap.call(null, this__30713__auto____$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
redditv.player.NullPlayer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__30714__auto__, other__30715__auto__) {
  var self__ = this;
  var this__30714__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__30084__auto__ = other__30715__auto__;
    if (cljs.core.truth_(and__30084__auto__)) {
      var and__30084__auto____$1 = this__30714__auto____$1.constructor === other__30715__auto__.constructor;
      if (and__30084__auto____$1) {
        return cljs.core.equiv_map.call(null, this__30714__auto____$1, other__30715__auto__);
      } else {
        return and__30084__auto____$1;
      }
    } else {
      return and__30084__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
redditv.player.NullPlayer.prototype.redditv$player$IPlayer$ = cljs.core.PROTOCOL_SENTINEL;
redditv.player.NullPlayer.prototype.redditv$player$IPlayer$play$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.player.NullPlayer.prototype.redditv$player$IPlayer$pause$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.player.NullPlayer.prototype.redditv$player$IPlayer$fullscreen$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.player.NullPlayer.prototype.redditv$player$IPlayer$dispose$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.player.NullPlayer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__30727__auto__, k__30728__auto__) {
  var self__ = this;
  var this__30727__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.EMPTY, k__30728__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__30727__auto____$1), self__.__meta), k__30728__auto__);
  } else {
    return new redditv.player.NullPlayer(self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__30728__auto__)), null);
  }
};
redditv.player.NullPlayer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__30725__auto__, k__30726__auto__, G__39368) {
  var self__ = this;
  var this__30725__auto____$1 = this;
  var pred__39372 = cljs.core.keyword_identical_QMARK_;
  var expr__39373 = k__30726__auto__;
  return new redditv.player.NullPlayer(self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__30726__auto__, G__39368), null);
};
redditv.player.NullPlayer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__30730__auto__) {
  var self__ = this;
  var this__30730__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.EMPTY, self__.__extmap));
};
redditv.player.NullPlayer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__30717__auto__, G__39368) {
  var self__ = this;
  var this__30717__auto____$1 = this;
  return new redditv.player.NullPlayer(G__39368, self__.__extmap, self__.__hash);
};
redditv.player.NullPlayer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__30723__auto__, entry__30724__auto__) {
  var self__ = this;
  var this__30723__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__30724__auto__)) {
    return cljs.core._assoc.call(null, this__30723__auto____$1, cljs.core._nth.call(null, entry__30724__auto__, 0), cljs.core._nth.call(null, entry__30724__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__30723__auto____$1, entry__30724__auto__);
  }
};
redditv.player.NullPlayer.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
redditv.player.NullPlayer.cljs$lang$type = true;
redditv.player.NullPlayer.cljs$lang$ctorPrSeq = function(this__30752__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "redditv.player/NullPlayer");
};
redditv.player.NullPlayer.cljs$lang$ctorPrWriter = function(this__30752__auto__, writer__30753__auto__) {
  return cljs.core._write.call(null, writer__30753__auto__, "redditv.player/NullPlayer");
};
redditv.player.__GT_NullPlayer = function redditv$player$__GT_NullPlayer() {
  return new redditv.player.NullPlayer(null, null, null);
};
redditv.player.map__GT_NullPlayer = function redditv$player$map__GT_NullPlayer(G__39370) {
  return new redditv.player.NullPlayer(null, cljs.core.dissoc.call(null, G__39370), null);
};
redditv.player.create_nullplayer = function redditv$player$create_nullplayer() {
  return redditv.player.__GT_NullPlayer.call(null);
};
goog.provide("redditv.events");
goog.require("cljs.core");
redditv.events.video_select = function redditv$events$video_select(entry) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-select", "video-select", 775569479), new cljs.core.Keyword(null, "entry", "entry", 505168823), entry], null);
};
redditv.events.is_video_select_QMARK_ = function redditv$events$is_video_select_QMARK_(p__39378) {
  var map__39381 = p__39378;
  var map__39381__$1 = (!(map__39381 == null) ? map__39381.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39381.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39381) : map__39381;
  var event = map__39381__$1;
  var event_type = cljs.core.get.call(null, map__39381__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-select", "video-select", 775569479));
};
redditv.events.video_next = function redditv$events$video_next() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-next", "video-next", -637268521)], null);
};
redditv.events.is_video_next_QMARK_ = function redditv$events$is_video_next_QMARK_(p__39383) {
  var map__39386 = p__39383;
  var map__39386__$1 = (!(map__39386 == null) ? map__39386.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39386.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39386) : map__39386;
  var event_type = cljs.core.get.call(null, map__39386__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-next", "video-next", -637268521));
};
redditv.events.video_previous = function redditv$events$video_previous() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-previous", "video-previous", 1465036226)], null);
};
redditv.events.is_video_previous_QMARK_ = function redditv$events$is_video_previous_QMARK_(p__39388) {
  var map__39391 = p__39388;
  var map__39391__$1 = (!(map__39391 == null) ? map__39391.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39391.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39391) : map__39391;
  var event_type = cljs.core.get.call(null, map__39391__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-previous", "video-previous", 1465036226));
};
redditv.events.player_not_started = function redditv$events$player_not_started() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-not-started", "video-not-started", 1796695018)], null);
};
redditv.events.is_player_not_started_QMARK_ = function redditv$events$is_player_not_started_QMARK_(p__39393) {
  var map__39396 = p__39393;
  var map__39396__$1 = (!(map__39396 == null) ? map__39396.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39396.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39396) : map__39396;
  var event_type = cljs.core.get.call(null, map__39396__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-not-started", "video-not-started", 1796695018));
};
redditv.events.player_ended = function redditv$events$player_ended() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-ended", "video-ended", 1757171761)], null);
};
redditv.events.is_player_ended_QMARK_ = function redditv$events$is_player_ended_QMARK_(p__39398) {
  var map__39401 = p__39398;
  var map__39401__$1 = (!(map__39401 == null) ? map__39401.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39401.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39401) : map__39401;
  var event_type = cljs.core.get.call(null, map__39401__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-ended", "video-ended", 1757171761));
};
redditv.events.player_playing = function redditv$events$player_playing() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-playing", "video-playing", 1131110239)], null);
};
redditv.events.is_player_playing_QMARK_ = function redditv$events$is_player_playing_QMARK_(p__39403) {
  var map__39406 = p__39403;
  var map__39406__$1 = (!(map__39406 == null) ? map__39406.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39406.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39406) : map__39406;
  var event_type = cljs.core.get.call(null, map__39406__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-playing", "video-playing", 1131110239));
};
redditv.events.player_paused = function redditv$events$player_paused() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-paused", "video-paused", 1262325411)], null);
};
redditv.events.is_player_paused_QMARK_ = function redditv$events$is_player_paused_QMARK_(p__39408) {
  var map__39411 = p__39408;
  var map__39411__$1 = (!(map__39411 == null) ? map__39411.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39411.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39411) : map__39411;
  var event_type = cljs.core.get.call(null, map__39411__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-paused", "video-paused", 1262325411));
};
redditv.events.player_buffering = function redditv$events$player_buffering() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-buffering", "video-buffering", -755304113)], null);
};
redditv.events.is_player_buffering_QMARK_ = function redditv$events$is_player_buffering_QMARK_(p__39413) {
  var map__39416 = p__39413;
  var map__39416__$1 = (!(map__39416 == null) ? map__39416.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39416.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39416) : map__39416;
  var event_type = cljs.core.get.call(null, map__39416__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-buffering", "video-buffering", -755304113));
};
redditv.events.player_cued = function redditv$events$player_cued() {
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "event-type", "event-type", 319722813), new cljs.core.Keyword(null, "video-cued", "video-cued", -2053300864)], null);
};
redditv.events.is_player_cued_QMARK_ = function redditv$events$is_player_cued_QMARK_(p__39418) {
  var map__39421 = p__39418;
  var map__39421__$1 = (!(map__39421 == null) ? map__39421.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39421.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39421) : map__39421;
  var event_type = cljs.core.get.call(null, map__39421__$1, new cljs.core.Keyword(null, "event-type", "event-type", 319722813));
  return cljs.core._EQ_.call(null, event_type, new cljs.core.Keyword(null, "video-cued", "video-cued", -2053300864));
};
goog.provide("redditv.streamable");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("redditv.player");
goog.require("redditv.events");
redditv.streamable.example = "https://streamable.com/wgdg";
redditv.streamable.regex_streamable_url = /https?:\/\/streamable.com\/([a-zA-Z0-9])$/;
redditv.streamable.video_url__GT_video_id = function redditv$streamable$video_url__GT_video_id(url) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, redditv.streamable.regex_streamable_url, url))) {
    return cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.streamable.regex_streamable_url, url));
  } else {
    return null;
  }
};
redditv.streamable.is_streamable_url_QMARK_ = function redditv$streamable$is_streamable_url_QMARK_(url) {
  return cljs.core.boolean$.call(null, cljs.core.re_matches.call(null, redditv.streamable.regex_streamable_url, url));
};
redditv.streamable.StreamablePlayer = function(context, video_url, event_channel, __meta, __extmap, __hash) {
  this.context = context;
  this.video_url = video_url;
  this.event_channel = event_channel;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__30718__auto__, k__30719__auto__) {
  var self__ = this;
  var this__30718__auto____$1 = this;
  return cljs.core._lookup.call(null, this__30718__auto____$1, k__30719__auto__, null);
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__30720__auto__, k42043, else__30721__auto__) {
  var self__ = this;
  var this__30720__auto____$1 = this;
  var G__42045 = k42043 instanceof cljs.core.Keyword ? k42043.fqn : null;
  switch(G__42045) {
    case "context":
      return self__.context;
      break;
    case "video-url":
      return self__.video_url;
      break;
    case "event-channel":
      return self__.event_channel;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k42043, else__30721__auto__);
  }
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__30732__auto__, writer__30733__auto__, opts__30734__auto__) {
  var self__ = this;
  var this__30732__auto____$1 = this;
  var pr_pair__30735__auto__ = function(this__30732__auto____$1) {
    return function(keyval__30736__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, cljs.core.pr_writer, "", " ", "", opts__30734__auto__, keyval__30736__auto__);
    };
  }(this__30732__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, pr_pair__30735__auto__, "#redditv.streamable.StreamablePlayer{", ", ", "}", opts__30734__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113), self__.context], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), self__.video_url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), self__.event_channel], null)], null), self__.__extmap));
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
redditv.streamable.StreamablePlayer.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__42042) {
  var self__ = this;
  var G__42042__$1 = this;
  return new cljs.core.RecordIter(0, G__42042__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__30716__auto__) {
  var self__ = this;
  var this__30716__auto____$1 = this;
  return self__.__meta;
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__30712__auto__) {
  var self__ = this;
  var this__30712__auto____$1 = this;
  return new redditv.streamable.StreamablePlayer(self__.context, self__.video_url, self__.event_channel, self__.__meta, self__.__extmap, self__.__hash);
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__30722__auto__) {
  var self__ = this;
  var this__30722__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__30713__auto__) {
  var self__ = this;
  var this__30713__auto____$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_imap.call(null, this__30713__auto____$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__30714__auto__, other__30715__auto__) {
  var self__ = this;
  var this__30714__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__30084__auto__ = other__30715__auto__;
    if (cljs.core.truth_(and__30084__auto__)) {
      var and__30084__auto____$1 = this__30714__auto____$1.constructor === other__30715__auto__.constructor;
      if (and__30084__auto____$1) {
        return cljs.core.equiv_map.call(null, this__30714__auto____$1, other__30715__auto__);
      } else {
        return and__30084__auto____$1;
      }
    } else {
      return and__30084__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
redditv.streamable.StreamablePlayer.prototype.redditv$player$IPlayer$ = cljs.core.PROTOCOL_SENTINEL;
redditv.streamable.StreamablePlayer.prototype.redditv$player$IPlayer$play$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.streamable.StreamablePlayer.prototype.redditv$player$IPlayer$pause$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.streamable.StreamablePlayer.prototype.redditv$player$IPlayer$dispose$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__30727__auto__, k__30728__auto__) {
  var self__ = this;
  var this__30727__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), null, new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), null, new cljs.core.Keyword(null, "context", "context", -830191113), null], null), null), k__30728__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__30727__auto____$1), self__.__meta), k__30728__auto__);
  } else {
    return new redditv.streamable.StreamablePlayer(self__.context, self__.video_url, self__.event_channel, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__30728__auto__)), null);
  }
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__30725__auto__, k__30726__auto__, G__42042) {
  var self__ = this;
  var this__30725__auto____$1 = this;
  var pred__42046 = cljs.core.keyword_identical_QMARK_;
  var expr__42047 = k__30726__auto__;
  if (cljs.core.truth_(pred__42046.call(null, new cljs.core.Keyword(null, "context", "context", -830191113), expr__42047))) {
    return new redditv.streamable.StreamablePlayer(G__42042, self__.video_url, self__.event_channel, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__42046.call(null, new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), expr__42047))) {
      return new redditv.streamable.StreamablePlayer(self__.context, G__42042, self__.event_channel, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__42046.call(null, new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), expr__42047))) {
        return new redditv.streamable.StreamablePlayer(self__.context, self__.video_url, G__42042, self__.__meta, self__.__extmap, null);
      } else {
        return new redditv.streamable.StreamablePlayer(self__.context, self__.video_url, self__.event_channel, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__30726__auto__, G__42042), null);
      }
    }
  }
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__30730__auto__) {
  var self__ = this;
  var this__30730__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113), self__.context], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), self__.video_url], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), self__.event_channel], null)], null), self__.__extmap));
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__30717__auto__, G__42042) {
  var self__ = this;
  var this__30717__auto____$1 = this;
  return new redditv.streamable.StreamablePlayer(self__.context, self__.video_url, self__.event_channel, G__42042, self__.__extmap, self__.__hash);
};
redditv.streamable.StreamablePlayer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__30723__auto__, entry__30724__auto__) {
  var self__ = this;
  var this__30723__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__30724__auto__)) {
    return cljs.core._assoc.call(null, this__30723__auto____$1, cljs.core._nth.call(null, entry__30724__auto__, 0), cljs.core._nth.call(null, entry__30724__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__30723__auto____$1, entry__30724__auto__);
  }
};
redditv.streamable.StreamablePlayer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "context", "context", 810340414, null), new cljs.core.Symbol(null, "video-url", "video-url", -1018313069, null), new cljs.core.Symbol(null, "event-channel", "event-channel", -1438879655, null)], null);
};
redditv.streamable.StreamablePlayer.cljs$lang$type = true;
redditv.streamable.StreamablePlayer.cljs$lang$ctorPrSeq = function(this__30752__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "redditv.streamable/StreamablePlayer");
};
redditv.streamable.StreamablePlayer.cljs$lang$ctorPrWriter = function(this__30752__auto__, writer__30753__auto__) {
  return cljs.core._write.call(null, writer__30753__auto__, "redditv.streamable/StreamablePlayer");
};
redditv.streamable.__GT_StreamablePlayer = function redditv$streamable$__GT_StreamablePlayer(context, video_url, event_channel) {
  return new redditv.streamable.StreamablePlayer(context, video_url, event_channel, null, null, null);
};
redditv.streamable.map__GT_StreamablePlayer = function redditv$streamable$map__GT_StreamablePlayer(G__42044) {
  return new redditv.streamable.StreamablePlayer((new cljs.core.Keyword(null, "context", "context", -830191113)).cljs$core$IFn$_invoke$arity$1(G__42044), (new cljs.core.Keyword(null, "video-url", "video-url", 1636122700)).cljs$core$IFn$_invoke$arity$1(G__42044), (new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)).cljs$core$IFn$_invoke$arity$1(G__42044), null, cljs.core.dissoc.call(null, G__42044, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, 
  "video-url", "video-url", 1636122700), new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)), null);
};
redditv.streamable.create_streamableplayer = function redditv$streamable$create_streamableplayer(dom_id, video_url, event_channel) {
  return null;
};
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return !!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.FreeList");
goog.async.FreeList = goog.defineClass(null, {constructor:function(create, reset, limit) {
  this.limit_ = limit;
  this.create_ = create;
  this.reset_ = reset;
  this.occupants_ = 0;
  this.head_ = null;
}, get:function() {
  var item;
  if (this.occupants_ > 0) {
    this.occupants_--;
    item = this.head_;
    this.head_ = item.next;
    item.next = null;
  } else {
    item = this.create_();
  }
  return item;
}, put:function(item) {
  this.reset_(item);
  if (this.occupants_ < this.limit_) {
    this.occupants_++;
    item.next = this.head_;
    this.head_ = item;
  }
}, occupants:function() {
  return this.occupants_;
}});
goog.provide("goog.async.WorkItem");
goog.provide("goog.async.WorkQueue");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.async.WorkQueue = function() {
  this.workHead_ = null;
  this.workTail_ = null;
};
goog.define("goog.async.WorkQueue.DEFAULT_MAX_UNUSED", 100);
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(item) {
  item.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(fn, scope) {
  var item = this.getUnusedItem_();
  item.set(fn, scope);
  if (this.workTail_) {
    this.workTail_.next = item;
    this.workTail_ = item;
  } else {
    goog.asserts.assert(!this.workHead_);
    this.workHead_ = item;
    this.workTail_ = item;
  }
};
goog.async.WorkQueue.prototype.remove = function() {
  var item = null;
  if (this.workHead_) {
    item = this.workHead_;
    this.workHead_ = this.workHead_.next;
    if (!this.workHead_) {
      this.workTail_ = null;
    }
    item.next = null;
  }
  return item;
};
goog.async.WorkQueue.prototype.returnUnused = function(item) {
  goog.async.WorkQueue.freelist_.put(item);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.WorkItem.prototype.set = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.provide("goog.async.run");
goog.require("goog.async.WorkQueue");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.add(callback, opt_context);
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve(undefined);
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(opt_realSetTimeout) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    if (opt_realSetTimeout) {
      opt_realSetTimeout(goog.async.run.processWorkQueue);
    }
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
if (goog.DEBUG) {
  goog.async.run.resetQueue = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = new goog.async.WorkQueue;
  };
}
goog.async.run.processWorkQueue = function() {
  var item = null;
  while (item = goog.async.run.workQueue_.remove()) {
    try {
      item.fn.call(item.scope);
    } catch (e) {
      goog.async.throwException(e);
    }
    goog.async.run.workQueue_.returnUnused(item);
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.callbackEntriesTail_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  if (resolver != goog.nullFunction) {
    try {
      var self = this;
      resolver.call(opt_context, function(value) {
        self.resolve_(goog.Promise.State_.FULFILLED, value);
      }, function(reason) {
        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {
          try {
            if (reason instanceof Error) {
              throw reason;
            } else {
              throw new Error("Promise rejected.");
            }
          } catch (e) {
          }
        }
        self.resolve_(goog.Promise.State_.REJECTED, reason);
      });
    } catch (e) {
      this.resolve_(goog.Promise.State_.REJECTED, e);
    }
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.next = null;
  this.always = false;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.always = false;
};
goog.define("goog.Promise.DEFAULT_MAX_UNUSED", 100);
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(item) {
  item.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {
  var entry = goog.Promise.freelist_.get();
  entry.onFulfilled = onFulfilled;
  entry.onRejected = onRejected;
  entry.context = context;
  return entry;
};
goog.Promise.returnEntry_ = function(entry) {
  goog.Promise.freelist_.put(entry);
};
goog.Promise.resolve = function(opt_value) {
  if (opt_value instanceof goog.Promise) {
    return opt_value;
  }
  var promise = new goog.Promise(goog.nullFunction);
  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);
  return promise;
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {
  var isThenable = goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);
  if (!isThenable) {
    goog.async.run(goog.partial(onFulfilled, value));
  }
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.allSettled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toSettle = promises.length;
    var results = [];
    if (!toSettle) {
      resolve(results);
      return;
    }
    var onSettled = function(index, fulfilled, result) {
      toSettle--;
      results[index] = fulfilled ? {fulfilled:true, value:result} : {fulfilled:false, reason:result};
      if (toSettle == 0) {
        resolve(results);
      }
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, true), goog.partial(onSettled, i, false));
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;i < promises.length;i++) {
      promise = promises[i];
      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));
};
goog.Promise.prototype.thenAlways = function(onSettled, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);
  entry.always = true;
  this.addCallbackEntry_(entry);
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
      this.parent_ = null;
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childEntry = null;
  var beforeChildEntry = null;
  for (var entry = this.callbackEntries_;entry;entry = entry.next) {
    if (!entry.always) {
      childCount++;
      if (entry.child == childPromise) {
        childEntry = entry;
      }
      if (childEntry && childCount > 1) {
        break;
      }
    }
    if (!childEntry) {
      beforeChildEntry = entry;
    }
  }
  if (childEntry) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      if (beforeChildEntry) {
        this.removeEntryAfter_(beforeChildEntry);
      } else {
        this.popEntry_();
      }
      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  this.queueEntry_(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_(callbackEntry);
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this === x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  }
  this.state_ = goog.Promise.State_.BLOCKED;
  var isThenable = goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);
  if (isThenable) {
    return;
  }
  this.result_ = x;
  this.state_ = state;
  this.parent_ = null;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {
  if (value instanceof goog.Promise) {
    value.thenVoid(onFulfilled, onRejected, context);
    return true;
  } else {
    if (goog.Thenable.isImplementedBy(value)) {
      value = (value);
      value.then(onFulfilled, onRejected, context);
      return true;
    } else {
      if (goog.isObject(value)) {
        try {
          var then = value["then"];
          if (goog.isFunction(then)) {
            goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context);
            return true;
          }
        } catch (e) {
          onRejected.call(context, e);
          return true;
        }
      }
    }
  }
  return false;
};
goog.Promise.tryThen_ = function(thenable, then, onFulfilled, onRejected, context) {
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      onFulfilled.call(context, value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      onRejected.call(context, reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(entry) {
  goog.asserts.assert(entry.onFulfilled != null);
  if (this.callbackEntriesTail_) {
    this.callbackEntriesTail_.next = entry;
    this.callbackEntriesTail_ = entry;
  } else {
    this.callbackEntries_ = entry;
    this.callbackEntriesTail_ = entry;
  }
};
goog.Promise.prototype.popEntry_ = function() {
  var entry = null;
  if (this.callbackEntries_) {
    entry = this.callbackEntries_;
    this.callbackEntries_ = entry.next;
    entry.next = null;
  }
  if (!this.callbackEntries_) {
    this.callbackEntriesTail_ = null;
  }
  if (entry != null) {
    goog.asserts.assert(entry.onFulfilled != null);
  }
  return entry;
};
goog.Promise.prototype.removeEntryAfter_ = function(previous) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(previous != null);
  if (previous.next == this.callbackEntriesTail_) {
    this.callbackEntriesTail_ = previous;
  }
  previous.next = previous.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  var entry = null;
  while (entry = this.popEntry_()) {
    if (goog.Promise.LONG_STACK_TRACES) {
      this.currentStep_++;
    }
    this.executeCallback_(entry, this.state_, this.result_);
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always) {
    this.removeUnhandledRejection_();
  }
  if (callbackEntry.child) {
    callbackEntry.child.parent_ = null;
    goog.Promise.invokeCallback_(callbackEntry, state, result);
  } else {
    try {
      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  }
  goog.Promise.returnEntry_(callbackEntry);
};
goog.Promise.invokeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled.call(callbackEntry.context, result);
  } else {
    if (callbackEntry.onRejected) {
      callbackEntry.onRejected.call(callbackEntry.context, result);
    }
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addFinally = function(f, opt_scope) {
  var self = this;
  return this.addCallbacks(f, function(err) {
    var result = f.call(self, err);
    if (!goog.isDef(result)) {
      throw err;
    }
    return result;
  }, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res) || typeof goog.global["Promise"] === "function" && res instanceof goog.global["Promise"]) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.net.jsloader");
goog.provide("goog.net.jsloader.Error");
goog.provide("goog.net.jsloader.ErrorCode");
goog.provide("goog.net.jsloader.Options");
goog.require("goog.array");
goog.require("goog.async.Deferred");
goog.require("goog.debug.Error");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.object");
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5E3;
goog.net.jsloader.Options;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.scriptLoadingDeferred_;
goog.net.jsloader.loadMany = function(uris, opt_options) {
  if (!uris.length) {
    return goog.async.Deferred.succeed(null);
  }
  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
  goog.array.extend(goog.net.jsloader.scriptsToLoad_, uris);
  if (isAnotherModuleLoading) {
    return goog.net.jsloader.scriptLoadingDeferred_;
  }
  uris = goog.net.jsloader.scriptsToLoad_;
  var popAndLoadNextScript = function() {
    var uri = uris.shift();
    var deferred = goog.net.jsloader.load(uri, opt_options);
    if (uris.length) {
      deferred.addBoth(popAndLoadNextScript);
    }
    return deferred;
  };
  goog.net.jsloader.scriptLoadingDeferred_ = popAndLoadNextScript();
  return goog.net.jsloader.scriptLoadingDeferred_;
};
goog.net.jsloader.load = function(uri, opt_options) {
  var options = opt_options || {};
  var doc = options.document || document;
  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
  var request = {script_:script, timeout_:undefined};
  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);
  var timeout = null;
  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  if (timeoutDuration > 0) {
    timeout = window.setTimeout(function() {
      goog.net.jsloader.cleanup_(script, true);
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri));
    }, timeoutDuration);
    request.timeout_ = timeout;
  }
  script.onload = script.onreadystatechange = function() {
    if (!script.readyState || script.readyState == "loaded" || script.readyState == "complete") {
      var removeScriptNode = options.cleanupWhenDone || false;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null);
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, true, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri));
  };
  var properties = options.attributes || {};
  goog.object.extend(properties, {"type":"text/javascript", "charset":"UTF-8", "src":uri});
  goog.dom.setProperties(script, properties);
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred;
};
goog.net.jsloader.loadAndVerify = function(uri, verificationObjName, options) {
  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {
    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};
  }
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  if (goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."));
  }
  var sendDeferred = goog.net.jsloader.load(uri, options);
  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    if (goog.isDef(result)) {
      deferred.callback(result);
      delete verifyObjs[verificationObjName];
    } else {
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."));
    }
  });
  sendDeferred.addErrback(function(error) {
    if (goog.isDef(verifyObjs[verificationObjName])) {
      delete verifyObjs[verificationObjName];
    }
    deferred.errback(error);
  });
  return deferred;
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = doc.getElementsByTagName(goog.dom.TagName.HEAD);
  if (!headElements || goog.array.isEmpty(headElements)) {
    return doc.documentElement;
  } else {
    return headElements[0];
  }
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if (request && request.script_) {
    var scriptNode = request.script_;
    if (scriptNode && scriptNode.tagName == goog.dom.TagName.SCRIPT) {
      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);
    }
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  if (goog.isDefAndNotNull(opt_timeout)) {
    goog.global.clearTimeout(opt_timeout);
  }
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  if (removeScriptNode) {
    window.setTimeout(function() {
      goog.dom.removeNode(scriptNode);
    }, 0);
  }
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  if (opt_message) {
    msg += ": " + opt_message;
  }
  goog.net.jsloader.Error.base(this, "constructor", msg);
  this.code = code;
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    callback.call(opt_scope);
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", 
CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", 
LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", TIMEUPDATE:"timeupdate", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), 
ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", 
MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", 
MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", TEXTINPUT:"textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", 
DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  if (!goog.isNull(relevantTouch)) {
    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX : relevantTouch.pageX;
    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY : relevantTouch.pageY;
    this.screenX = relevantTouch.screenX || 0;
    this.screenY = relevantTouch.screenY || 0;
  } else {
    this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
    this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
    this.screenX = e.screenX || 0;
    this.screenY = e.screenY || 0;
  }
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.forwardDeclare("goog.events.EventLike");
goog.forwardDeclare("goog.events.EventTarget");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return (src).unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return (obj).removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return (obj).getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return (obj).fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return (listener).handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = (e.currentTarget = target);
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.Promise");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = (opt_timerObject || goog.Timer.defaultTimerObject);
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {
    return goog.Timer.INVALID_TIMEOUT_ID_;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.Timer.promise = function(delay, opt_result) {
  var timerKey = null;
  return (new goog.Promise(function(resolve, reject) {
    timerKey = goog.Timer.callOnce(function() {
      resolve(opt_result);
    }, delay);
    if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {
      reject(new Error("Failed to schedule timer."));
    }
  })).thenCatch(function(error) {
    goog.Timer.clear(timerKey);
    throw error;
  });
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, function(listenerObj, key) {
    if (this.keys_.hasOwnProperty(key)) {
      goog.events.unlistenByKey(listenerObj);
    }
  }, this);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.labs.userAgent.device");
goog.require("goog.labs.userAgent.util");
goog.labs.userAgent.device.isMobile = function() {
  return !goog.labs.userAgent.device.isTablet() && (goog.labs.userAgent.util.matchUserAgent("iPod") || goog.labs.userAgent.util.matchUserAgent("iPhone") || goog.labs.userAgent.util.matchUserAgent("Android") || goog.labs.userAgent.util.matchUserAgent("IEMobile"));
};
goog.labs.userAgent.device.isTablet = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Mobile") || goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.device.isDesktop = function() {
  return !goog.labs.userAgent.device.isMobile() && !goog.labs.userAgent.device.isTablet();
};
goog.provide("goog.memoize");
goog.memoize = function(f, opt_serializer) {
  var serializer = opt_serializer || goog.memoize.simpleSerializer;
  return function() {
    if (goog.memoize.ENABLE_MEMOIZE) {
      var thisOrGlobal = this || goog.global;
      var cache = thisOrGlobal[goog.memoize.CACHE_PROPERTY_] || (thisOrGlobal[goog.memoize.CACHE_PROPERTY_] = {});
      var key = serializer(goog.getUid(f), arguments);
      return cache.hasOwnProperty(key) ? cache[key] : cache[key] = f.apply(this, arguments);
    } else {
      return f.apply(this, arguments);
    }
  };
};
goog.define("goog.memoize.ENABLE_MEMOIZE", true);
goog.memoize.clearCache = function(cacheOwner) {
  cacheOwner[goog.memoize.CACHE_PROPERTY_] = {};
};
goog.memoize.CACHE_PROPERTY_ = "closure_memoize_cache_";
goog.memoize.simpleSerializer = function(functionUid, args) {
  var context = [functionUid];
  for (var i = args.length - 1;i >= 0;--i) {
    context.push(typeof args[i], args[i]);
  }
  return context.join("\x0B");
};
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.InputType");
goog.require("goog.dom.safe");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.labs.userAgent.device");
goog.require("goog.memoize");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    var inputHtml = goog.html.SafeHtml.create("input", {type:goog.dom.InputType.TEXT, name:inputId, id:inputId, style:goog.string.Const.from("display:none")});
    goog.dom.safe.documentWrite(document, inputHtml);
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    if (window.location.protocol == "https") {
      this.iframeSrc_ = goog.html.TrustedResourceUrl.fromConstant(goog.string.Const.from("https:///"));
    } else {
      this.iframeSrc_ = goog.html.TrustedResourceUrl.fromConstant(goog.string.Const.from('javascript:""'));
    }
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var iframeHtml = goog.html.SafeHtml.createIframe(this.iframeSrc_, null, {id:iframeId, style:goog.string.Const.from("display:none"), sandbox:undefined});
      goog.dom.safe.documentWrite(document, iframeHtml);
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.isOnHashChangeSupported = goog.memoize(function() {
  return goog.userAgent.IE ? goog.userAgent.isDocumentModeOrHigher(8) : "onhashchange" in goog.global;
});
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.isOnHashChangeSupported() && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!(goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.isOnHashChangeSupported()) {
        if (goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = loc.href.split("#")[0];
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || hasHash || token) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      var iframeSourceHtml = goog.html.SafeHtml.concat(goog.html.SafeHtml.create("title", {}, opt_title || this.window_.document.title), goog.html.SafeHtml.create("body", {}, token));
      goog.dom.safe.documentWrite(doc, iframeSourceHtml);
      doc.close();
    } else {
      goog.asserts.assertInstanceof(this.iframeSrc_, goog.html.TrustedResourceUrl, "this.iframeSrc_ must be set on calls to setIframeToken_");
      var url = goog.html.TrustedResourceUrl.unwrap((this.iframeSrc_)) + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("redditv.components.mdl");
goog.require("cljs.core");
goog.require("rum.core");
redditv.components.mdl.checkbox = rum.core.build_defc.call(null, function() {
  var G__41498__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.Checkbox, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.Checkbox, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.Checkbox, 
    cljs.core.clj__GT_js.call(null, props__31276__auto__), [children__31277__auto__]));
  };
  var G__41498 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41499__i = 0, G__41499__a = new Array(arguments.length - 1);
      while (G__41499__i < G__41499__a.length) {
        G__41499__a[G__41499__i] = arguments[G__41499__i + 1];
        ++G__41499__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41499__a, 0);
    }
    return G__41498__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41498.cljs$lang$maxFixedArity = 1;
  G__41498.cljs$lang$applyTo = function(arglist__41500) {
    var props__31276__auto__ = cljs.core.first(arglist__41500);
    var children__31277__auto__ = cljs.core.rest(arglist__41500);
    return G__41498__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41498.cljs$core$IFn$_invoke$arity$variadic = G__41498__delegate;
  return G__41498;
}(), null, "checkbox");
redditv.components.mdl.fab_button = rum.core.build_defc.call(null, function() {
  var G__41501__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.FABButton, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.FABButton, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.FABButton, 
    cljs.core.clj__GT_js.call(null, props__31276__auto__), [children__31277__auto__]));
  };
  var G__41501 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41502__i = 0, G__41502__a = new Array(arguments.length - 1);
      while (G__41502__i < G__41502__a.length) {
        G__41502__a[G__41502__i] = arguments[G__41502__i + 1];
        ++G__41502__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41502__a, 0);
    }
    return G__41501__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41501.cljs$lang$maxFixedArity = 1;
  G__41501.cljs$lang$applyTo = function(arglist__41503) {
    var props__31276__auto__ = cljs.core.first(arglist__41503);
    var children__31277__auto__ = cljs.core.rest(arglist__41503);
    return G__41501__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41501.cljs$core$IFn$_invoke$arity$variadic = G__41501__delegate;
  return G__41501;
}(), null, "fab-button");
redditv.components.mdl.icon = rum.core.build_defc.call(null, function() {
  var G__41504__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.Icon, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.Icon, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.Icon, cljs.core.clj__GT_js.call(null, 
    props__31276__auto__), [children__31277__auto__]));
  };
  var G__41504 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41505__i = 0, G__41505__a = new Array(arguments.length - 1);
      while (G__41505__i < G__41505__a.length) {
        G__41505__a[G__41505__i] = arguments[G__41505__i + 1];
        ++G__41505__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41505__a, 0);
    }
    return G__41504__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41504.cljs$lang$maxFixedArity = 1;
  G__41504.cljs$lang$applyTo = function(arglist__41506) {
    var props__31276__auto__ = cljs.core.first(arglist__41506);
    var children__31277__auto__ = cljs.core.rest(arglist__41506);
    return G__41504__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41504.cljs$core$IFn$_invoke$arity$variadic = G__41504__delegate;
  return G__41504;
}(), null, "icon");
redditv.components.mdl.tooltip = rum.core.build_defc.call(null, function() {
  var G__41507__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.Tooltip, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.Tooltip, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.Tooltip, 
    cljs.core.clj__GT_js.call(null, props__31276__auto__), [children__31277__auto__]));
  };
  var G__41507 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41508__i = 0, G__41508__a = new Array(arguments.length - 1);
      while (G__41508__i < G__41508__a.length) {
        G__41508__a[G__41508__i] = arguments[G__41508__i + 1];
        ++G__41508__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41508__a, 0);
    }
    return G__41507__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41507.cljs$lang$maxFixedArity = 1;
  G__41507.cljs$lang$applyTo = function(arglist__41509) {
    var props__31276__auto__ = cljs.core.first(arglist__41509);
    var children__31277__auto__ = cljs.core.rest(arglist__41509);
    return G__41507__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41507.cljs$core$IFn$_invoke$arity$variadic = G__41507__delegate;
  return G__41507;
}(), null, "tooltip");
redditv.components.mdl.slider = rum.core.build_defc.call(null, function() {
  var G__41510__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.Slider, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.Slider, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.Slider, cljs.core.clj__GT_js.call(null, 
    props__31276__auto__), [children__31277__auto__]));
  };
  var G__41510 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41511__i = 0, G__41511__a = new Array(arguments.length - 1);
      while (G__41511__i < G__41511__a.length) {
        G__41511__a[G__41511__i] = arguments[G__41511__i + 1];
        ++G__41511__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41511__a, 0);
    }
    return G__41510__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41510.cljs$lang$maxFixedArity = 1;
  G__41510.cljs$lang$applyTo = function(arglist__41512) {
    var props__31276__auto__ = cljs.core.first(arglist__41512);
    var children__31277__auto__ = cljs.core.rest(arglist__41512);
    return G__41510__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41510.cljs$core$IFn$_invoke$arity$variadic = G__41510__delegate;
  return G__41510;
}(), null, "slider");
redditv.components.mdl.grid = rum.core.build_defc.call(null, function() {
  var G__41513__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.Grid, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.Grid, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.Grid, cljs.core.clj__GT_js.call(null, 
    props__31276__auto__), [children__31277__auto__]));
  };
  var G__41513 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41514__i = 0, G__41514__a = new Array(arguments.length - 1);
      while (G__41514__i < G__41514__a.length) {
        G__41514__a[G__41514__i] = arguments[G__41514__i + 1];
        ++G__41514__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41514__a, 0);
    }
    return G__41513__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41513.cljs$lang$maxFixedArity = 1;
  G__41513.cljs$lang$applyTo = function(arglist__41515) {
    var props__31276__auto__ = cljs.core.first(arglist__41515);
    var children__31277__auto__ = cljs.core.rest(arglist__41515);
    return G__41513__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41513.cljs$core$IFn$_invoke$arity$variadic = G__41513__delegate;
  return G__41513;
}(), null, "grid");
redditv.components.mdl.cell = rum.core.build_defc.call(null, function() {
  var G__41516__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.Cell, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.Cell, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.Cell, cljs.core.clj__GT_js.call(null, 
    props__31276__auto__), [children__31277__auto__]));
  };
  var G__41516 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41517__i = 0, G__41517__a = new Array(arguments.length - 1);
      while (G__41517__i < G__41517__a.length) {
        G__41517__a[G__41517__i] = arguments[G__41517__i + 1];
        ++G__41517__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41517__a, 0);
    }
    return G__41516__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41516.cljs$lang$maxFixedArity = 1;
  G__41516.cljs$lang$applyTo = function(arglist__41518) {
    var props__31276__auto__ = cljs.core.first(arglist__41518);
    var children__31277__auto__ = cljs.core.rest(arglist__41518);
    return G__41516__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41516.cljs$core$IFn$_invoke$arity$variadic = G__41516__delegate;
  return G__41516;
}(), null, "cell");
redditv.components.mdl.progress_bar = rum.core.build_defc.call(null, function() {
  var G__41519__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.ProgressBar, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.ProgressBar, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.ProgressBar, 
    cljs.core.clj__GT_js.call(null, props__31276__auto__), [children__31277__auto__]));
  };
  var G__41519 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41520__i = 0, G__41520__a = new Array(arguments.length - 1);
      while (G__41520__i < G__41520__a.length) {
        G__41520__a[G__41520__i] = arguments[G__41520__i + 1];
        ++G__41520__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41520__a, 0);
    }
    return G__41519__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41519.cljs$lang$maxFixedArity = 1;
  G__41519.cljs$lang$applyTo = function(arglist__41521) {
    var props__31276__auto__ = cljs.core.first(arglist__41521);
    var children__31277__auto__ = cljs.core.rest(arglist__41521);
    return G__41519__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41519.cljs$core$IFn$_invoke$arity$variadic = G__41519__delegate;
  return G__41519;
}(), null, "progress-bar");
redditv.components.mdl.spinner = rum.core.build_defc.call(null, function() {
  var G__41522__delegate = function(props__31276__auto__, children__31277__auto__) {
    return sablono.interpreter.interpret.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 0) ? React.createElement(ReactMDL.Spinner, cljs.core.clj__GT_js.call(null, props__31276__auto__)) : cljs.core._EQ_.call(null, cljs.core.count.call(null, children__31277__auto__), 1) ? React.createElement(ReactMDL.Spinner, cljs.core.clj__GT_js.call(null, props__31276__auto__), cljs.core.first.call(null, children__31277__auto__)) : React.createElement(ReactMDL.Spinner, 
    cljs.core.clj__GT_js.call(null, props__31276__auto__), [children__31277__auto__]));
  };
  var G__41522 = function(props__31276__auto__, var_args) {
    var children__31277__auto__ = null;
    if (arguments.length > 1) {
      var G__41523__i = 0, G__41523__a = new Array(arguments.length - 1);
      while (G__41523__i < G__41523__a.length) {
        G__41523__a[G__41523__i] = arguments[G__41523__i + 1];
        ++G__41523__i;
      }
      children__31277__auto__ = new cljs.core.IndexedSeq(G__41523__a, 0);
    }
    return G__41522__delegate.call(this, props__31276__auto__, children__31277__auto__);
  };
  G__41522.cljs$lang$maxFixedArity = 1;
  G__41522.cljs$lang$applyTo = function(arglist__41524) {
    var props__31276__auto__ = cljs.core.first(arglist__41524);
    var children__31277__auto__ = cljs.core.rest(arglist__41524);
    return G__41522__delegate(props__31276__auto__, children__31277__auto__);
  };
  G__41522.cljs$core$IFn$_invoke$arity$variadic = G__41522__delegate;
  return G__41522;
}(), null, "spinner");
goog.provide("redditv.vimeo");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("redditv.player");
goog.require("redditv.events");
redditv.vimeo.regex_vimeo_url = /https?:\/\/vimeo.com\/([0-9]+)&?.*/;
redditv.vimeo.ex_vimeo_url = "https://vimeo.com/201783721";
redditv.vimeo.is_vimeo_url_QMARK_ = function redditv$vimeo$is_vimeo_url_QMARK_(url) {
  return cljs.core.boolean$.call(null, cljs.core.re_matches.call(null, redditv.vimeo.regex_vimeo_url, url));
};
redditv.vimeo.video_url__GT_video_id = function redditv$vimeo$video_url__GT_video_id(url) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, redditv.vimeo.regex_vimeo_url, url))) {
    return cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.vimeo.regex_vimeo_url, url));
  } else {
    return null;
  }
};
redditv.vimeo.VimeoPlayer = function(dom, context, video_url, event_channel, __meta, __extmap, __hash) {
  this.dom = dom;
  this.context = context;
  this.video_url = video_url;
  this.event_channel = event_channel;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__30718__auto__, k__30719__auto__) {
  var self__ = this;
  var this__30718__auto____$1 = this;
  return cljs.core._lookup.call(null, this__30718__auto____$1, k__30719__auto__, null);
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__30720__auto__, k39426, else__30721__auto__) {
  var self__ = this;
  var this__30720__auto____$1 = this;
  var G__39428 = k39426 instanceof cljs.core.Keyword ? k39426.fqn : null;
  switch(G__39428) {
    case "dom":
      return self__.dom;
      break;
    case "context":
      return self__.context;
      break;
    case "video-url":
      return self__.video_url;
      break;
    case "event-channel":
      return self__.event_channel;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k39426, else__30721__auto__);
  }
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__30732__auto__, writer__30733__auto__, opts__30734__auto__) {
  var self__ = this;
  var this__30732__auto____$1 = this;
  var pr_pair__30735__auto__ = function(this__30732__auto____$1) {
    return function(keyval__30736__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, cljs.core.pr_writer, "", " ", "", opts__30734__auto__, keyval__30736__auto__);
    };
  }(this__30732__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, pr_pair__30735__auto__, "#redditv.vimeo.VimeoPlayer{", ", ", "}", opts__30734__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dom", "dom", -1236537922), self__.dom], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "context", "context", -830191113), self__.context], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), self__.video_url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), self__.event_channel], null)], null), self__.__extmap));
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__39425) {
  var self__ = this;
  var G__39425__$1 = this;
  return new cljs.core.RecordIter(0, G__39425__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dom", "dom", -1236537922), new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__30716__auto__) {
  var self__ = this;
  var this__30716__auto____$1 = this;
  return self__.__meta;
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__30712__auto__) {
  var self__ = this;
  var this__30712__auto____$1 = this;
  return new redditv.vimeo.VimeoPlayer(self__.dom, self__.context, self__.video_url, self__.event_channel, self__.__meta, self__.__extmap, self__.__hash);
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__30722__auto__) {
  var self__ = this;
  var this__30722__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__30713__auto__) {
  var self__ = this;
  var this__30713__auto____$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_imap.call(null, this__30713__auto____$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__30714__auto__, other__30715__auto__) {
  var self__ = this;
  var this__30714__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__30084__auto__ = other__30715__auto__;
    if (cljs.core.truth_(and__30084__auto__)) {
      var and__30084__auto____$1 = this__30714__auto____$1.constructor === other__30715__auto__.constructor;
      if (and__30084__auto____$1) {
        return cljs.core.equiv_map.call(null, this__30714__auto____$1, other__30715__auto__);
      } else {
        return and__30084__auto____$1;
      }
    } else {
      return and__30084__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
redditv.vimeo.VimeoPlayer.prototype.redditv$player$IPlayer$ = cljs.core.PROTOCOL_SENTINEL;
redditv.vimeo.VimeoPlayer.prototype.redditv$player$IPlayer$play$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.vimeo.VimeoPlayer.prototype.redditv$player$IPlayer$pause$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.vimeo.VimeoPlayer.prototype.redditv$player$IPlayer$fullscreen$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.vimeo.VimeoPlayer.prototype.redditv$player$IPlayer$dispose$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.dom.remove();
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__30727__auto__, k__30728__auto__) {
  var self__ = this;
  var this__30727__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), null, new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), null, new cljs.core.Keyword(null, "context", "context", -830191113), null, new cljs.core.Keyword(null, "dom", "dom", -1236537922), null], null), null), k__30728__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__30727__auto____$1), self__.__meta), k__30728__auto__);
  } else {
    return new redditv.vimeo.VimeoPlayer(self__.dom, self__.context, self__.video_url, self__.event_channel, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__30728__auto__)), null);
  }
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__30725__auto__, k__30726__auto__, G__39425) {
  var self__ = this;
  var this__30725__auto____$1 = this;
  var pred__39429 = cljs.core.keyword_identical_QMARK_;
  var expr__39430 = k__30726__auto__;
  if (cljs.core.truth_(pred__39429.call(null, new cljs.core.Keyword(null, "dom", "dom", -1236537922), expr__39430))) {
    return new redditv.vimeo.VimeoPlayer(G__39425, self__.context, self__.video_url, self__.event_channel, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__39429.call(null, new cljs.core.Keyword(null, "context", "context", -830191113), expr__39430))) {
      return new redditv.vimeo.VimeoPlayer(self__.dom, G__39425, self__.video_url, self__.event_channel, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__39429.call(null, new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), expr__39430))) {
        return new redditv.vimeo.VimeoPlayer(self__.dom, self__.context, G__39425, self__.event_channel, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__39429.call(null, new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), expr__39430))) {
          return new redditv.vimeo.VimeoPlayer(self__.dom, self__.context, self__.video_url, G__39425, self__.__meta, self__.__extmap, null);
        } else {
          return new redditv.vimeo.VimeoPlayer(self__.dom, self__.context, self__.video_url, self__.event_channel, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__30726__auto__, G__39425), null);
        }
      }
    }
  }
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__30730__auto__) {
  var self__ = this;
  var this__30730__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "dom", "dom", -1236537922), self__.dom], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113), self__.context], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), self__.video_url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), self__.event_channel], null)], null), self__.__extmap));
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__30717__auto__, G__39425) {
  var self__ = this;
  var this__30717__auto____$1 = this;
  return new redditv.vimeo.VimeoPlayer(self__.dom, self__.context, self__.video_url, self__.event_channel, G__39425, self__.__extmap, self__.__hash);
};
redditv.vimeo.VimeoPlayer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__30723__auto__, entry__30724__auto__) {
  var self__ = this;
  var this__30723__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__30724__auto__)) {
    return cljs.core._assoc.call(null, this__30723__auto____$1, cljs.core._nth.call(null, entry__30724__auto__, 0), cljs.core._nth.call(null, entry__30724__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__30723__auto____$1, entry__30724__auto__);
  }
};
redditv.vimeo.VimeoPlayer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "dom", "dom", 403993605, null), new cljs.core.Symbol(null, "context", "context", 810340414, null), new cljs.core.Symbol(null, "video-url", "video-url", -1018313069, null), new cljs.core.Symbol(null, "event-channel", "event-channel", -1438879655, null)], null);
};
redditv.vimeo.VimeoPlayer.cljs$lang$type = true;
redditv.vimeo.VimeoPlayer.cljs$lang$ctorPrSeq = function(this__30752__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "redditv.vimeo/VimeoPlayer");
};
redditv.vimeo.VimeoPlayer.cljs$lang$ctorPrWriter = function(this__30752__auto__, writer__30753__auto__) {
  return cljs.core._write.call(null, writer__30753__auto__, "redditv.vimeo/VimeoPlayer");
};
redditv.vimeo.__GT_VimeoPlayer = function redditv$vimeo$__GT_VimeoPlayer(dom, context, video_url, event_channel) {
  return new redditv.vimeo.VimeoPlayer(dom, context, video_url, event_channel, null, null, null);
};
redditv.vimeo.map__GT_VimeoPlayer = function redditv$vimeo$map__GT_VimeoPlayer(G__39427) {
  return new redditv.vimeo.VimeoPlayer((new cljs.core.Keyword(null, "dom", "dom", -1236537922)).cljs$core$IFn$_invoke$arity$1(G__39427), (new cljs.core.Keyword(null, "context", "context", -830191113)).cljs$core$IFn$_invoke$arity$1(G__39427), (new cljs.core.Keyword(null, "video-url", "video-url", 1636122700)).cljs$core$IFn$_invoke$arity$1(G__39427), (new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)).cljs$core$IFn$_invoke$arity$1(G__39427), null, cljs.core.dissoc.call(null, 
  G__39427, new cljs.core.Keyword(null, "dom", "dom", -1236537922), new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)), null);
};
redditv.vimeo.vimeo_iframe_id = "redditv-vimeo-player";
redditv.vimeo.create_vimeo_iframe = function redditv$vimeo$create_vimeo_iframe(dom_id, video_url, event_channel) {
  var iframe = document.createElement("iframe");
  var video_id = redditv.vimeo.video_url__GT_video_id.call(null, video_url);
  var src = [cljs.core.str("https://player.vimeo.com/video/"), cljs.core.str(video_id), cljs.core.str("?api\x3d1"), cljs.core.str("\x26player_id\x3d"), cljs.core.str(redditv.vimeo.vimeo_iframe_id)].join("");
  var target = document.getElementById(dom_id);
  var G__39434_39435 = iframe;
  G__39434_39435.setAttribute("id", redditv.vimeo.vimeo_iframe_id);
  G__39434_39435.setAttribute("src", src);
  G__39434_39435.setAttribute("width", "100%");
  G__39434_39435.setAttribute("height", "100%");
  G__39434_39435.setAttribute("frameborder", "0");
  G__39434_39435.setAttribute("webkiteallowfullscreen", true);
  G__39434_39435.setAttribute("mozallowfullscreen", true);
  G__39434_39435.setAttribute("allowfullscreen", true);
  iframe.addEventListener("error", function(iframe, video_id, src, target) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_not_started.call(null));
    };
  }(iframe, video_id, src, target));
  target.appendChild(iframe);
  return iframe;
};
redditv.vimeo.attach_vimeo_player = function redditv$vimeo$attach_vimeo_player() {
  var iframe = $([cljs.core.str("#"), cljs.core.str(redditv.vimeo.vimeo_iframe_id)].join(""))[0];
  var player = $f(iframe);
  return player;
};
redditv.vimeo.create_vimeo_player = function redditv$vimeo$create_vimeo_player(dom_id, video_url, event_channel) {
  var iframe = redditv.vimeo.create_vimeo_iframe.call(null, dom_id, video_url, event_channel);
  var player = redditv.vimeo.attach_vimeo_player.call(null);
  player.addEvent("ready", function(iframe, player) {
    return function() {
      player.addEvent("playing", function(iframe, player) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_playing.call(null));
        };
      }(iframe, player));
      player.addEvent("finish", function(iframe, player) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_ended.call(null));
        };
      }(iframe, player));
      player.addEvent("error", function(iframe, player) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_not_started.call(null));
        };
      }(iframe, player));
      return player.api("play");
    };
  }(iframe, player));
  return redditv.vimeo.__GT_VimeoPlayer.call(null, iframe, player, video_url, event_channel);
};
goog.exportSymbol("redditv.vimeo.create_vimeo_player", redditv.vimeo.create_vimeo_player);
goog.provide("goog.net.Jsonp");
goog.require("goog.Uri");
goog.require("goog.net.jsloader");
goog.net.Jsonp = function(uri, opt_callbackParamName) {
  this.uri_ = new goog.Uri(uri);
  this.callbackParamName_ = opt_callbackParamName ? opt_callbackParamName : "callback";
  this.timeout_ = 5E3;
  this.nonce_ = "";
};
goog.net.Jsonp.CALLBACKS = "_callbacks_";
goog.net.Jsonp.scriptCounter_ = 0;
goog.net.Jsonp.getCallbackId_ = function(id) {
  return goog.net.Jsonp.CALLBACKS + "__" + id;
};
goog.net.Jsonp.prototype.setRequestTimeout = function(timeout) {
  this.timeout_ = timeout;
};
goog.net.Jsonp.prototype.getRequestTimeout = function() {
  return this.timeout_;
};
goog.net.Jsonp.prototype.setNonce = function(nonce) {
  this.nonce_ = nonce;
};
goog.net.Jsonp.prototype.send = function(opt_payload, opt_replyCallback, opt_errorCallback, opt_callbackParamValue) {
  var payload = opt_payload || null;
  var id = opt_callbackParamValue || "_" + (goog.net.Jsonp.scriptCounter_++).toString(36) + goog.now().toString(36);
  var callbackId = goog.net.Jsonp.getCallbackId_(id);
  var uri = this.uri_.clone();
  if (payload) {
    goog.net.Jsonp.addPayloadToUri_(payload, uri);
  }
  if (opt_replyCallback) {
    var reply = goog.net.Jsonp.newReplyHandler_(id, opt_replyCallback);
    goog.global[callbackId] = reply;
    uri.setParameterValues(this.callbackParamName_, callbackId);
  }
  var options = {timeout:this.timeout_, cleanupWhenDone:true};
  if (this.nonce_) {
    options.attributes = {"nonce":this.nonce_};
  }
  var deferred = goog.net.jsloader.load(uri.toString(), options);
  var error = goog.net.Jsonp.newErrorHandler_(id, payload, opt_errorCallback);
  deferred.addErrback(error);
  return {id_:id, deferred_:deferred};
};
goog.net.Jsonp.prototype.cancel = function(request) {
  if (request) {
    if (request.deferred_) {
      request.deferred_.cancel();
    }
    if (request.id_) {
      goog.net.Jsonp.cleanup_(request.id_, false);
    }
  }
};
goog.net.Jsonp.newErrorHandler_ = function(id, payload, opt_errorCallback) {
  return function() {
    goog.net.Jsonp.cleanup_(id, false);
    if (opt_errorCallback) {
      opt_errorCallback(payload);
    }
  };
};
goog.net.Jsonp.newReplyHandler_ = function(id, replyCallback) {
  var handler = function(var_args) {
    goog.net.Jsonp.cleanup_(id, true);
    replyCallback.apply(undefined, arguments);
  };
  return handler;
};
goog.net.Jsonp.cleanup_ = function(id, deleteReplyHandler) {
  var callbackId = goog.net.Jsonp.getCallbackId_(id);
  if (goog.global[callbackId]) {
    if (deleteReplyHandler) {
      try {
        delete goog.global[callbackId];
      } catch (e) {
        goog.global[callbackId] = undefined;
      }
    } else {
      goog.global[callbackId] = goog.nullFunction;
    }
  }
};
goog.net.Jsonp.addPayloadToUri_ = function(payload, uri) {
  for (var name in payload) {
    if (!payload.hasOwnProperty || payload.hasOwnProperty(name)) {
      uri.setParameterValues(name, payload[name]);
    }
  }
  return uri;
};
goog.provide("redditv.jsonp");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.net.Jsonp");
goog.require("goog.Uri");
redditv.jsonp.send_jsonp = function redditv$jsonp$send_jsonp(url) {
  var success_channel = cljs.core.async.chan.call(null);
  var success_handler = function(success_channel) {
    return function(result) {
      if (!(result == null)) {
        return cljs.core.async.put_BANG_.call(null, success_channel, result);
      } else {
        return cljs.core.async.close_BANG_.call(null, success_channel);
      }
    };
  }(success_channel);
  var error_channel = cljs.core.async.chan.call(null);
  var error_handler = function(success_channel, success_handler, error_channel) {
    return function(result) {
      if (!(result == null)) {
        return cljs.core.async.put_BANG_.call(null, error_channel, result);
      } else {
        return cljs.core.async.close_BANG_.call(null, error_channel);
      }
    };
  }(success_channel, success_handler, error_channel);
  var jsonp = new goog.net.Jsonp(new goog.Uri(url), "jsonp");
  jsonp.send(null, success_handler, error_handler);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [success_channel, error_channel], null);
};
goog.provide("redditv.utils");
goog.require("cljs.core");
goog.require("clojure.string");
redditv.utils.dom_clear_children = function redditv$utils$dom_clear_children(div_id) {
  var dom = document.getElementById(div_id);
  return dom["innerHTML"] = "";
};
redditv.utils.positions = function redditv$utils$positions(pred, coll) {
  return cljs.core.keep_indexed.call(null, function(idx, x) {
    if (cljs.core.truth_(pred.call(null, x))) {
      return idx;
    } else {
      return null;
    }
  }, coll);
};
redditv.utils.next_element = function redditv$utils$next_element(xs, x) {
  var title = (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(x);
  var playlist_titles = cljs.core.map.call(null, function(title) {
    return function(p1__39489_SHARP_) {
      return (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(p1__39489_SHARP_);
    };
  }(title), xs);
  var i = cljs.core.first.call(null, redditv.utils.positions.call(null, cljs.core.PersistentHashSet.fromArray([title], true), playlist_titles));
  if (i == null) {
    cljs.core.println.call(null, "Failed to find element, grabbing first");
    return cljs.core.first.call(null, xs);
  } else {
    return cljs.core.nth.call(null, cljs.core.cycle.call(null, xs), i + 1);
  }
};
redditv.utils.prev_element = function redditv$utils$prev_element(xs, x) {
  var title = (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(x);
  var playlist_titles = cljs.core.map.call(null, function(title) {
    return function(p1__39490_SHARP_) {
      return (new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(p1__39490_SHARP_);
    };
  }(title), xs);
  var i = cljs.core.first.call(null, redditv.utils.positions.call(null, cljs.core.PersistentHashSet.fromArray([title], true), playlist_titles));
  if (i == null || cljs.core._EQ_.call(null, i, 0)) {
    return cljs.core.first.call(null, xs);
  } else {
    return cljs.core.nth.call(null, cljs.core.cycle.call(null, xs), i - 1);
  }
};
redditv.utils.remove_empty_values = function redditv$utils$remove_empty_values(xs) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p__39495) {
    var vec__39496 = p__39495;
    var _ = cljs.core.nth.call(null, vec__39496, 0, null);
    var v = cljs.core.nth.call(null, vec__39496, 1, null);
    return !(v == null);
  }, xs));
};
redditv.utils.gen_query_params = function redditv$utils$gen_query_params(params) {
  var query_string = cljs.core.apply.call(null, cljs.core.str, "?", cljs.core.interpose.call(null, "\x26", cljs.core.map.call(null, function(p__39503) {
    var vec__39504 = p__39503;
    var k = cljs.core.nth.call(null, vec__39504, 0, null);
    var v = cljs.core.nth.call(null, vec__39504, 1, null);
    return [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(v)].join("");
  }, redditv.utils.remove_empty_values.call(null, params))));
  if (!cljs.core._EQ_.call(null, query_string, "?")) {
    return query_string;
  } else {
    return "";
  }
};
redditv.utils.align_to_root_left = function redditv$utils$align_to_root_left(root, child) {
  var child_offset_left = child.offsetLeft;
  return root["scrollLeft"] = child_offset_left;
};
redditv.utils.clear_scroll = function redditv$utils$clear_scroll(root) {
  return root["scrollLeft"] = 0;
};
redditv.utils.regex_number_QMARK_ = /[0-9]+/;
redditv.utils.numstring_QMARK_ = function redditv$utils$numstring_QMARK_(s) {
  if (typeof s === "string") {
    return cljs.core.boolean$.call(null, cljs.core.re_matches.call(null, redditv.utils.regex_number_QMARK_, s));
  } else {
    return false;
  }
};
redditv.utils.parse_int = function redditv$utils$parse_int(s) {
  if (typeof s === "string") {
    return window.parseInt(s);
  } else {
    return 0;
  }
};
redditv.utils.parse_bool = function redditv$utils$parse_bool(s) {
  var s__$1 = clojure.string.lower_case.call(null, s);
  if (cljs.core._EQ_.call(null, s__$1, "true")) {
    return true;
  } else {
    if (cljs.core._EQ_.call(null, s__$1, "false")) {
      return false;
    } else {
      return false;
    }
  }
};
redditv.utils.set_hash_BANG_ = function redditv$utils$set_hash_BANG_(v) {
  return window["location"]["hash"] = v;
};
redditv.utils.force_app_reload_BANG_ = function redditv$utils$force_app_reload_BANG_(app_state) {
  return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "initial-load?", "initial-load?", 2130265181)], null), cljs.core.inc);
};
redditv.utils.app_hash = function redditv$utils$app_hash(app_state) {
  var map__39509 = cljs.core.deref.call(null, app_state);
  var map__39509__$1 = (!(map__39509 == null) ? map__39509.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39509.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39509) : map__39509;
  var subreddit = cljs.core.get.call(null, map__39509__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
  var playlist_selected_index = cljs.core.get.call(null, map__39509__$1, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961));
  var playlist = cljs.core.get.call(null, map__39509__$1, new cljs.core.Keyword(null, "playlist", "playlist", 1952276871));
  var settings_video_category = cljs.core.get.call(null, map__39509__$1, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518));
  var settings_video_count = cljs.core.get.call(null, map__39509__$1, new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692));
  var fullscreen = cljs.core.get.call(null, map__39509__$1, new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054));
  var settings_show_nsfw = cljs.core.get.call(null, map__39509__$1, new cljs.core.Keyword(null, "settings-show-nsfw", "settings-show-nsfw", -1673123951));
  return [cljs.core.str("/r/"), cljs.core.str(subreddit), cljs.core.str("/"), cljs.core.str(playlist_selected_index), cljs.core.str(redditv.utils.gen_query_params.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "sort", "sort", 953465918), cljs.core.not_EQ_.call(null, settings_video_category, "hot") ? settings_video_category : null, new cljs.core.Keyword(null, "count", "count", 2139924085), cljs.core.not_EQ_.call(null, settings_video_count, 100) ? settings_video_count : 
  null, new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054), cljs.core.not_EQ_.call(null, fullscreen, false) ? fullscreen : null, new cljs.core.Keyword(null, "nsfw", "nsfw", -1730579216), cljs.core.not_EQ_.call(null, settings_show_nsfw, true) ? settings_show_nsfw : null], null)))].join("");
};
redditv.utils.open_link_external_window = function redditv$utils$open_link_external_window(link) {
  return window.open(link, "_blank");
};
redditv.utils.open_reddit_comment = function redditv$utils$open_reddit_comment(p__39511) {
  var map__39514 = p__39511;
  var map__39514__$1 = (!(map__39514 == null) ? map__39514.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39514.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39514) : map__39514;
  var video = map__39514__$1;
  var permalink = cljs.core.get.call(null, map__39514__$1, new cljs.core.Keyword(null, "permalink", "permalink", 1009167849));
  return redditv.utils.open_link_external_window.call(null, [cljs.core.str("http://www.reddit.com"), cljs.core.str(permalink)].join(""));
};
redditv.utils.query_in_focus_QMARK_ = function redditv$utils$query_in_focus_QMARK_(selector) {
  var temp__4655__auto__ = document.querySelector(selector);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var elem = temp__4655__auto__;
    return cljs.core._EQ_.call(null, document.activeElement, elem);
  } else {
    return false;
  }
};
redditv.utils.decode_html_string = function redditv$utils$decode_html_string(s) {
  var parser = new DOMParser;
  var html_string = [cljs.core.str("\x3c!doctype html\x3e\x3cbody\x3e"), cljs.core.str(s)].join("");
  var decoded_string = parser.parseFromString(html_string, "text/html");
  return decoded_string["body"]["textContent"];
};
redditv.utils.set_loading_animation_BANG_ = function redditv$utils$set_loading_animation_BANG_(app_state, x) {
  return cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "loading?", "loading?", 1905707049)], null), x);
};
redditv.utils.app_css_class_layout = function redditv$utils$app_css_class_layout(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___39522 = arguments.length;
  var i__31205__auto___39523 = 0;
  while (true) {
    if (i__31205__auto___39523 < len__31204__auto___39522) {
      args__31211__auto__.push(arguments[i__31205__auto___39523]);
      var G__39524 = i__31205__auto___39523 + 1;
      i__31205__auto___39523 = G__39524;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 2 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(2), 0, null) : null;
  return redditv.utils.app_css_class_layout.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__31212__auto__);
};
redditv.utils.app_css_class_layout.cljs$core$IFn$_invoke$arity$variadic = function(app_state, class_name, p__39519) {
  var map__39520 = p__39519;
  var map__39520__$1 = (!(map__39520 == null) ? map__39520.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39520.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39520) : map__39520;
  var compressed_QMARK_ = cljs.core.get.call(null, map__39520__$1, new cljs.core.Keyword(null, "compressed?", "compressed?", 140944391), true);
  var fullscreen_QMARK_ = cljs.core.get.call(null, map__39520__$1, new cljs.core.Keyword(null, "fullscreen?", "fullscreen?", -1171717820), true);
  var class_name__$1 = class_name instanceof cljs.core.Keyword ? cljs.core.name.call(null, class_name) : typeof class_name === "string" ? [cljs.core.str(class_name)].join("") : null;
  if (cljs.core.truth_(function() {
    var and__30084__auto__ = fullscreen_QMARK_;
    if (cljs.core.truth_(and__30084__auto__)) {
      return (new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state));
    } else {
      return and__30084__auto__;
    }
  }())) {
    return cljs.core.keyword.call(null, [cljs.core.str(class_name__$1), cljs.core.str("-fullscreen")].join(""));
  } else {
    if (cljs.core.truth_(function() {
      var and__30084__auto__ = compressed_QMARK_;
      if (cljs.core.truth_(and__30084__auto__)) {
        return cljs.core.not.call(null, (new cljs.core.Keyword(null, "show-playlist", "show-playlist", -1969029604)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state)));
      } else {
        return and__30084__auto__;
      }
    }())) {
      return cljs.core.keyword.call(null, [cljs.core.str(class_name__$1), cljs.core.str("-compressed")].join(""));
    } else {
      return cljs.core.keyword.call(null, class_name__$1);
    }
  }
};
redditv.utils.app_css_class_layout.cljs$lang$maxFixedArity = 2;
redditv.utils.app_css_class_layout.cljs$lang$applyTo = function(seq39516) {
  var G__39517 = cljs.core.first.call(null, seq39516);
  var seq39516__$1 = cljs.core.next.call(null, seq39516);
  var G__39518 = cljs.core.first.call(null, seq39516__$1);
  var seq39516__$2 = cljs.core.next.call(null, seq39516__$1);
  return redditv.utils.app_css_class_layout.cljs$core$IFn$_invoke$arity$variadic(G__39517, G__39518, seq39516__$2);
};
goog.provide("redditv.youtube");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("redditv.utils");
goog.require("redditv.player");
goog.require("redditv.events");
redditv.youtube.test_url = "https://youtube.com/watch?v\x3dzB4I68XVPzQ";
redditv.youtube.regex_youtube_url = /^https?:\/\/w{0,3}\.?youtube\.com\/.*?v=([a-zA-Z0-9_-]+)&?.*/;
redditv.youtube.regex_youtube_shortened_url = /^https?:\/\/youtu\.be\/([a-zA-Z0-9_-]+)\??.*/;
redditv.youtube.video_url__GT_video_id = function redditv$youtube$video_url__GT_video_id(url) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, redditv.youtube.regex_youtube_url, url))) {
    return cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.youtube.regex_youtube_url, url));
  } else {
    if (cljs.core.truth_(cljs.core.re_matches.call(null, redditv.youtube.regex_youtube_shortened_url, url))) {
      return cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.youtube.regex_youtube_shortened_url, url));
    } else {
      return null;
    }
  }
};
redditv.youtube.video_url__GT_video_id.call(null, redditv.youtube.test_url);
redditv.youtube.regex_youtube_starttime = /^https?:\/\/.*t=([0-9smh]+)&?.*/;
redditv.youtube.video_url__GT_start_time = function redditv$youtube$video_url__GT_start_time(url) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, redditv.youtube.regex_youtube_starttime, url))) {
    return cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.youtube.regex_youtube_starttime, url));
  } else {
    return "0";
  }
};
redditv.youtube.regex_hours = /.*?([0-9]+)h.*/;
redditv.youtube.regex_minutes = /.*?([0-9]+)m.*/;
redditv.youtube.regex_seconds = /.*?([0-9]+)s.*/;
redditv.youtube.regex_number_QMARK_ = /[0-9]+/;
redditv.youtube.start_time__GT_seconds = function redditv$youtube$start_time__GT_seconds(time_string) {
  if (cljs.core.not.call(null, redditv.utils.numstring_QMARK_.call(null, time_string))) {
    var hours = redditv.utils.parse_int.call(null, cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.youtube.regex_hours, time_string)));
    var minutes = redditv.utils.parse_int.call(null, cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.youtube.regex_minutes, time_string)));
    var seconds = redditv.utils.parse_int.call(null, cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.youtube.regex_seconds, time_string)));
    return hours * 3600 + minutes * 60 + seconds;
  } else {
    return redditv.utils.parse_int.call(null, time_string);
  }
};
redditv.youtube.video_url__GT_seconds = function redditv$youtube$video_url__GT_seconds(url) {
  return redditv.youtube.start_time__GT_seconds.call(null, redditv.youtube.video_url__GT_start_time.call(null, url));
};
redditv.youtube.is_youtube_url_QMARK_ = function redditv$youtube$is_youtube_url_QMARK_(url) {
  return cljs.core.boolean$.call(null, function() {
    var or__30096__auto__ = cljs.core.re_matches.call(null, redditv.youtube.regex_youtube_url, url);
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return cljs.core.re_matches.call(null, redditv.youtube.regex_youtube_shortened_url, url);
    }
  }());
};
redditv.youtube.is_youtube_url_QMARK_.call(null, redditv.youtube.test_url);
redditv.youtube.YoutubePlayer = function(context, video_url, event_channel, __meta, __extmap, __hash) {
  this.context = context;
  this.video_url = video_url;
  this.event_channel = event_channel;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__30718__auto__, k__30719__auto__) {
  var self__ = this;
  var this__30718__auto____$1 = this;
  return cljs.core._lookup.call(null, this__30718__auto____$1, k__30719__auto__, null);
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__30720__auto__, k39528, else__30721__auto__) {
  var self__ = this;
  var this__30720__auto____$1 = this;
  var G__39530 = k39528 instanceof cljs.core.Keyword ? k39528.fqn : null;
  switch(G__39530) {
    case "context":
      return self__.context;
      break;
    case "video-url":
      return self__.video_url;
      break;
    case "event-channel":
      return self__.event_channel;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k39528, else__30721__auto__);
  }
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__30732__auto__, writer__30733__auto__, opts__30734__auto__) {
  var self__ = this;
  var this__30732__auto____$1 = this;
  var pr_pair__30735__auto__ = function(this__30732__auto____$1) {
    return function(keyval__30736__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, cljs.core.pr_writer, "", " ", "", opts__30734__auto__, keyval__30736__auto__);
    };
  }(this__30732__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__30733__auto__, pr_pair__30735__auto__, "#redditv.youtube.YoutubePlayer{", ", ", "}", opts__30734__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113), self__.context], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), self__.video_url], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), self__.event_channel], null)], null), self__.__extmap));
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$IIterable$ = cljs.core.PROTOCOL_SENTINEL;
redditv.youtube.YoutubePlayer.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__39527) {
  var self__ = this;
  var G__39527__$1 = this;
  return new cljs.core.RecordIter(0, G__39527__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__30716__auto__) {
  var self__ = this;
  var this__30716__auto____$1 = this;
  return self__.__meta;
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__30712__auto__) {
  var self__ = this;
  var this__30712__auto____$1 = this;
  return new redditv.youtube.YoutubePlayer(self__.context, self__.video_url, self__.event_channel, self__.__meta, self__.__extmap, self__.__hash);
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__30722__auto__) {
  var self__ = this;
  var this__30722__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__30713__auto__) {
  var self__ = this;
  var this__30713__auto____$1 = this;
  var h__30531__auto__ = self__.__hash;
  if (!(h__30531__auto__ == null)) {
    return h__30531__auto__;
  } else {
    var h__30531__auto____$1 = cljs.core.hash_imap.call(null, this__30713__auto____$1);
    self__.__hash = h__30531__auto____$1;
    return h__30531__auto____$1;
  }
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__30714__auto__, other__30715__auto__) {
  var self__ = this;
  var this__30714__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__30084__auto__ = other__30715__auto__;
    if (cljs.core.truth_(and__30084__auto__)) {
      var and__30084__auto____$1 = this__30714__auto____$1.constructor === other__30715__auto__.constructor;
      if (and__30084__auto____$1) {
        return cljs.core.equiv_map.call(null, this__30714__auto____$1, other__30715__auto__);
      } else {
        return and__30084__auto____$1;
      }
    } else {
      return and__30084__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
redditv.youtube.YoutubePlayer.prototype.redditv$player$IPlayer$ = cljs.core.PROTOCOL_SENTINEL;
redditv.youtube.YoutubePlayer.prototype.redditv$player$IPlayer$play$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.youtube.YoutubePlayer.prototype.redditv$player$IPlayer$pause$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.youtube.YoutubePlayer.prototype.redditv$player$IPlayer$fullscreen$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
redditv.youtube.YoutubePlayer.prototype.redditv$player$IPlayer$dispose$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.context.destroy();
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__30727__auto__, k__30728__auto__) {
  var self__ = this;
  var this__30727__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), null, new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), null, new cljs.core.Keyword(null, "context", "context", -830191113), null], null), null), k__30728__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__30727__auto____$1), self__.__meta), k__30728__auto__);
  } else {
    return new redditv.youtube.YoutubePlayer(self__.context, self__.video_url, self__.event_channel, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__30728__auto__)), null);
  }
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__30725__auto__, k__30726__auto__, G__39527) {
  var self__ = this;
  var this__30725__auto____$1 = this;
  var pred__39531 = cljs.core.keyword_identical_QMARK_;
  var expr__39532 = k__30726__auto__;
  if (cljs.core.truth_(pred__39531.call(null, new cljs.core.Keyword(null, "context", "context", -830191113), expr__39532))) {
    return new redditv.youtube.YoutubePlayer(G__39527, self__.video_url, self__.event_channel, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__39531.call(null, new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), expr__39532))) {
      return new redditv.youtube.YoutubePlayer(self__.context, G__39527, self__.event_channel, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__39531.call(null, new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), expr__39532))) {
        return new redditv.youtube.YoutubePlayer(self__.context, self__.video_url, G__39527, self__.__meta, self__.__extmap, null);
      } else {
        return new redditv.youtube.YoutubePlayer(self__.context, self__.video_url, self__.event_channel, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__30726__auto__, G__39527), null);
      }
    }
  }
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__30730__auto__) {
  var self__ = this;
  var this__30730__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "context", "context", -830191113), self__.context], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "video-url", "video-url", 1636122700), self__.video_url], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114), self__.event_channel], null)], null), self__.__extmap));
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__30717__auto__, G__39527) {
  var self__ = this;
  var this__30717__auto____$1 = this;
  return new redditv.youtube.YoutubePlayer(self__.context, self__.video_url, self__.event_channel, G__39527, self__.__extmap, self__.__hash);
};
redditv.youtube.YoutubePlayer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__30723__auto__, entry__30724__auto__) {
  var self__ = this;
  var this__30723__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__30724__auto__)) {
    return cljs.core._assoc.call(null, this__30723__auto____$1, cljs.core._nth.call(null, entry__30724__auto__, 0), cljs.core._nth.call(null, entry__30724__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__30723__auto____$1, entry__30724__auto__);
  }
};
redditv.youtube.YoutubePlayer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "context", "context", 810340414, null), new cljs.core.Symbol(null, "video-url", "video-url", -1018313069, null), new cljs.core.Symbol(null, "event-channel", "event-channel", -1438879655, null)], null);
};
redditv.youtube.YoutubePlayer.cljs$lang$type = true;
redditv.youtube.YoutubePlayer.cljs$lang$ctorPrSeq = function(this__30752__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "redditv.youtube/YoutubePlayer");
};
redditv.youtube.YoutubePlayer.cljs$lang$ctorPrWriter = function(this__30752__auto__, writer__30753__auto__) {
  return cljs.core._write.call(null, writer__30753__auto__, "redditv.youtube/YoutubePlayer");
};
redditv.youtube.__GT_YoutubePlayer = function redditv$youtube$__GT_YoutubePlayer(context, video_url, event_channel) {
  return new redditv.youtube.YoutubePlayer(context, video_url, event_channel, null, null, null);
};
redditv.youtube.map__GT_YoutubePlayer = function redditv$youtube$map__GT_YoutubePlayer(G__39529) {
  return new redditv.youtube.YoutubePlayer((new cljs.core.Keyword(null, "context", "context", -830191113)).cljs$core$IFn$_invoke$arity$1(G__39529), (new cljs.core.Keyword(null, "video-url", "video-url", 1636122700)).cljs$core$IFn$_invoke$arity$1(G__39529), (new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)).cljs$core$IFn$_invoke$arity$1(G__39529), null, cljs.core.dissoc.call(null, G__39529, new cljs.core.Keyword(null, "context", "context", -830191113), new cljs.core.Keyword(null, 
  "video-url", "video-url", 1636122700), new cljs.core.Keyword(null, "event-channel", "event-channel", 1215556114)), null);
};
redditv.youtube.create_youtubeplayer = function redditv$youtube$create_youtubeplayer(dom_id, video_url, event_channel) {
  var context = new YT.Player(dom_id, {"videoId":redditv.youtube.video_url__GT_video_id.call(null, video_url), "playerVars":{"autoplay":1, "start":redditv.youtube.video_url__GT_seconds.call(null, video_url)}, "width":"100%", "height":"100%", "events":{"onStateChange":function(event) {
    var video_state = event.data;
    var G__39536 = video_state;
    switch(G__39536) {
      case -1:
        return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_not_started.call(null));
        break;
      case 0:
        return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_ended.call(null));
        break;
      case 1:
        return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_playing.call(null));
        break;
      case 2:
        return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_paused.call(null));
        break;
      case 3:
        return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_buffering.call(null));
        break;
      case 5:
        return cljs.core.async.put_BANG_.call(null, event_channel, redditv.events.player_cued.call(null));
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(video_state)].join(""));;
    }
  }}});
  return redditv.youtube.__GT_YoutubePlayer.call(null, context, video_url, event_channel);
};
goog.exportSymbol("redditv.youtube.create_youtubeplayer", redditv.youtube.create_youtubeplayer);
goog.provide("redditv.reddit");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("redditv.jsonp");
goog.require("redditv.youtube");
goog.require("redditv.vimeo");
goog.require("redditv.utils");
redditv.reddit.reddit_url = "https://www.reddit.com";
redditv.reddit.generate_url = function redditv$reddit$generate_url(subreddit, p__39540) {
  var map__39546 = p__39540;
  var map__39546__$1 = (!(map__39546 == null) ? map__39546.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39546.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39546) : map__39546;
  var limit = cljs.core.get.call(null, map__39546__$1, new cljs.core.Keyword(null, "limit", "limit", -1355822363), 100);
  var category = cljs.core.get.call(null, map__39546__$1, new cljs.core.Keyword(null, "category", "category", -593092832), "hot");
  var base_url = [cljs.core.str(redditv.reddit.reddit_url), cljs.core.str("/r/"), cljs.core.str(subreddit)].join("");
  var link_categories = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["hot", null, "new", null, "rising", null], null), null);
  var vec__39548 = clojure.string.split.call(null, category, /_/);
  var sort = cljs.core.nth.call(null, vec__39548, 0, null);
  var time = cljs.core.nth.call(null, vec__39548, 1, null);
  if (cljs.core.truth_(link_categories.call(null, category))) {
    return [cljs.core.str(base_url), cljs.core.str("/"), cljs.core.str(sort), cljs.core.str("/.json"), cljs.core.str(redditv.utils.gen_query_params.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "limit", "limit", -1355822363), limit], null)))].join("");
  } else {
    return [cljs.core.str(base_url), cljs.core.str("/"), cljs.core.str(sort), cljs.core.str("/.json"), cljs.core.str(redditv.utils.gen_query_params.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "limit", "limit", -1355822363), limit, new cljs.core.Keyword(null, "sort", "sort", 953465918), sort, new cljs.core.Keyword(null, "t", "t", -1397832519), time], null)))].join("");
  }
};
redditv.reddit.get_subreddit_posts = function redditv$reddit$get_subreddit_posts(subreddit, opts) {
  var output_channel = cljs.core.async.chan.call(null);
  var url = redditv.reddit.generate_url.call(null, subreddit, opts);
  var vec__39574 = redditv.jsonp.send_jsonp.call(null, url);
  var success_channel = cljs.core.nth.call(null, vec__39574, 0, null);
  var error_channel = cljs.core.nth.call(null, vec__39574, 1, null);
  var c__36538__auto___39596 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___39596, output_channel, url, vec__39574, success_channel, error_channel) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___39596, output_channel, url, vec__39574, success_channel, error_channel) {
          return function(state_39587) {
            var state_val_39588 = state_39587[1];
            if (state_val_39588 === 1) {
              var state_39587__$1 = state_39587;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39587__$1, 2, success_channel);
            } else {
              if (state_val_39588 === 2) {
                var inst_39578 = state_39587[2];
                var inst_39579 = cljs.core.js__GT_clj.call(null, inst_39578, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
                var inst_39580 = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(inst_39579);
                var inst_39581 = (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(inst_39580);
                var inst_39582 = cljs.core.vec.call(null, inst_39581);
                var inst_39583 = function() {
                  var result = inst_39579;
                  var data = inst_39582;
                  return function(result, data, inst_39578, inst_39579, inst_39580, inst_39581, inst_39582, state_val_39588, c__36538__auto___39596, output_channel, url, vec__39574, success_channel, error_channel) {
                    return function(p1__39551_SHARP_) {
                      return (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(p1__39551_SHARP_);
                    };
                  }(result, data, inst_39578, inst_39579, inst_39580, inst_39581, inst_39582, state_val_39588, c__36538__auto___39596, output_channel, url, vec__39574, success_channel, error_channel);
                }();
                var inst_39584 = cljs.core.map.call(null, inst_39583, inst_39582);
                var inst_39585 = cljs.core.async.put_BANG_.call(null, output_channel, inst_39584);
                var state_39587__$1 = state_39587;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39587__$1, inst_39585);
              } else {
                return null;
              }
            }
          };
        }(c__36538__auto___39596, output_channel, url, vec__39574, success_channel, error_channel);
        return function(switch__36426__auto__, c__36538__auto___39596, output_channel, url, vec__39574, success_channel, error_channel) {
          return function() {
            var redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto__ = null;
            var redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto____0 = function() {
              var statearr_39592 = [null, null, null, null, null, null, null];
              statearr_39592[0] = redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto__;
              statearr_39592[1] = 1;
              return statearr_39592;
            };
            var redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto____1 = function(state_39587) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39587);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39593) {
                    if (e39593 instanceof Object) {
                      var ex__36430__auto__ = e39593;
                      var statearr_39594_39597 = state_39587;
                      statearr_39594_39597[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39587);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39593;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39598 = state_39587;
                  state_39587 = G__39598;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto__ = function(state_39587) {
              switch(arguments.length) {
                case 0:
                  return redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto____0.call(this);
                case 1:
                  return redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto____1.call(this, state_39587);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto____0;
            redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto____1;
            return redditv$reddit$get_subreddit_posts_$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___39596, output_channel, url, vec__39574, success_channel, error_channel);
      }();
      var state__36540__auto__ = function() {
        var statearr_39595 = f__36539__auto__.call(null);
        statearr_39595[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___39596;
        return statearr_39595;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___39596, output_channel, url, vec__39574, success_channel, error_channel));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [output_channel, error_channel], null);
};
redditv.reddit.post_is_video_QMARK_ = function redditv$reddit$post_is_video_QMARK_(post) {
  var or__30096__auto__ = redditv.youtube.is_youtube_url_QMARK_.call(null, post.call(null, new cljs.core.Keyword(null, "url", "url", 276297046)));
  if (cljs.core.truth_(or__30096__auto__)) {
    return or__30096__auto__;
  } else {
    return redditv.vimeo.is_vimeo_url_QMARK_.call(null, post.call(null, new cljs.core.Keyword(null, "url", "url", 276297046)));
  }
};
redditv.reddit.post_is_nsfw_QMARK_ = function redditv$reddit$post_is_nsfw_QMARK_(post) {
  return (new cljs.core.Keyword(null, "over_18", "over_18", -543032440)).cljs$core$IFn$_invoke$arity$1(post);
};
redditv.reddit.get_subreddit_videos = function redditv$reddit$get_subreddit_videos(subreddit, opts) {
  var map__39630 = opts;
  var map__39630__$1 = (!(map__39630 == null) ? map__39630.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39630.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39630) : map__39630;
  var allow_nsfw_QMARK_ = cljs.core.get.call(null, map__39630__$1, new cljs.core.Keyword(null, "allow-nsfw?", "allow-nsfw?", -265554186));
  var output_channel = cljs.core.async.chan.call(null);
  var vec__39631 = redditv.reddit.get_subreddit_posts.call(null, subreddit, opts);
  var success_channel = cljs.core.nth.call(null, vec__39631, 0, null);
  var error_channel = cljs.core.nth.call(null, vec__39631, 1, null);
  var c__36538__auto___39661 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___39661, map__39630, map__39630__$1, allow_nsfw_QMARK_, output_channel, vec__39631, success_channel, error_channel) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___39661, map__39630, map__39630__$1, allow_nsfw_QMARK_, output_channel, vec__39631, success_channel, error_channel) {
          return function(state_39647) {
            var state_val_39648 = state_39647[1];
            if (state_val_39648 === 1) {
              var state_39647__$1 = state_39647;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39647__$1, 2, success_channel);
            } else {
              if (state_val_39648 === 2) {
                var inst_39636 = state_39647[2];
                var inst_39637 = cljs.core.filterv.call(null, redditv.reddit.post_is_video_QMARK_, inst_39636);
                var inst_39638 = cljs.core.not.call(null, allow_nsfw_QMARK_);
                var state_39647__$1 = function() {
                  var statearr_39649 = state_39647;
                  statearr_39649[7] = inst_39637;
                  return statearr_39649;
                }();
                if (inst_39638) {
                  var statearr_39650_39662 = state_39647__$1;
                  statearr_39650_39662[1] = 3;
                } else {
                  var statearr_39651_39663 = state_39647__$1;
                  statearr_39651_39663[1] = 4;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_39648 === 3) {
                  var inst_39637 = state_39647[7];
                  var inst_39640 = cljs.core.complement.call(null, redditv.reddit.post_is_nsfw_QMARK_);
                  var inst_39641 = cljs.core.filterv.call(null, inst_39640, inst_39637);
                  var state_39647__$1 = state_39647;
                  var statearr_39652_39664 = state_39647__$1;
                  statearr_39652_39664[2] = inst_39641;
                  statearr_39652_39664[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_39648 === 4) {
                    var inst_39637 = state_39647[7];
                    var state_39647__$1 = state_39647;
                    var statearr_39653_39665 = state_39647__$1;
                    statearr_39653_39665[2] = inst_39637;
                    statearr_39653_39665[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_39648 === 5) {
                      var inst_39644 = state_39647[2];
                      var inst_39645 = cljs.core.async.put_BANG_.call(null, output_channel, inst_39644);
                      var state_39647__$1 = state_39647;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39647__$1, inst_39645);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___39661, map__39630, map__39630__$1, allow_nsfw_QMARK_, output_channel, vec__39631, success_channel, error_channel);
        return function(switch__36426__auto__, c__36538__auto___39661, map__39630, map__39630__$1, allow_nsfw_QMARK_, output_channel, vec__39631, success_channel, error_channel) {
          return function() {
            var redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto__ = null;
            var redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto____0 = function() {
              var statearr_39657 = [null, null, null, null, null, null, null, null];
              statearr_39657[0] = redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto__;
              statearr_39657[1] = 1;
              return statearr_39657;
            };
            var redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto____1 = function(state_39647) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39647);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39658) {
                    if (e39658 instanceof Object) {
                      var ex__36430__auto__ = e39658;
                      var statearr_39659_39666 = state_39647;
                      statearr_39659_39666[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39647);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39658;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39667 = state_39647;
                  state_39647 = G__39667;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto__ = function(state_39647) {
              switch(arguments.length) {
                case 0:
                  return redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto____0.call(this);
                case 1:
                  return redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto____1.call(this, state_39647);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto____0;
            redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto____1;
            return redditv$reddit$get_subreddit_videos_$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___39661, map__39630, map__39630__$1, allow_nsfw_QMARK_, output_channel, vec__39631, success_channel, error_channel);
      }();
      var state__36540__auto__ = function() {
        var statearr_39660 = f__36539__auto__.call(null);
        statearr_39660[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___39661;
        return statearr_39660;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___39661, map__39630, map__39630__$1, allow_nsfw_QMARK_, output_channel, vec__39631, success_channel, error_channel));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [output_channel, error_channel], null);
};
redditv.reddit.get_subreddit_post_by_id = function redditv$reddit$get_subreddit_post_by_id(id) {
  var output_channel = cljs.core.async.chan.call(null);
  var url = [cljs.core.str(redditv.reddit.reddit_url), cljs.core.str("/comments/"), cljs.core.str(id), cljs.core.str("/.json")].join("");
  var vec__39700 = redditv.jsonp.send_jsonp.call(null, url);
  var success_channel = cljs.core.nth.call(null, vec__39700, 0, null);
  var error_channel = cljs.core.nth.call(null, vec__39700, 1, null);
  var c__36538__auto___39732 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___39732, output_channel, url, vec__39700, success_channel, error_channel) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___39732, output_channel, url, vec__39700, success_channel, error_channel) {
          return function(state_39718) {
            var state_val_39719 = state_39718[1];
            if (state_val_39719 === 1) {
              var state_39718__$1 = state_39718;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39718__$1, 2, success_channel);
            } else {
              if (state_val_39719 === 2) {
                var inst_39710 = state_39718[7];
                var inst_39704 = state_39718[2];
                var inst_39705 = cljs.core.js__GT_clj.call(null, inst_39704, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
                var inst_39706 = cljs.core.first.call(null, inst_39705);
                var inst_39707 = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(inst_39706);
                var inst_39708 = (new cljs.core.Keyword(null, "children", "children", -940561982)).cljs$core$IFn$_invoke$arity$1(inst_39707);
                var inst_39709 = cljs.core.first.call(null, inst_39708);
                var inst_39710__$1 = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(inst_39709);
                var state_39718__$1 = function() {
                  var statearr_39720 = state_39718;
                  statearr_39720[7] = inst_39710__$1;
                  return statearr_39720;
                }();
                if (cljs.core.truth_(inst_39710__$1)) {
                  var statearr_39721_39733 = state_39718__$1;
                  statearr_39721_39733[1] = 3;
                } else {
                  var statearr_39722_39734 = state_39718__$1;
                  statearr_39722_39734[1] = 4;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_39719 === 3) {
                  var inst_39710 = state_39718[7];
                  var inst_39712 = cljs.core.async.put_BANG_.call(null, output_channel, inst_39710);
                  var state_39718__$1 = state_39718;
                  var statearr_39723_39735 = state_39718__$1;
                  statearr_39723_39735[2] = inst_39712;
                  statearr_39723_39735[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_39719 === 4) {
                    var inst_39714 = cljs.core.async.close_BANG_.call(null, output_channel);
                    var state_39718__$1 = state_39718;
                    var statearr_39724_39736 = state_39718__$1;
                    statearr_39724_39736[2] = inst_39714;
                    statearr_39724_39736[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_39719 === 5) {
                      var inst_39716 = state_39718[2];
                      var state_39718__$1 = state_39718;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39718__$1, inst_39716);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___39732, output_channel, url, vec__39700, success_channel, error_channel);
        return function(switch__36426__auto__, c__36538__auto___39732, output_channel, url, vec__39700, success_channel, error_channel) {
          return function() {
            var redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto__ = null;
            var redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto____0 = function() {
              var statearr_39728 = [null, null, null, null, null, null, null, null];
              statearr_39728[0] = redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto__;
              statearr_39728[1] = 1;
              return statearr_39728;
            };
            var redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto____1 = function(state_39718) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39718);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39729) {
                    if (e39729 instanceof Object) {
                      var ex__36430__auto__ = e39729;
                      var statearr_39730_39737 = state_39718;
                      statearr_39730_39737[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39718);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39729;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39738 = state_39718;
                  state_39718 = G__39738;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto__ = function(state_39718) {
              switch(arguments.length) {
                case 0:
                  return redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto____0.call(this);
                case 1:
                  return redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto____1.call(this, state_39718);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto____0;
            redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto____1;
            return redditv$reddit$get_subreddit_post_by_id_$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___39732, output_channel, url, vec__39700, success_channel, error_channel);
      }();
      var state__36540__auto__ = function() {
        var statearr_39731 = f__36539__auto__.call(null);
        statearr_39731[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___39732;
        return statearr_39731;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___39732, output_channel, url, vec__39700, success_channel, error_channel));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [output_channel, error_channel], null);
};
redditv.reddit.get_subreddit_video_by_id = function redditv$reddit$get_subreddit_video_by_id(id) {
  var output_channel = cljs.core.async.chan.call(null);
  var vec__39775 = redditv.reddit.get_subreddit_post_by_id.call(null, id);
  var success_channel = cljs.core.nth.call(null, vec__39775, 0, null);
  var error_channel = cljs.core.nth.call(null, vec__39775, 1, null);
  var c__36538__auto___39811 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___39811, output_channel, vec__39775, success_channel, error_channel) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___39811, output_channel, vec__39775, success_channel, error_channel) {
          return function(state_39793) {
            var state_val_39794 = state_39793[1];
            if (state_val_39794 === 1) {
              var state_39793__$1 = state_39793;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39793__$1, 2, success_channel);
            } else {
              if (state_val_39794 === 2) {
                var inst_39779 = state_39793[7];
                var inst_39779__$1 = state_39793[2];
                var state_39793__$1 = function() {
                  var statearr_39795 = state_39793;
                  statearr_39795[7] = inst_39779__$1;
                  return statearr_39795;
                }();
                if (cljs.core.truth_(inst_39779__$1)) {
                  var statearr_39796_39812 = state_39793__$1;
                  statearr_39796_39812[1] = 3;
                } else {
                  var statearr_39797_39813 = state_39793__$1;
                  statearr_39797_39813[1] = 4;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_39794 === 3) {
                  var inst_39779 = state_39793[7];
                  var inst_39781 = redditv.reddit.post_is_video_QMARK_.call(null, inst_39779);
                  var state_39793__$1 = state_39793;
                  if (cljs.core.truth_(inst_39781)) {
                    var statearr_39798_39814 = state_39793__$1;
                    statearr_39798_39814[1] = 6;
                  } else {
                    var statearr_39799_39815 = state_39793__$1;
                    statearr_39799_39815[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_39794 === 4) {
                    var inst_39789 = cljs.core.async.close_BANG_.call(null, output_channel);
                    var state_39793__$1 = state_39793;
                    var statearr_39800_39816 = state_39793__$1;
                    statearr_39800_39816[2] = inst_39789;
                    statearr_39800_39816[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_39794 === 5) {
                      var inst_39791 = state_39793[2];
                      var state_39793__$1 = state_39793;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39793__$1, inst_39791);
                    } else {
                      if (state_val_39794 === 6) {
                        var inst_39779 = state_39793[7];
                        var inst_39783 = cljs.core.async.put_BANG_.call(null, output_channel, inst_39779);
                        var state_39793__$1 = state_39793;
                        var statearr_39801_39817 = state_39793__$1;
                        statearr_39801_39817[2] = inst_39783;
                        statearr_39801_39817[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_39794 === 7) {
                          var inst_39785 = cljs.core.async.close_BANG_.call(null, output_channel);
                          var state_39793__$1 = state_39793;
                          var statearr_39802_39818 = state_39793__$1;
                          statearr_39802_39818[2] = inst_39785;
                          statearr_39802_39818[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_39794 === 8) {
                            var inst_39787 = state_39793[2];
                            var state_39793__$1 = state_39793;
                            var statearr_39803_39819 = state_39793__$1;
                            statearr_39803_39819[2] = inst_39787;
                            statearr_39803_39819[1] = 5;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___39811, output_channel, vec__39775, success_channel, error_channel);
        return function(switch__36426__auto__, c__36538__auto___39811, output_channel, vec__39775, success_channel, error_channel) {
          return function() {
            var redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto__ = null;
            var redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto____0 = function() {
              var statearr_39807 = [null, null, null, null, null, null, null, null];
              statearr_39807[0] = redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto__;
              statearr_39807[1] = 1;
              return statearr_39807;
            };
            var redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto____1 = function(state_39793) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39793);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39808) {
                    if (e39808 instanceof Object) {
                      var ex__36430__auto__ = e39808;
                      var statearr_39809_39820 = state_39793;
                      statearr_39809_39820[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39793);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39808;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39821 = state_39793;
                  state_39793 = G__39821;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto__ = function(state_39793) {
              switch(arguments.length) {
                case 0:
                  return redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto____0.call(this);
                case 1:
                  return redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto____1.call(this, state_39793);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto____0;
            redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto____1;
            return redditv$reddit$get_subreddit_video_by_id_$_state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___39811, output_channel, vec__39775, success_channel, error_channel);
      }();
      var state__36540__auto__ = function() {
        var statearr_39810 = f__36539__auto__.call(null);
        statearr_39810[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___39811;
        return statearr_39810;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___39811, output_channel, vec__39775, success_channel, error_channel));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [output_channel, error_channel], null);
};
goog.provide("redditv.playlist");
goog.require("cljs.core");
goog.require("redditv.utils");
goog.require("redditv.reddit");
redditv.playlist.reload = function redditv$playlist$reload(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___39930 = arguments.length;
  var i__31205__auto___39931 = 0;
  while (true) {
    if (i__31205__auto___39931 < len__31204__auto___39930) {
      args__31211__auto__.push(arguments[i__31205__auto___39931]);
      var G__39932 = i__31205__auto___39931 + 1;
      i__31205__auto___39931 = G__39932;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return redditv.playlist.reload.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
redditv.playlist.reload.cljs$core$IFn$_invoke$arity$variadic = function(app_state, p__39826) {
  var map__39827 = p__39826;
  var map__39827__$1 = (!(map__39827 == null) ? map__39827.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39827.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39827) : map__39827;
  var search = cljs.core.get.call(null, map__39827__$1, new cljs.core.Keyword(null, "search", "search", 1564939822), null);
  var reload_QMARK_ = cljs.core.get.call(null, map__39827__$1, new cljs.core.Keyword(null, "reload?", "reload?", -1559406964), false);
  redditv.utils.set_loading_animation_BANG_.call(null, app_state, true);
  var c__36538__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto__, map__39827, map__39827__$1, search, reload_QMARK_) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto__, map__39827, map__39827__$1, search, reload_QMARK_) {
          return function(state_39891) {
            var state_val_39892 = state_39891[1];
            if (state_val_39892 === 7) {
              var inst_39846 = state_39891[2];
              var state_39891__$1 = state_39891;
              var statearr_39893_39933 = state_39891__$1;
              statearr_39893_39933[2] = inst_39846;
              statearr_39893_39933[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_39892 === 20) {
                var inst_39885 = state_39891[2];
                var state_39891__$1 = state_39891;
                var statearr_39894_39934 = state_39891__$1;
                statearr_39894_39934[2] = inst_39885;
                statearr_39894_39934[1] = 14;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_39892 === 1) {
                  var inst_39833 = state_39891[7];
                  var inst_39833__$1 = cljs.core.deref.call(null, app_state);
                  var inst_39835 = inst_39833__$1 == null;
                  var inst_39836 = cljs.core.not.call(null, inst_39835);
                  var state_39891__$1 = function() {
                    var statearr_39895 = state_39891;
                    statearr_39895[7] = inst_39833__$1;
                    return statearr_39895;
                  }();
                  if (inst_39836) {
                    var statearr_39896_39935 = state_39891__$1;
                    statearr_39896_39935[1] = 2;
                  } else {
                    var statearr_39897_39936 = state_39891__$1;
                    statearr_39897_39936[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_39892 === 4) {
                    var inst_39849 = state_39891[2];
                    var state_39891__$1 = state_39891;
                    if (cljs.core.truth_(inst_39849)) {
                      var statearr_39898_39937 = state_39891__$1;
                      statearr_39898_39937[1] = 8;
                    } else {
                      var statearr_39899_39938 = state_39891__$1;
                      statearr_39899_39938[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_39892 === 15) {
                      var state_39891__$1 = state_39891;
                      var statearr_39900_39939 = state_39891__$1;
                      statearr_39900_39939[2] = 0;
                      statearr_39900_39939[1] = 17;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_39892 === 13) {
                        var state_39891__$1 = state_39891;
                        var statearr_39901_39940 = state_39891__$1;
                        statearr_39901_39940[2] = null;
                        statearr_39901_39940[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_39892 === 6) {
                          var state_39891__$1 = state_39891;
                          var statearr_39902_39941 = state_39891__$1;
                          statearr_39902_39941[2] = false;
                          statearr_39902_39941[1] = 7;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_39892 === 17) {
                            var inst_39868 = state_39891[8];
                            var inst_39870 = state_39891[9];
                            var inst_39875 = state_39891[2];
                            var inst_39876 = [inst_39868, inst_39875];
                            var inst_39877 = cljs.core.PersistentHashMap.fromArrays(inst_39870, inst_39876);
                            var inst_39878 = cljs.core.swap_BANG_.call(null, app_state, cljs.core.merge, inst_39877);
                            var inst_39879 = redditv.utils.app_hash.call(null, app_state);
                            var inst_39880 = redditv.utils.set_hash_BANG_.call(null, inst_39879);
                            var state_39891__$1 = function() {
                              var statearr_39903 = state_39891;
                              statearr_39903[10] = inst_39878;
                              statearr_39903[11] = inst_39880;
                              return statearr_39903;
                            }();
                            if (cljs.core.truth_(reload_QMARK_)) {
                              var statearr_39904_39942 = state_39891__$1;
                              statearr_39904_39942[1] = 18;
                            } else {
                              var statearr_39905_39943 = state_39891__$1;
                              statearr_39905_39943[1] = 19;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_39892 === 3) {
                              var state_39891__$1 = state_39891;
                              var statearr_39906_39944 = state_39891__$1;
                              statearr_39906_39944[2] = false;
                              statearr_39906_39944[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_39892 === 12) {
                                var inst_39859 = state_39891[12];
                                var inst_39870 = [new cljs.core.Keyword(null, "playlist", "playlist", 1952276871), new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961)];
                                var inst_39871 = inst_39859 < 0;
                                var state_39891__$1 = function() {
                                  var statearr_39907 = state_39891;
                                  statearr_39907[9] = inst_39870;
                                  return statearr_39907;
                                }();
                                if (cljs.core.truth_(inst_39871)) {
                                  var statearr_39908_39945 = state_39891__$1;
                                  statearr_39908_39945[1] = 15;
                                } else {
                                  var statearr_39909_39946 = state_39891__$1;
                                  statearr_39909_39946[1] = 16;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_39892 === 2) {
                                  var inst_39833 = state_39891[7];
                                  var inst_39838 = inst_39833.cljs$lang$protocol_mask$partition0$;
                                  var inst_39839 = inst_39838 & 64;
                                  var inst_39840 = inst_39833.cljs$core$ISeq$;
                                  var inst_39841 = cljs.core.PROTOCOL_SENTINEL === inst_39840;
                                  var inst_39842 = inst_39839 || inst_39841;
                                  var state_39891__$1 = state_39891;
                                  if (cljs.core.truth_(inst_39842)) {
                                    var statearr_39910_39947 = state_39891__$1;
                                    statearr_39910_39947[1] = 5;
                                  } else {
                                    var statearr_39911_39948 = state_39891__$1;
                                    statearr_39911_39948[1] = 6;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_39892 === 19) {
                                    var state_39891__$1 = state_39891;
                                    var statearr_39912_39949 = state_39891__$1;
                                    statearr_39912_39949[2] = null;
                                    statearr_39912_39949[1] = 20;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_39892 === 11) {
                                      var inst_39868 = state_39891[8];
                                      var inst_39868__$1 = state_39891[2];
                                      var state_39891__$1 = function() {
                                        var statearr_39913 = state_39891;
                                        statearr_39913[8] = inst_39868__$1;
                                        return statearr_39913;
                                      }();
                                      if (cljs.core.truth_(inst_39868__$1)) {
                                        var statearr_39914_39950 = state_39891__$1;
                                        statearr_39914_39950[1] = 12;
                                      } else {
                                        var statearr_39915_39951 = state_39891__$1;
                                        statearr_39915_39951[1] = 13;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_39892 === 9) {
                                        var inst_39833 = state_39891[7];
                                        var state_39891__$1 = state_39891;
                                        var statearr_39916_39952 = state_39891__$1;
                                        statearr_39916_39952[2] = inst_39833;
                                        statearr_39916_39952[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_39892 === 5) {
                                          var state_39891__$1 = state_39891;
                                          var statearr_39917_39953 = state_39891__$1;
                                          statearr_39917_39953[2] = true;
                                          statearr_39917_39953[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_39892 === 14) {
                                            var inst_39888 = state_39891[2];
                                            var inst_39889 = redditv.utils.set_loading_animation_BANG_.call(null, app_state, false);
                                            var state_39891__$1 = function() {
                                              var statearr_39918 = state_39891;
                                              statearr_39918[13] = inst_39888;
                                              return statearr_39918;
                                            }();
                                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_39891__$1, inst_39889);
                                          } else {
                                            if (state_val_39892 === 16) {
                                              var inst_39859 = state_39891[12];
                                              var state_39891__$1 = state_39891;
                                              var statearr_39919_39954 = state_39891__$1;
                                              statearr_39919_39954[2] = inst_39859;
                                              statearr_39919_39954[1] = 17;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_39892 === 10) {
                                                var inst_39854 = state_39891[2];
                                                var inst_39855 = cljs.core.get.call(null, inst_39854, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
                                                var inst_39856 = cljs.core.get.call(null, inst_39854, new cljs.core.Keyword(null, "settings-show-nsfw", "settings-show-nsfw", -1673123951));
                                                var inst_39857 = cljs.core.get.call(null, inst_39854, new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692));
                                                var inst_39858 = cljs.core.get.call(null, inst_39854, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518));
                                                var inst_39859 = cljs.core.get.call(null, inst_39854, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961));
                                                var inst_39860 = cljs.core.get.call(null, inst_39854, new cljs.core.Keyword(null, "playlist-selected-id", "playlist-selected-id", -1342487694));
                                                var inst_39861 = [new cljs.core.Keyword(null, "allow-nsfw?", "allow-nsfw?", -265554186), new cljs.core.Keyword(null, "limit", "limit", -1355822363), new cljs.core.Keyword(null, "category", "category", -593092832)];
                                                var inst_39862 = [inst_39856, inst_39857, inst_39858];
                                                var inst_39863 = cljs.core.PersistentHashMap.fromArrays(inst_39861, inst_39862);
                                                var inst_39864 = redditv.reddit.get_subreddit_videos.call(null, inst_39855, inst_39863);
                                                var inst_39865 = cljs.core.nth.call(null, inst_39864, 0, null);
                                                var inst_39866 = cljs.core.nth.call(null, inst_39864, 1, null);
                                                var state_39891__$1 = function() {
                                                  var statearr_39920 = state_39891;
                                                  statearr_39920[14] = inst_39860;
                                                  statearr_39920[12] = inst_39859;
                                                  statearr_39920[15] = inst_39866;
                                                  return statearr_39920;
                                                }();
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_39891__$1, 11, inst_39865);
                                              } else {
                                                if (state_val_39892 === 18) {
                                                  var inst_39882 = redditv.utils.force_app_reload_BANG_.call(null, app_state);
                                                  var state_39891__$1 = state_39891;
                                                  var statearr_39921_39955 = state_39891__$1;
                                                  statearr_39921_39955[2] = inst_39882;
                                                  statearr_39921_39955[1] = 20;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_39892 === 8) {
                                                    var inst_39833 = state_39891[7];
                                                    var inst_39851 = cljs.core.apply.call(null, cljs.core.hash_map, inst_39833);
                                                    var state_39891__$1 = state_39891;
                                                    var statearr_39922_39956 = state_39891__$1;
                                                    statearr_39922_39956[2] = inst_39851;
                                                    statearr_39922_39956[1] = 10;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto__, map__39827, map__39827__$1, search, reload_QMARK_);
        return function(switch__36426__auto__, c__36538__auto__, map__39827, map__39827__$1, search, reload_QMARK_) {
          return function() {
            var redditv$playlist$state_machine__36427__auto__ = null;
            var redditv$playlist$state_machine__36427__auto____0 = function() {
              var statearr_39926 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_39926[0] = redditv$playlist$state_machine__36427__auto__;
              statearr_39926[1] = 1;
              return statearr_39926;
            };
            var redditv$playlist$state_machine__36427__auto____1 = function(state_39891) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_39891);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e39927) {
                    if (e39927 instanceof Object) {
                      var ex__36430__auto__ = e39927;
                      var statearr_39928_39957 = state_39891;
                      statearr_39928_39957[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_39891);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e39927;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__39958 = state_39891;
                  state_39891 = G__39958;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            redditv$playlist$state_machine__36427__auto__ = function(state_39891) {
              switch(arguments.length) {
                case 0:
                  return redditv$playlist$state_machine__36427__auto____0.call(this);
                case 1:
                  return redditv$playlist$state_machine__36427__auto____1.call(this, state_39891);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            redditv$playlist$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = redditv$playlist$state_machine__36427__auto____0;
            redditv$playlist$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = redditv$playlist$state_machine__36427__auto____1;
            return redditv$playlist$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto__, map__39827, map__39827__$1, search, reload_QMARK_);
      }();
      var state__36540__auto__ = function() {
        var statearr_39929 = f__36539__auto__.call(null);
        statearr_39929[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto__;
        return statearr_39929;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto__, map__39827, map__39827__$1, search, reload_QMARK_));
  return c__36538__auto__;
};
redditv.playlist.reload.cljs$lang$maxFixedArity = 1;
redditv.playlist.reload.cljs$lang$applyTo = function(seq39824) {
  var G__39825 = cljs.core.first.call(null, seq39824);
  var seq39824__$1 = cljs.core.next.call(null, seq39824);
  return redditv.playlist.reload.cljs$core$IFn$_invoke$arity$variadic(G__39825, seq39824__$1);
};
redditv.playlist.has_video_with_id_QMARK_ = function redditv$playlist$has_video_with_id_QMARK_(app_state, id) {
  var playlist = (new cljs.core.Keyword(null, "playlist", "playlist", 1952276871)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state));
  return cljs.core.boolean$.call(null, cljs.core.first.call(null, cljs.core.filter.call(null, function(playlist) {
    return function(p1__39959_SHARP_) {
      return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(p1__39959_SHARP_), id);
    };
  }(playlist), playlist)));
};
redditv.playlist.get_index_of_id = function redditv$playlist$get_index_of_id(app_state, id) {
  var i = 0;
  while (true) {
    var video_id = (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, (new cljs.core.Keyword(null, "playlist", "playlist", 1952276871)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state)), i));
    if (cljs.core._EQ_.call(null, video_id, id)) {
      return i;
    } else {
      if (i >= cljs.core.count.call(null, (new cljs.core.Keyword(null, "playlist", "playlist", 1952276871)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state))) - 1) {
        return null;
      } else {
        var G__39960 = i + 1;
        i = G__39960;
        continue;
      }
    }
    break;
  }
};
redditv.playlist.get_selected = function redditv$playlist$get_selected(app_state) {
  var playlist = (new cljs.core.Keyword(null, "playlist", "playlist", 1952276871)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state));
  var index = cljs.core.mod.call(null, (new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state)), cljs.core.count.call(null, playlist));
  var id = (new cljs.core.Keyword(null, "playlist-selected-id", "playlist-selected-id", -1342487694)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state));
  if (cljs.core.count.call(null, playlist) > 0) {
    return cljs.core.nth.call(null, playlist, index);
  } else {
    return null;
  }
};
redditv.playlist.select_next = function redditv$playlist$select_next(app_state) {
  var map__39963 = cljs.core.deref.call(null, app_state);
  var map__39963__$1 = (!(map__39963 == null) ? map__39963.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39963.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39963) : map__39963;
  var playlist_selected_index = cljs.core.get.call(null, map__39963__$1, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961));
  var playlist = cljs.core.get.call(null, map__39963__$1, new cljs.core.Keyword(null, "playlist", "playlist", 1952276871));
  var subreddit = cljs.core.get.call(null, map__39963__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
  var size = cljs.core.count.call(null, playlist);
  var index = cljs.core.mod.call(null, playlist_selected_index + 1, size);
  cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), index);
  redditv.utils.set_hash_BANG_.call(null, redditv.utils.app_hash.call(null, app_state));
  return index;
};
redditv.playlist.select_prev = function redditv$playlist$select_prev(app_state) {
  var map__39967 = cljs.core.deref.call(null, app_state);
  var map__39967__$1 = (!(map__39967 == null) ? map__39967.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__39967.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__39967) : map__39967;
  var playlist_selected_index = cljs.core.get.call(null, map__39967__$1, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961));
  var playlist = cljs.core.get.call(null, map__39967__$1, new cljs.core.Keyword(null, "playlist", "playlist", 1952276871));
  var subreddit = cljs.core.get.call(null, map__39967__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
  var size = cljs.core.count.call(null, playlist);
  var index = playlist_selected_index - 1;
  var index__$1 = index < 0 ? size - 1 : index;
  cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), index__$1);
  redditv.utils.set_hash_BANG_.call(null, redditv.utils.app_hash.call(null, app_state));
  return index__$1;
};
redditv.playlist.open_current_video_comments = function redditv$playlist$open_current_video_comments(app_state) {
  var video = redditv.playlist.get_selected.call(null, app_state);
  return redditv.utils.open_reddit_comment.call(null, video);
};
goog.provide("redditv.components.playlist");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("rum.core");
goog.require("redditv.playlist");
goog.require("redditv.utils");
goog.require("redditv.components.mdl");
redditv.components.playlist.nsfw_thumbnail_url = "http://i.imgur.com/KZOsckv.jpg";
redditv.components.playlist.default_thumbnail_url = "http://i.imgur.com/9wEJlnk.gif";
redditv.components.playlist.mixin_fix_scroll_alignment = function redditv$components$playlist$mixin_fix_scroll_alignment(state) {
  var react_component_41527 = (new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248)).cljs$core$IFn$_invoke$arity$1(state);
  var dom_node_41528 = ReactDOM.findDOMNode(react_component_41527);
  var parent_node_41529 = document.querySelector(".redditv-playlist-container");
  var selected_QMARK__41530 = cljs.core.nth.call(null, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state), 2);
  if (cljs.core.truth_(selected_QMARK__41530)) {
    redditv.utils.align_to_root_left.call(null, parent_node_41529, dom_node_41528);
  } else {
  }
  return state;
};
redditv.components.playlist.mixin_fix_playlist_compressed = function redditv$components$playlist$mixin_fix_playlist_compressed(state) {
  var temp__4657__auto___41531 = document.querySelector(".redditv-playlist-container-compressed");
  if (cljs.core.truth_(temp__4657__auto___41531)) {
    var dom_41532 = temp__4657__auto___41531;
    dom_41532["scrollLeft"] = 0;
  } else {
  }
  return state;
};
redditv.components.playlist.c_playlist_item = rum.core.build_defcs.call(null, function(state, p__41533, select_chan, selected_QMARK_) {
  var vec__41534 = p__41533;
  var i = cljs.core.nth.call(null, vec__41534, 0, null);
  var item = cljs.core.nth.call(null, vec__41534, 1, null);
  var title = redditv.utils.decode_html_string.call(null, [cljs.core.str((new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(item))].join(""));
  var thumbnail = (new cljs.core.Keyword(null, "thumbnail", "thumbnail", -867906798)).cljs$core$IFn$_invoke$arity$1(item);
  var thumbnail__$1 = function() {
    var G__41537 = thumbnail;
    if (cljs.core._EQ_.call(null, "nsfw", G__41537)) {
      return redditv.components.playlist.nsfw_thumbnail_url;
    } else {
      if (cljs.core._EQ_.call(null, "default", G__41537)) {
        return redditv.components.playlist.default_thumbnail_url;
      } else {
        if (cljs.core._EQ_.call(null, null, G__41537)) {
          return redditv.components.playlist.default_thumbnail_url;
        } else {
          if (cljs.core._EQ_.call(null, "", G__41537)) {
            return redditv.components.playlist.default_thumbnail_url;
          } else {
            return thumbnail;
          }
        }
      }
    }
  }();
  return React.createElement("div", {"title":title, "onClick":function(title, thumbnail, thumbnail__$1, vec__41534, i, item) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, select_chan, i);
    };
  }(title, thumbnail, thumbnail__$1, vec__41534, i, item), "className":sablono.util.join_classes.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["redditv-playlist-item", cljs.core.truth_(selected_QMARK_) ? "selected" : null], null))}, function() {
    var attrs41538 = title;
    return cljs.core.apply.call(null, React.createElement, "div", cljs.core.map_QMARK_.call(null, attrs41538) ? sablono.interpreter.attributes.call(null, sablono.normalize.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["redditv-playlist-item-title", "noselect"], null)], null), attrs41538)) : {"className":"redditv-playlist-item-title noselect"}, 
    cljs.core.map_QMARK_.call(null, attrs41538) ? null : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs41538)], null));
  }(), React.createElement("img", {"src":thumbnail__$1, "className":"redditv-playlist-item-thumbnail"}));
}, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), function(p__41539) {
  var vec__41540 = p__41539;
  var i = cljs.core.nth.call(null, vec__41540, 0, null);
  var item = cljs.core.nth.call(null, vec__41540, 1, null);
  return [cljs.core.str("playlist-item-"), cljs.core.str(i), cljs.core.str("-"), cljs.core.str((new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(item))].join("");
}, new cljs.core.Keyword(null, "did-update", "did-update", -2143702256), redditv.components.playlist.mixin_fix_scroll_alignment, new cljs.core.Keyword(null, "did-mount", "did-mount", 918232960), redditv.components.playlist.mixin_fix_scroll_alignment], null)], null), "c-playlist-item");
redditv.components.playlist.mixin_select_item_handler = function redditv$components$playlist$mixin_select_item_handler() {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "did-mount", "did-mount", 918232960), function(state) {
    var app_state = cljs.core.first.call(null, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state));
    var select_chan = cljs.core.async.chan.call(null);
    var c__36538__auto___41591 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___41591, app_state, select_chan) {
      return function() {
        var f__36539__auto__ = function() {
          var switch__36426__auto__ = function(c__36538__auto___41591, app_state, select_chan) {
            return function(state_41579) {
              var state_val_41580 = state_41579[1];
              if (state_val_41580 === 1) {
                var state_41579__$1 = state_41579;
                var statearr_41581_41592 = state_41579__$1;
                statearr_41581_41592[2] = null;
                statearr_41581_41592[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_41580 === 2) {
                  var state_41579__$1 = state_41579;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_41579__$1, 4, select_chan);
                } else {
                  if (state_val_41580 === 3) {
                    var inst_41577 = state_41579[2];
                    var state_41579__$1 = state_41579;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_41579__$1, inst_41577);
                  } else {
                    if (state_val_41580 === 4) {
                      var inst_41569 = state_41579[2];
                      var inst_41570 = cljs.core.deref.call(null, app_state);
                      var inst_41571 = (new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754)).cljs$core$IFn$_invoke$arity$1(inst_41570);
                      var inst_41572 = cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), inst_41569);
                      var inst_41573 = redditv.utils.app_hash.call(null, app_state);
                      var inst_41574 = redditv.utils.set_hash_BANG_.call(null, inst_41573);
                      var state_41579__$1 = function() {
                        var statearr_41582 = state_41579;
                        statearr_41582[7] = inst_41572;
                        statearr_41582[8] = inst_41571;
                        statearr_41582[9] = inst_41574;
                        return statearr_41582;
                      }();
                      var statearr_41583_41593 = state_41579__$1;
                      statearr_41583_41593[2] = null;
                      statearr_41583_41593[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      return null;
                    }
                  }
                }
              }
            };
          }(c__36538__auto___41591, app_state, select_chan);
          return function(switch__36426__auto__, c__36538__auto___41591, app_state, select_chan) {
            return function() {
              var redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto__ = null;
              var redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto____0 = function() {
                var statearr_41587 = [null, null, null, null, null, null, null, null, null, null];
                statearr_41587[0] = redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto__;
                statearr_41587[1] = 1;
                return statearr_41587;
              };
              var redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto____1 = function(state_41579) {
                while (true) {
                  var ret_value__36428__auto__ = function() {
                    try {
                      while (true) {
                        var result__36429__auto__ = switch__36426__auto__.call(null, state_41579);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__36429__auto__;
                        }
                        break;
                      }
                    } catch (e41588) {
                      if (e41588 instanceof Object) {
                        var ex__36430__auto__ = e41588;
                        var statearr_41589_41594 = state_41579;
                        statearr_41589_41594[5] = ex__36430__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_41579);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e41588;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__41595 = state_41579;
                    state_41579 = G__41595;
                    continue;
                  } else {
                    return ret_value__36428__auto__;
                  }
                  break;
                }
              };
              redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto__ = function(state_41579) {
                switch(arguments.length) {
                  case 0:
                    return redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto____0.call(this);
                  case 1:
                    return redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto____1.call(this, state_41579);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto____0;
              redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto____1;
              return redditv$components$playlist$mixin_select_item_handler_$_state_machine__36427__auto__;
            }();
          }(switch__36426__auto__, c__36538__auto___41591, app_state, select_chan);
        }();
        var state__36540__auto__ = function() {
          var statearr_41590 = f__36539__auto__.call(null);
          statearr_41590[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___41591;
          return statearr_41590;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
      };
    }(c__36538__auto___41591, app_state, select_chan));
    return cljs.core.assoc.call(null, state, new cljs.core.Keyword("redditv.components.playlist", "select-chan", "redditv.components.playlist/select-chan", -2123399762), select_chan);
  }, new cljs.core.Keyword(null, "will-unmount", "will-unmount", -808051550), function(state) {
    return cljs.core.dissoc.call(null, state, new cljs.core.Keyword("redditv.components.playlist", "select-chan", "redditv.components.playlist/select-chan", -2123399762));
  }], null);
};
redditv.components.playlist.c_playlist = rum.core.build_defcs.call(null, function(state, app_state) {
  var map__41596 = rum.core.react.call(null, app_state);
  var map__41596__$1 = (!(map__41596 == null) ? map__41596.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41596.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41596) : map__41596;
  var playlist = cljs.core.get.call(null, map__41596__$1, new cljs.core.Keyword(null, "playlist", "playlist", 1952276871));
  var playlist_selected_index = cljs.core.get.call(null, map__41596__$1, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961));
  var fullscreen = cljs.core.get.call(null, map__41596__$1, new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054));
  var show_playlist = cljs.core.get.call(null, map__41596__$1, new cljs.core.Keyword(null, "show-playlist", "show-playlist", -1969029604));
  var playlist_items = cljs.core.map_indexed.call(null, cljs.core.vector, playlist);
  var select_chan = (new cljs.core.Keyword("redditv.components.playlist", "select-chan", "redditv.components.playlist/select-chan", -2123399762)).cljs$core$IFn$_invoke$arity$1(state);
  return sablono.interpreter.interpret.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [redditv.utils.app_css_class_layout.call(null, app_state, new cljs.core.Keyword(null, ".redditv-playlist", ".redditv-playlist", 2027679976)), sablono.interpreter.interpret.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(show_playlist) ? new cljs.core.Keyword(null, ".redditv-playlist-rightpane", ".redditv-playlist-rightpane", 
  -758776332) : new cljs.core.Keyword(null, ".redditv-playlist-rightpane-compressed", ".redditv-playlist-rightpane-compressed", -223416774), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.truth_(show_playlist) ? "arrow_drop_down" : "arrow_drop_up", new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button noselect", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), 
  function(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan) {
    return function() {
      return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "show-playlist", "show-playlist", -1969029604)], null), cljs.core.not);
    };
  }(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan)], null)), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.not.call(null, fullscreen) ? "fullscreen" : "fullscreen_exit", new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button noselect", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), 
  function(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan) {
    return function() {
      return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054)], null), cljs.core.not);
    };
  }(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan)], null))], null)), cljs.core.truth_(show_playlist) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".redditv-playlist-container", ".redditv-playlist-container", -1255314327), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.not.call(null, show_playlist) ? 
  "compressed" : null], null), function() {
    var iter__30879__auto__ = function(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan) {
      return function redditv$components$playlist$iter__41598(s__41599) {
        return new cljs.core.LazySeq(null, function(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan) {
          return function() {
            var s__41599__$1 = s__41599;
            while (true) {
              var temp__4657__auto__ = cljs.core.seq.call(null, s__41599__$1);
              if (temp__4657__auto__) {
                var s__41599__$2 = temp__4657__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__41599__$2)) {
                  var c__30877__auto__ = cljs.core.chunk_first.call(null, s__41599__$2);
                  var size__30878__auto__ = cljs.core.count.call(null, c__30877__auto__);
                  var b__41601 = cljs.core.chunk_buffer.call(null, size__30878__auto__);
                  if (function() {
                    var i__41600 = 0;
                    while (true) {
                      if (i__41600 < size__30878__auto__) {
                        var vec__41608 = cljs.core._nth.call(null, c__30877__auto__, i__41600);
                        var index = cljs.core.nth.call(null, vec__41608, 0, null);
                        var item = cljs.core.nth.call(null, vec__41608, 1, null);
                        cljs.core.chunk_append.call(null, b__41601, redditv.components.playlist.c_playlist_item.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index, item], null), select_chan, cljs.core._EQ_.call(null, index, playlist_selected_index)));
                        var G__41614 = i__41600 + 1;
                        i__41600 = G__41614;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41601), redditv$components$playlist$iter__41598.call(null, cljs.core.chunk_rest.call(null, s__41599__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__41601), null);
                  }
                } else {
                  var vec__41611 = cljs.core.first.call(null, s__41599__$2);
                  var index = cljs.core.nth.call(null, vec__41611, 0, null);
                  var item = cljs.core.nth.call(null, vec__41611, 1, null);
                  return cljs.core.cons.call(null, redditv.components.playlist.c_playlist_item.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index, item], null), select_chan, cljs.core._EQ_.call(null, index, playlist_selected_index)), redditv$components$playlist$iter__41598.call(null, cljs.core.rest.call(null, s__41599__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan), null, null);
      };
    }(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan);
    return iter__30879__auto__.call(null, playlist_items);
  }()], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".redditv-playlist-container-compressed", ".redditv-playlist-container-compressed", -621175670), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".redditv-leftpane-compressed", ".redditv-leftpane-compressed", -2079951596), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
  "name", "name", 1843675177), "skip_previous", new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button noselect", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan) {
    return function() {
      return redditv.playlist.select_prev.call(null, app_state);
    };
  }(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan)], null)), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "skip_next", new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button noselect", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41596, map__41596__$1, playlist, playlist_selected_index, 
  fullscreen, show_playlist, playlist_items, select_chan) {
    return function() {
      return redditv.playlist.select_next.call(null, app_state);
    };
  }(map__41596, map__41596__$1, playlist, playlist_selected_index, fullscreen, show_playlist, playlist_items, select_chan)], null))], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.redditv-playlist-count", "span.redditv-playlist-count", 462568137), [cljs.core.str(playlist_selected_index + 1), cljs.core.str(" of "), cljs.core.str(cljs.core.count.call(null, playlist_items))].join("")], null), redditv.components.mdl.progress_bar.call(null, 
  new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-playlist-progress", new cljs.core.Keyword(null, "progress", "progress", 244323547), (playlist_selected_index + 1) / cljs.core.count.call(null, playlist_items) * 100], null))], null)], null));
}, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive, redditv.components.playlist.mixin_select_item_handler.call(null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "did-update", "did-update", -2143702256), redditv.components.playlist.mixin_fix_playlist_compressed], null)], null), "c-playlist");
goog.provide("redditv.components.settings");
goog.require("cljs.core");
goog.require("rum.core");
goog.require("redditv.playlist");
goog.require("redditv.components.mdl");
goog.require("redditv.utils");
redditv.components.settings.c_settings = rum.core.build_defcs.call(null, function(state, app_state) {
  var map__41617 = rum.core.react.call(null, app_state);
  var map__41617__$1 = (!(map__41617 == null) ? map__41617.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41617.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41617) : map__41617;
  var settings_show_nsfw = cljs.core.get.call(null, map__41617__$1, new cljs.core.Keyword(null, "settings-show-nsfw", "settings-show-nsfw", -1673123951));
  var settings_video_count = cljs.core.get.call(null, map__41617__$1, new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692));
  var settings_video_category = cljs.core.get.call(null, map__41617__$1, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518));
  var show_playlist = cljs.core.get.call(null, map__41617__$1, new cljs.core.Keyword(null, "show-playlist", "show-playlist", -1969029604));
  return sablono.interpreter.interpret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(show_playlist) ? new cljs.core.Keyword(null, ".redditv-settings-dialog-container", ".redditv-settings-dialog-container", -1467095121) : new cljs.core.Keyword(null, ".redditv-settings-dialog-container-compressed", ".redditv-settings-dialog-container-compressed", -1745849779), React.createElement("div", {"className":"redditv-settings-dialog-page"}, function() {
    var attrs41619 = redditv.components.mdl.fab_button.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "ripple", "ripple", -427079381), true, new cljs.core.Keyword(null, "colored", "colored", -1421800355), true, new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41617, map__41617__$1, settings_show_nsfw, settings_video_count, settings_video_category, show_playlist) {
      return function(e) {
        return cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "show-settings", "show-settings", 680287246), false);
      };
    }(map__41617, map__41617__$1, settings_show_nsfw, settings_video_count, settings_video_category, show_playlist)], null), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), "close"], null)));
    return cljs.core.apply.call(null, React.createElement, "div", cljs.core.map_QMARK_.call(null, attrs41619) ? sablono.interpreter.attributes.call(null, sablono.normalize.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["redditv-dialog-close"], null)], null), attrs41619)) : {"className":"redditv-dialog-close"}, cljs.core.map_QMARK_.call(null, 
    attrs41619) ? null : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs41619)], null));
  }(), function() {
    var attrs41620 = redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "settings", new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "padding", "padding", 1660304693), "5px 5px 5px 5px"], null)], null));
    return cljs.core.apply.call(null, React.createElement, "div", cljs.core.map_QMARK_.call(null, attrs41620) ? sablono.interpreter.attributes.call(null, sablono.normalize.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["redditv-dialog-header"], null)], null), attrs41620)) : {"className":"redditv-dialog-header"}, cljs.core.map_QMARK_.call(null, 
    attrs41620) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.createElement("span", {"style":{"padding":"3px", "top":"-2px", "fontSize":"35px"}, "className":"redditv-dialog-title"}, "Settings")], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs41620), React.createElement("span", {"style":{"padding":"3px", "top":"-2px", "fontSize":"35px"}, "className":"redditv-dialog-title"}, 
    "Settings")], null));
  }(), React.createElement("div", {"className":"redditv-dialog-content"}, React.createElement("h4", null, "General"), sablono.interpreter.interpret.call(null, redditv.components.mdl.grid.call(null, cljs.core.PersistentArrayMap.EMPTY, redditv.components.mdl.cell.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "col", "col", -1959363084), 12], null), redditv.components.mdl.checkbox.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "label", 
  "label", 1718410804), "Show NSFW Content", new cljs.core.Keyword(null, "ripple", "ripple", -427079381), true, new cljs.core.Keyword(null, "checked", "checked", -50955819), settings_show_nsfw, new cljs.core.Keyword(null, "onChange", "onChange", -312891301), function(map__41617, map__41617__$1, settings_show_nsfw, settings_video_count, settings_video_category, show_playlist) {
    return function(e) {
      cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings-show-nsfw", "settings-show-nsfw", -1673123951)], null), cljs.core.not);
      return redditv.playlist.reload.call(null, app_state);
    };
  }(map__41617, map__41617__$1, settings_show_nsfw, settings_video_count, settings_video_category, show_playlist)], null))))), function() {
    var attrs41627 = redditv.components.mdl.grid.call(null, cljs.core.PersistentArrayMap.EMPTY, redditv.components.mdl.cell.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "col", "col", -1959363084), 4], null), React.DOM.span({"style":{"fontSize":"16px"}}, "# Playlist Videos")), redditv.components.mdl.cell.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "col", "col", -1959363084), 6], null), redditv.components.mdl.slider.call(null, 
    new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "min", "min", 444991522), 10, new cljs.core.Keyword(null, "max", "max", 61366548), 100, new cljs.core.Keyword(null, "value", "value", 305978217), settings_video_count, new cljs.core.Keyword(null, "onChange", "onChange", -312891301), function(map__41617, map__41617__$1, settings_show_nsfw, settings_video_count, settings_video_category, show_playlist) {
      return function(e) {
        cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692), redditv.utils.parse_int.call(null, e.target.value), new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), 0);
        return redditv.playlist.reload.call(null, app_state);
      };
    }(map__41617, map__41617__$1, settings_show_nsfw, settings_video_count, settings_video_category, show_playlist)], null))), redditv.components.mdl.cell.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "col", "col", -1959363084), 2], null), React.DOM.span({}, [cljs.core.str(settings_video_count)].join(""))));
    return cljs.core.apply.call(null, React.createElement, "div", cljs.core.map_QMARK_.call(null, attrs41627) ? sablono.interpreter.attributes.call(null, sablono.normalize.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["video-count-setting"], null)], null), attrs41627)) : {"className":"video-count-setting"}, cljs.core.map_QMARK_.call(null, 
    attrs41627) ? null : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs41627)], null));
  }(), React.createElement("div", {"className":"video-type-setting"}, React.createElement("span", null, "Video Category"), sablono.interpreter.create_element.call(null, "select", {"value":settings_video_category, "onChange":function(map__41617, map__41617__$1, settings_show_nsfw, settings_video_count, settings_video_category, show_playlist) {
    return function(e) {
      cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518), e.target.value, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), 0);
      return redditv.playlist.reload.call(null, app_state);
    };
  }(map__41617, map__41617__$1, settings_show_nsfw, settings_video_count, settings_video_category, show_playlist)}, React.createElement("option", {"value":"hot"}, "Hot"), React.createElement("option", {"value":"new"}, "New"), React.createElement("option", {"value":"rising"}, "Rising"), React.createElement("option", {"value":"controversial_hour"}, "Controversial (Past Hour)"), React.createElement("option", {"value":"controversial_day"}, "Controversial (Past 24 Hours)"), React.createElement("option", 
  {"value":"controversial_week"}, "Controversial (Past Week)"), React.createElement("option", {"value":"controversial_month"}, "Controversial (Past Month)"), React.createElement("option", {"value":"controversial_year"}, "Controversial (Past Year)"), React.createElement("option", {"value":"controversial_all"}, "Controversial (All Time)"), React.createElement("option", {"value":"top_hour"}, "Top (Past Hour)"), React.createElement("option", {"value":"top_day"}, "Top (Past 24 Hours)"), React.createElement("option", 
  {"value":"top_week"}, "Top (Past Week)"), React.createElement("option", {"value":"top_month"}, "Top (Past Month)"), React.createElement("option", {"value":"top_year"}, "Top (Past Year)"), React.createElement("option", {"value":"top_all"}, "Top (All Time)")))))], null));
}, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive], null), "c-settings");
goog.provide("redditv.icons");
goog.require("cljs.core");
goog.provide("redditv.components.sidepane");
goog.require("cljs.core");
goog.require("redditv.components.mdl");
goog.require("rum.core");
goog.require("redditv.components.settings");
goog.require("redditv.playlist");
goog.require("redditv.icons");
goog.require("redditv.utils");
redditv.components.sidepane.search_subreddit = function redditv$components$sidepane$search_subreddit(app_state, subreddit) {
  cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754), subreddit, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), 0);
  redditv.playlist.reload.call(null, app_state, new cljs.core.Keyword(null, "reload?", "reload?", -1559406964), true);
  return redditv.utils.set_hash_BANG_.call(null, redditv.utils.app_hash.call(null, app_state));
};
redditv.components.sidepane.mixin_focus_search_bar = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "did-update", "did-update", -2143702256), function(state) {
  var comp_41664 = (new cljs.core.Keyword("rum", "react-component", "rum/react-component", -1879897248)).cljs$core$IFn$_invoke$arity$1(state);
  var dom_node_41665 = ReactDOM.findDOMNode(comp_41664);
  var temp__4657__auto___41666 = dom_node_41665.querySelector("#input-search-bar");
  if (cljs.core.truth_(temp__4657__auto___41666)) {
    var search_element_41667 = temp__4657__auto___41666;
    search_element_41667["value"] = "";
    search_element_41667.focus();
  } else {
  }
  return state;
}], null);
redditv.components.sidepane.c_sidepane = rum.core.build_defcs.call(null, function(state, app_state) {
  var map__41668 = rum.core.react.call(null, app_state);
  var map__41668__$1 = (!(map__41668 == null) ? map__41668.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41668.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41668) : map__41668;
  var show_search = cljs.core.get.call(null, map__41668__$1, new cljs.core.Keyword(null, "show-search", "show-search", 266138187));
  var show_settings = cljs.core.get.call(null, map__41668__$1, new cljs.core.Keyword(null, "show-settings", "show-settings", 680287246));
  var subreddit = cljs.core.get.call(null, map__41668__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
  var show_playlist = cljs.core.get.call(null, map__41668__$1, new cljs.core.Keyword(null, "show-playlist", "show-playlist", -1969029604));
  var search_value = (new cljs.core.Keyword("redditv.components.sidepane", "search-value", "redditv.components.sidepane/search-value", -1896460617)).cljs$core$IFn$_invoke$arity$1(state);
  return sablono.interpreter.interpret.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [redditv.utils.app_css_class_layout.call(null, app_state, new cljs.core.Keyword(null, ".redditv-sidepane", ".redditv-sidepane", 1283099265)), redditv.components.mdl.tooltip.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Search Subreddits", new cljs.core.Keyword(null, "position", "position", -2011731912), 
  "right"], null), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "search", new cljs.core.Keyword(null, "className", "className", -1983287057), [cljs.core.str("redditv-button noselect "), cljs.core.str(cljs.core.truth_(show_search) ? "button-active-toggle" : "")].join(""), new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41668, map__41668__$1, show_search, show_settings, subreddit, 
  show_playlist, search_value) {
    return function() {
      return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "show-search", "show-search", 266138187)], null), cljs.core.not);
    };
  }(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value)], null))), cljs.core.truth_(show_search) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".redditv-search-dialog.right-border-radius.anim-slideInLeft", ".redditv-search-dialog.right-border-radius.anim-slideInLeft", -986581297), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "input#input-search-bar", "input#input-search-bar", -193137605), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "placeholder", "placeholder", -104873083), "SubReddit Name", new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.deref.call(null, search_value), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(map__41668, map__41668__$1, show_search, show_settings, subreddit, 
  show_playlist, search_value) {
    return function(e) {
      var text = e.target.value;
      return cljs.core.reset_BANG_.call(null, search_value, text);
    };
  }(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value), new cljs.core.Keyword(null, "on-key-down", "on-key-down", -1374733765), function(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value) {
    return function(e) {
      var key = e.key;
      if (cljs.core._EQ_.call(null, key, "Enter")) {
        cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "show-search", "show-search", 266138187), false);
        redditv.components.sidepane.search_subreddit.call(null, app_state, cljs.core.deref.call(null, search_value));
      } else {
      }
      if (cljs.core._EQ_.call(null, key, "Escape")) {
        return cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "show-search", "show-search", 266138187), false);
      } else {
        return null;
      }
    };
  }(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value)], null)], null)], null) : null, redditv.components.mdl.tooltip.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "Settings", new cljs.core.Keyword(null, "position", "position", -2011731912), "right"], null), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), 
  "settings", new cljs.core.Keyword(null, "className", "className", -1983287057), [cljs.core.str("redditv-button noselect "), cljs.core.str(cljs.core.truth_(show_settings) ? "button-active-toggle" : "")].join(""), new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value) {
    return function() {
      return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "show-settings", "show-settings", 680287246)], null), cljs.core.not);
    };
  }(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value)], null))), cljs.core.truth_(show_settings) ? redditv.components.settings.c_settings.call(null, app_state) : null, redditv.components.mdl.tooltip.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "View Reddit Comments", new cljs.core.Keyword(null, "position", "position", -2011731912), "right"], null), redditv.components.mdl.icon.call(null, 
  new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "comment", new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button noselect", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value) {
    return function() {
      return redditv.playlist.open_current_video_comments.call(null, app_state);
    };
  }(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value)], null))), redditv.components.mdl.tooltip.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "label", "label", 1718410804), "View Github Source", new cljs.core.Keyword(null, "position", "position", -2011731912), "right"], null), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1843675177), "help", 
  new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button noselect", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value) {
    return function() {
      return window.open([cljs.core.str("http://github.com/benzap/redditv")].join(""));
    };
  }(map__41668, map__41668__$1, show_search, show_settings, subreddit, show_playlist, search_value)], null)))], null));
}, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [redditv.components.sidepane.mixin_focus_search_bar, rum.core.reactive, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "init", "init", -1875481434), function(state, props) {
  var search_value = (new cljs.core.Keyword("redditv.components.sidepane", "search-value", "redditv.components.sidepane/search-value", -1896460617)).cljs$core$IFn$_invoke$arity$1(state);
  var app_state = cljs.core.first.call(null, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state));
  var map__41670 = app_state;
  var map__41670__$1 = (!(map__41670 == null) ? map__41670.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41670.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41670) : map__41670;
  var subreddit = cljs.core.get.call(null, map__41670__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword("redditv.components.sidepane", "search-value", "redditv.components.sidepane/search-value", -1896460617), cljs.core.atom.call(null, subreddit));
}, new cljs.core.Keyword(null, "will-unmount", "will-unmount", -808051550), function(state) {
  return cljs.core.dissoc.call(null, state, new cljs.core.Keyword("redditv.components.sidepane", "search-value", "redditv.components.sidepane/search-value", -1896460617));
}], null)], null), "c-sidepane");
goog.provide("redditv.components.header");
goog.require("cljs.core");
goog.require("rum.core");
goog.require("redditv.playlist");
goog.require("redditv.utils");
goog.require("redditv.components.mdl");
redditv.components.header.c_header = rum.core.build_defc.call(null, function(app_state) {
  var map__41674 = rum.core.react.call(null, app_state);
  var map__41674__$1 = (!(map__41674 == null) ? map__41674.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41674.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41674) : map__41674;
  var subreddit = cljs.core.get.call(null, map__41674__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
  var loading_QMARK_ = cljs.core.get.call(null, map__41674__$1, new cljs.core.Keyword(null, "loading?", "loading?", 1905707049));
  var selected = redditv.playlist.get_selected.call(null, app_state);
  var title = redditv.utils.decode_html_string.call(null, [cljs.core.str((new cljs.core.Keyword(null, "title", "title", 636505583)).cljs$core$IFn$_invoke$arity$1(selected))].join(""));
  return sablono.interpreter.interpret.call(null, cljs.core.not.call(null, (new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app_state))) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".redditv-header", ".redditv-header", -2088515554), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".redditv-header-flex", 
  ".redditv-header-flex", 402624970), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".header-logo", ".header-logo", -1712277668), "redditv"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".header-subreddit", ".header-subreddit", -1217276775), [cljs.core.str("/r/"), cljs.core.str(subreddit)].join("")], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, ".header-title", ".header-title", 719021241), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "title", "title", 636505583), title], null), title], null), cljs.core.truth_(loading_QMARK_) ? redditv.components.mdl.spinner.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), "spinner-loading"], null)) : null], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, ".redditv-header-fullscreen", ".redditv-header-fullscreen", 10611479), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".redditv-header-flex-fullscreen", ".redditv-header-flex-fullscreen", -1264400196), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".header-title-fullscreen", ".header-title-fullscreen", -1297030137), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "title", "title", 636505583), title], null), title], null)], null)], null));
}, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive], null), "c-header");
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.list_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.seq_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
    } else {
      if (cljs.core.record_QMARK_.call(null, form)) {
        return outer.call(null, cljs.core.reduce.call(null, function(r, x) {
          return cljs.core.conj.call(null, r, inner.call(null, x));
        }, form, form));
      } else {
        if (cljs.core.coll_QMARK_.call(null, form)) {
          return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
        } else {
          return outer.call(null, form);
        }
      }
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__41682) {
    var vec__41683 = p__41682;
    var k = cljs.core.nth.call(null, vec__41683, 0, null);
    var v = cljs.core.nth.call(null, vec__41683, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__41690) {
    var vec__41691 = p__41690;
    var k = cljs.core.nth.call(null, vec__41691, 0, null);
    var v = cljs.core.nth.call(null, vec__41691, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.walk");
secretary.core.IRouteMatches = function() {
};
secretary.core.route_matches = function secretary$core$route_matches(this$, route) {
  if (!(this$ == null) && !(this$.secretary$core$IRouteMatches$route_matches$arity$2 == null)) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = secretary.core.route_matches[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$, route);
    } else {
      var m__30760__auto____$1 = secretary.core.route_matches["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$, route);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
      }
    }
  }
};
secretary.core.IRouteValue = function() {
};
secretary.core.route_value = function secretary$core$route_value(this$) {
  if (!(this$ == null) && !(this$.secretary$core$IRouteValue$route_value$arity$1 == null)) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = secretary.core.route_value[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = secretary.core.route_value["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
      }
    }
  }
};
secretary.core.IRenderRoute = function() {
};
secretary.core.render_route = function secretary$core$render_route(var_args) {
  var args41715 = [];
  var len__31204__auto___41718 = arguments.length;
  var i__31205__auto___41719 = 0;
  while (true) {
    if (i__31205__auto___41719 < len__31204__auto___41718) {
      args41715.push(arguments[i__31205__auto___41719]);
      var G__41720 = i__31205__auto___41719 + 1;
      i__31205__auto___41719 = G__41720;
      continue;
    } else {
    }
    break;
  }
  var G__41717 = args41715.length;
  switch(G__41717) {
    case 1:
      return secretary.core.render_route.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return secretary.core.render_route.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args41715.length)].join(""));;
  }
};
secretary.core.render_route.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.secretary$core$IRenderRoute$render_route$arity$1 == null)) {
    return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = secretary.core.render_route[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$);
    } else {
      var m__30760__auto____$1 = secretary.core.render_route["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
      }
    }
  }
};
secretary.core.render_route.cljs$core$IFn$_invoke$arity$2 = function(this$, params) {
  if (!(this$ == null) && !(this$.secretary$core$IRenderRoute$render_route$arity$2 == null)) {
    return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
  } else {
    var x__30759__auto__ = this$ == null ? null : this$;
    var m__30760__auto__ = secretary.core.render_route[goog.typeOf(x__30759__auto__)];
    if (!(m__30760__auto__ == null)) {
      return m__30760__auto__.call(null, this$, params);
    } else {
      var m__30760__auto____$1 = secretary.core.render_route["_"];
      if (!(m__30760__auto____$1 == null)) {
        return m__30760__auto____$1.call(null, this$, params);
      } else {
        throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
      }
    }
  }
};
secretary.core.render_route.cljs$lang$maxFixedArity = 2;
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), ""], null));
secretary.core.get_config = function secretary$core$get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function secretary$core$set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
if (typeof secretary.core.encode_pair !== "undefined") {
} else {
  secretary.core.encode_pair = function() {
    var method_table__31024__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__31025__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__31026__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__31027__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__31028__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "secretary.core", "encode-pair"), function(method_table__31024__auto__, prefer_table__31025__auto__, method_cache__31026__auto__, cached_hierarchy__31027__auto__, hierarchy__31028__auto__) {
      return function(p__41722) {
        var vec__41723 = p__41722;
        var k = cljs.core.nth.call(null, vec__41723, 0, null);
        var v = cljs.core.nth.call(null, vec__41723, 1, null);
        if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
          return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207);
        } else {
          if (function() {
            var or__30096__auto__ = cljs.core.map_QMARK_.call(null, v);
            if (or__30096__auto__) {
              return or__30096__auto__;
            } else {
              if (!(v == null)) {
                if (v.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === v.cljs$core$IRecord$) {
                  return true;
                } else {
                  if (!v.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, v);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, v);
              }
            }
          }()) {
            return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646);
          } else {
            return null;
          }
        }
      };
    }(method_table__31024__auto__, prefer_table__31025__auto__, method_cache__31026__auto__, cached_hierarchy__31027__auto__, hierarchy__31028__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__31028__auto__, method_table__31024__auto__, prefer_table__31025__auto__, method_cache__31026__auto__, cached_hierarchy__31027__auto__);
  }();
}
secretary.core.key_index = function secretary$core$key_index(var_args) {
  var args41728 = [];
  var len__31204__auto___41731 = arguments.length;
  var i__31205__auto___41732 = 0;
  while (true) {
    if (i__31205__auto___41732 < len__31204__auto___41731) {
      args41728.push(arguments[i__31205__auto___41732]);
      var G__41733 = i__31205__auto___41732 + 1;
      i__31205__auto___41732 = G__41733;
      continue;
    } else {
    }
    break;
  }
  var G__41730 = args41728.length;
  switch(G__41730) {
    case 1:
      return secretary.core.key_index.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return secretary.core.key_index.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args41728.length)].join(""));;
  }
};
secretary.core.key_index.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("[]")].join("");
};
secretary.core.key_index.cljs$core$IFn$_invoke$arity$2 = function(k, index) {
  return [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("["), cljs.core.str(index), cljs.core.str("]")].join("");
};
secretary.core.key_index.cljs$lang$maxFixedArity = 2;
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207), function(p__41735) {
  var vec__41736 = p__41735;
  var k = cljs.core.nth.call(null, vec__41736, 0, null);
  var v = cljs.core.nth.call(null, vec__41736, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__41736, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__41736, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646), function(p__41739) {
  var vec__41740 = p__41739;
  var k = cljs.core.nth.call(null, vec__41740, 0, null);
  var v = cljs.core.nth.call(null, vec__41740, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__41740, k, v) {
    return function(p__41743) {
      var vec__41744 = p__41743;
      var ik = cljs.core.nth.call(null, vec__41744, 0, null);
      var iv = cljs.core.nth.call(null, vec__41744, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__41740, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__41747) {
  var vec__41748 = p__41747;
  var k = cljs.core.nth.call(null, vec__41748, 0, null);
  var v = cljs.core.nth.call(null, vec__41748, 1, null);
  return [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(secretary.core.encode.call(null, [cljs.core.str(v)].join("")))].join("");
});
secretary.core.encode_query_params = function secretary$core$encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function secretary$core$encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function secretary$core$parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__41755) {
      var vec__41756 = p__41755;
      var _ = cljs.core.nth.call(null, vec__41756, 0, null);
      var part = cljs.core.nth.call(null, vec__41756, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          return part;
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function secretary$core$key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__41762 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__41762, 0, null);
  var key = cljs.core.nth.call(null, vec__41762, 1, null);
  var path = cljs.core.nth.call(null, vec__41762, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function secretary$core$assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function secretary$core$decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__41768 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__41768, 0, null);
      var v = cljs.core.nth.call(null, vec__41768, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function secretary$core$re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function secretary$core$re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return [cljs.core.str(s__$1), cljs.core.str("\\"), cljs.core.str(c)].join("");
    } else {
      return [cljs.core.str(s__$1), cljs.core.str(c)].join("");
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function secretary$core$lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__41778) {
    var vec__41779 = p__41778;
    var re = cljs.core.nth.call(null, vec__41779, 0, null);
    var action = cljs.core.nth.call(null, vec__41779, 1, null);
    var temp__4657__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__41782 = temp__4657__auto__;
      var m = cljs.core.nth.call(null, vec__41782, 0, null);
      var c = cljs.core.nth.call(null, vec__41782, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function secretary$core$lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__41791 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__41791, 0, null);
      var vec__41794 = cljs.core.nth.call(null, vec__41791, 1, null);
      var r = cljs.core.nth.call(null, vec__41794, 0, null);
      var p = cljs.core.nth.call(null, vec__41794, 1, null);
      var G__41797 = s__$2;
      var G__41798 = [cljs.core.str(pattern), cljs.core.str(r)].join("");
      var G__41799 = cljs.core.conj.call(null, params, p);
      s__$1 = G__41797;
      pattern = G__41798;
      params = G__41799;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(pattern), cljs.core.str("$")].join("")), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function secretary$core$compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", -1294732318);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__41809 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__41809, 0, null);
  var params = cljs.core.nth.call(null, vec__41809, 1, null);
  if (typeof secretary.core.t_secretary$core41812 !== "undefined") {
  } else {
    secretary.core.t_secretary$core41812 = function(orig_route, clauses, vec__41809, re, params, meta41813) {
      this.orig_route = orig_route;
      this.clauses = clauses;
      this.vec__41809 = vec__41809;
      this.re = re;
      this.params = params;
      this.meta41813 = meta41813;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    secretary.core.t_secretary$core41812.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__41809, re, params) {
      return function(_41814, meta41813__$1) {
        var self__ = this;
        var _41814__$1 = this;
        return new secretary.core.t_secretary$core41812(self__.orig_route, self__.clauses, self__.vec__41809, self__.re, self__.params, meta41813__$1);
      };
    }(clauses, vec__41809, re, params);
    secretary.core.t_secretary$core41812.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__41809, re, params) {
      return function(_41814) {
        var self__ = this;
        var _41814__$1 = this;
        return self__.meta41813;
      };
    }(clauses, vec__41809, re, params);
    secretary.core.t_secretary$core41812.prototype.secretary$core$IRouteValue$ = cljs.core.PROTOCOL_SENTINEL;
    secretary.core.t_secretary$core41812.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__41809, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__41809, re, params);
    secretary.core.t_secretary$core41812.prototype.secretary$core$IRouteMatches$ = cljs.core.PROTOCOL_SENTINEL;
    secretary.core.t_secretary$core41812.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__41809, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4657__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4657__auto__)) {
          var vec__41815 = temp__4657__auto__;
          var seq__41816 = cljs.core.seq.call(null, vec__41815);
          var first__41817 = cljs.core.first.call(null, seq__41816);
          var seq__41816__$1 = cljs.core.next.call(null, seq__41816);
          var ___$2 = first__41817;
          var ms = seq__41816__$1;
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__41809, re, params);
    secretary.core.t_secretary$core41812.getBasis = function(clauses, vec__41809, re, params) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "orig-route", "orig-route", 899103121, null), new cljs.core.Symbol(null, "clauses", "clauses", -1199594528, null), new cljs.core.Symbol(null, "vec__41809", "vec__41809", -1626466739, null), new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "meta41813", "meta41813", 2076123865, 
        null)], null);
      };
    }(clauses, vec__41809, re, params);
    secretary.core.t_secretary$core41812.cljs$lang$type = true;
    secretary.core.t_secretary$core41812.cljs$lang$ctorStr = "secretary.core/t_secretary$core41812";
    secretary.core.t_secretary$core41812.cljs$lang$ctorPrWriter = function(clauses, vec__41809, re, params) {
      return function(this__30702__auto__, writer__30703__auto__, opt__30704__auto__) {
        return cljs.core._write.call(null, writer__30703__auto__, "secretary.core/t_secretary$core41812");
      };
    }(clauses, vec__41809, re, params);
    secretary.core.__GT_t_secretary$core41812 = function(clauses, vec__41809, re, params) {
      return function secretary$core$compile_route_$___GT_t_secretary$core41812(orig_route__$1, clauses__$1, vec__41809__$1, re__$1, params__$1, meta41813) {
        return new secretary.core.t_secretary$core41812(orig_route__$1, clauses__$1, vec__41809__$1, re__$1, params__$1, meta41813);
      };
    }(clauses, vec__41809, re, params);
  }
  return new secretary.core.t_secretary$core41812(orig_route, clauses, vec__41809, re, params, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route_STAR_ = function secretary$core$render_route_STAR_(var_args) {
  var args__31211__auto__ = [];
  var len__31204__auto___41821 = arguments.length;
  var i__31205__auto___41822 = 0;
  while (true) {
    if (i__31205__auto___41822 < len__31204__auto___41821) {
      args__31211__auto__.push(arguments[i__31205__auto___41822]);
      var G__41823 = i__31205__auto___41822 + 1;
      i__31205__auto___41822 = G__41823;
      continue;
    } else {
    }
    break;
  }
  var argseq__31212__auto__ = 1 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(1), 0, null) : null;
  return secretary.core.render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__31212__auto__);
};
secretary.core.render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(obj, args) {
  if (!(obj == null) ? false || cljs.core.PROTOCOL_SENTINEL === obj.secretary$core$IRenderRoute$ ? true : !obj.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, obj)) {
    return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
  } else {
    return null;
  }
};
secretary.core.render_route_STAR_.cljs$lang$maxFixedArity = 1;
secretary.core.render_route_STAR_.cljs$lang$applyTo = function(seq41818) {
  var G__41819 = cljs.core.first.call(null, seq41818);
  var seq41818__$1 = cljs.core.next.call(null, seq41818);
  return secretary.core.render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__41819, seq41818__$1);
};
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function secretary$core$add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function secretary$core$remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__41828) {
      var vec__41829 = p__41828;
      var x = cljs.core.nth.call(null, vec__41829, 0, null);
      var _ = cljs.core.nth.call(null, vec__41829, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function secretary$core$reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function secretary$core$locate_route(route) {
  return cljs.core.some.call(null, function(p__41836) {
    var vec__41837 = p__41836;
    var compiled_route = cljs.core.nth.call(null, vec__41837, 0, null);
    var action = cljs.core.nth.call(null, vec__41837, 1, null);
    var temp__4657__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var params = temp__4657__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", -811238024), action, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "route", "route", 329891309), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function secretary$core$locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 329891309)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.prefix = function secretary$core$prefix() {
  return [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null)))].join("");
};
secretary.core.uri_without_prefix = function secretary$core$uri_without_prefix(uri) {
  return clojure.string.replace.call(null, uri, cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(secretary.core.prefix.call(null))].join("")), "");
};
secretary.core.uri_with_leading_slash = function secretary$core$uri_with_leading_slash(uri) {
  if (cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, uri))) {
    return uri;
  } else {
    return [cljs.core.str("/"), cljs.core.str(uri)].join("");
  }
};
secretary.core.dispatch_BANG_ = function secretary$core$dispatch_BANG_(uri) {
  var vec__41845 = clojure.string.split.call(null, secretary.core.uri_without_prefix.call(null, uri), /\?/);
  var uri_path = cljs.core.nth.call(null, vec__41845, 0, null);
  var query_string = cljs.core.nth.call(null, vec__41845, 1, null);
  var uri_path__$1 = secretary.core.uri_with_leading_slash.call(null, uri_path);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__41848 = secretary.core.locate_route.call(null, uri_path__$1);
  var map__41848__$1 = (!(map__41848 == null) ? map__41848.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41848.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41848) : map__41848;
  var action = cljs.core.get.call(null, map__41848__$1, new cljs.core.Keyword(null, "action", "action", -811238024));
  var params = cljs.core.get.call(null, map__41848__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var action__$1 = function() {
    var or__30096__auto__ = action;
    if (cljs.core.truth_(or__30096__auto__)) {
      return or__30096__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
secretary.core.invalid_params = function secretary$core$invalid_params(params, validations) {
  return cljs.core.reduce.call(null, function(m, p__41854) {
    var vec__41855 = p__41854;
    var key = cljs.core.nth.call(null, vec__41855, 0, null);
    var validation = cljs.core.nth.call(null, vec__41855, 1, null);
    var value = cljs.core.get.call(null, params, key);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, validation, value))) {
      return m;
    } else {
      return cljs.core.assoc.call(null, m, key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, validation], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, validations));
};
secretary.core.params_valid_QMARK_ = function secretary$core$params_valid_QMARK_(params, validations) {
  return cljs.core.empty_QMARK_.call(null, secretary.core.invalid_params.call(null, params, validations));
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
RegExp.prototype.secretary$core$IRouteMatches$ = cljs.core.PROTOCOL_SENTINEL;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4657__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__41858 = temp__4657__auto__;
    var seq__41859 = cljs.core.seq.call(null, vec__41858);
    var first__41860 = cljs.core.first.call(null, seq__41859);
    var seq__41859__$1 = cljs.core.next.call(null, seq__41859);
    var _ = first__41860;
    var ms = seq__41859__$1;
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(p__41861, route) {
  var vec__41862 = p__41861;
  var seq__41863 = cljs.core.seq.call(null, vec__41862);
  var first__41864 = cljs.core.first.call(null, seq__41863);
  var seq__41863__$1 = cljs.core.next.call(null, seq__41863);
  var route_string = first__41864;
  var validations = seq__41863__$1;
  var vec__41865 = this;
  var seq__41866 = cljs.core.seq.call(null, vec__41865);
  var first__41867 = cljs.core.first.call(null, seq__41866);
  var seq__41866__$1 = cljs.core.next.call(null, seq__41866);
  var route_string__$1 = first__41867;
  var validations__$1 = seq__41866__$1;
  var params = secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, route_string__$1), route);
  if (cljs.core.truth_(secretary.core.params_valid_QMARK_.call(null, params, validations__$1))) {
    return params;
  } else {
    return null;
  }
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
RegExp.prototype.secretary$core$IRouteValue$ = cljs.core.PROTOCOL_SENTINEL;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(p__41868) {
  var vec__41869 = p__41868;
  var seq__41870 = cljs.core.seq.call(null, vec__41869);
  var first__41871 = cljs.core.first.call(null, seq__41870);
  var seq__41870__$1 = cljs.core.next.call(null, seq__41870);
  var route_string = first__41871;
  var validations = seq__41870__$1;
  var vec__41872 = this;
  var seq__41873 = cljs.core.seq.call(null, vec__41872);
  var first__41874 = cljs.core.first.call(null, seq__41873);
  var seq__41873__$1 = cljs.core.next.call(null, seq__41873);
  var route_string__$1 = first__41874;
  var validations__$1 = seq__41873__$1;
  return cljs.core.vec.call(null, cljs.core.cons.call(null, secretary.core.route_value.call(null, route_string__$1), validations__$1));
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function() {
  var G__41884 = null;
  var G__41884__1 = function(this$) {
    return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
  };
  var G__41884__2 = function(this$, params) {
    var map__41875 = params;
    var map__41875__$1 = (!(map__41875 == null) ? map__41875.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41875.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41875) : map__41875;
    var m = map__41875__$1;
    var query_params = cljs.core.get.call(null, map__41875__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var a = cljs.core.atom.call(null, m);
    var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__41875, map__41875__$1, m, query_params, a) {
      return function($1) {
        var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, a), lookup);
        var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
          cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
          return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
        }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
        return replacement;
      };
    }(map__41875, map__41875__$1, m, query_params, a));
    var path__$1 = [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null))), cljs.core.str(path)].join("");
    var temp__4655__auto__ = function() {
      var and__30084__auto__ = query_params;
      if (cljs.core.truth_(and__30084__auto__)) {
        return secretary.core.encode_query_params.call(null, query_params);
      } else {
        return and__30084__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4655__auto__)) {
      var query_string = temp__4655__auto__;
      return [cljs.core.str(path__$1), cljs.core.str("?"), cljs.core.str(query_string)].join("");
    } else {
      return path__$1;
    }
  };
  G__41884 = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return G__41884__1.call(this, this$);
      case 2:
        return G__41884__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__41884.cljs$core$IFn$_invoke$arity$1 = G__41884__1;
  G__41884.cljs$core$IFn$_invoke$arity$2 = G__41884__2;
  return G__41884;
}();
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$1 = function(this$) {
  var this$__$1 = this;
  return secretary.core.render_route.call(null, this$__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$2 = function(p__41877, params) {
  var vec__41878 = p__41877;
  var seq__41879 = cljs.core.seq.call(null, vec__41878);
  var first__41880 = cljs.core.first.call(null, seq__41879);
  var seq__41879__$1 = cljs.core.next.call(null, seq__41879);
  var route_string = first__41880;
  var validations = seq__41879__$1;
  var vec__41881 = this;
  var seq__41882 = cljs.core.seq.call(null, vec__41881);
  var first__41883 = cljs.core.first.call(null, seq__41882);
  var seq__41882__$1 = cljs.core.next.call(null, seq__41882);
  var route_string__$1 = first__41883;
  var validations__$1 = seq__41882__$1;
  var invalid = secretary.core.invalid_params.call(null, params, validations__$1);
  if (cljs.core.empty_QMARK_.call(null, invalid)) {
    return secretary.core.render_route.call(null, route_string__$1, params);
  } else {
    throw cljs.core.ex_info.call(null, "Could not build route: invalid params", invalid);
  }
};
goog.provide("redditv.components.player");
goog.require("cljs.core");
goog.require("redditv.vimeo");
goog.require("redditv.youtube");
goog.require("rum.core");
goog.require("cljs.core.async");
goog.require("redditv.playlist");
goog.require("redditv.events");
goog.require("redditv.player");
goog.require("redditv.utils");
redditv.components.player.player_instance = cljs.core.atom.call(null, null);
redditv.components.player.generate_video_player = function redditv$components$player$generate_video_player(app_state, item, event_channel) {
  var url = (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(item);
  if (url == null) {
    return redditv.player.create_nullplayer.call(null);
  } else {
    if (cljs.core.truth_(redditv.youtube.is_youtube_url_QMARK_.call(null, url))) {
      return redditv.youtube.create_youtubeplayer.call(null, "redditv-player", url, event_channel);
    } else {
      if (cljs.core.truth_(redditv.vimeo.is_vimeo_url_QMARK_.call(null, url))) {
        return redditv.vimeo.create_vimeo_player.call(null, "redditv-player", url, event_channel);
      } else {
        return null;
      }
    }
  }
};
redditv.components.player.mixin_player_handler = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "did-mount", "did-mount", 918232960), function(state) {
  var event_channel = cljs.core.async.chan.call(null);
  var app_state = cljs.core.first.call(null, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state));
  var fullscreen = cljs.core.deref.call(null, cljs.core.nth.call(null, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state), 2));
  var c__36538__auto___41954 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__36538__auto___41954, event_channel, app_state, fullscreen) {
    return function() {
      var f__36539__auto__ = function() {
        var switch__36426__auto__ = function(c__36538__auto___41954, event_channel, app_state, fullscreen) {
          return function(state_41920) {
            var state_val_41921 = state_41920[1];
            if (state_val_41921 === 7) {
              var inst_41895 = state_41920[2];
              var state_41920__$1 = state_41920;
              if (cljs.core.truth_(inst_41895)) {
                var statearr_41922_41955 = state_41920__$1;
                statearr_41922_41955[1] = 8;
              } else {
                var statearr_41923_41956 = state_41920__$1;
                statearr_41923_41956[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_41921 === 1) {
                var state_41920__$1 = state_41920;
                var statearr_41924_41957 = state_41920__$1;
                statearr_41924_41957[2] = null;
                statearr_41924_41957[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_41921 === 4) {
                  var inst_41890 = state_41920[7];
                  var inst_41889 = state_41920[8];
                  var inst_41889__$1 = state_41920[2];
                  var inst_41890__$1 = redditv.events.is_player_not_started_QMARK_.call(null, inst_41889__$1);
                  var state_41920__$1 = function() {
                    var statearr_41925 = state_41920;
                    statearr_41925[7] = inst_41890__$1;
                    statearr_41925[8] = inst_41889__$1;
                    return statearr_41925;
                  }();
                  if (cljs.core.truth_(inst_41890__$1)) {
                    var statearr_41926_41958 = state_41920__$1;
                    statearr_41926_41958[1] = 5;
                  } else {
                    var statearr_41927_41959 = state_41920__$1;
                    statearr_41927_41959[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_41921 === 15) {
                    var state_41920__$1 = state_41920;
                    var statearr_41928_41960 = state_41920__$1;
                    statearr_41928_41960[2] = null;
                    statearr_41928_41960[1] = 16;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_41921 === 13) {
                      var inst_41913 = state_41920[2];
                      var state_41920__$1 = state_41920;
                      var statearr_41929_41961 = state_41920__$1;
                      statearr_41929_41961[2] = inst_41913;
                      statearr_41929_41961[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_41921 === 6) {
                        var inst_41889 = state_41920[8];
                        var inst_41893 = redditv.events.is_player_ended_QMARK_.call(null, inst_41889);
                        var state_41920__$1 = state_41920;
                        var statearr_41930_41962 = state_41920__$1;
                        statearr_41930_41962[2] = inst_41893;
                        statearr_41930_41962[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_41921 === 17) {
                          var inst_41902 = state_41920[9];
                          var inst_41904 = redditv.player.fullscreen.call(null, inst_41902);
                          var state_41920__$1 = state_41920;
                          var statearr_41931_41963 = state_41920__$1;
                          statearr_41931_41963[2] = inst_41904;
                          statearr_41931_41963[1] = 19;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_41921 === 3) {
                            var inst_41918 = state_41920[2];
                            var state_41920__$1 = state_41920;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_41920__$1, inst_41918);
                          } else {
                            if (state_val_41921 === 12) {
                              var state_41920__$1 = state_41920;
                              var statearr_41932_41964 = state_41920__$1;
                              statearr_41932_41964[2] = null;
                              statearr_41932_41964[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_41921 === 2) {
                                var state_41920__$1 = state_41920;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_41920__$1, 4, event_channel);
                              } else {
                                if (state_val_41921 === 19) {
                                  var inst_41907 = state_41920[2];
                                  var state_41920__$1 = state_41920;
                                  var statearr_41933_41965 = state_41920__$1;
                                  statearr_41933_41965[2] = inst_41907;
                                  statearr_41933_41965[1] = 16;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_41921 === 11) {
                                    var state_41920__$1 = state_41920;
                                    if (cljs.core.truth_(fullscreen)) {
                                      var statearr_41934_41966 = state_41920__$1;
                                      statearr_41934_41966[1] = 14;
                                    } else {
                                      var statearr_41935_41967 = state_41920__$1;
                                      statearr_41935_41967[1] = 15;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_41921 === 9) {
                                      var inst_41889 = state_41920[8];
                                      var inst_41899 = redditv.events.is_player_playing_QMARK_.call(null, inst_41889);
                                      var state_41920__$1 = state_41920;
                                      if (cljs.core.truth_(inst_41899)) {
                                        var statearr_41936_41968 = state_41920__$1;
                                        statearr_41936_41968[1] = 11;
                                      } else {
                                        var statearr_41937_41969 = state_41920__$1;
                                        statearr_41937_41969[1] = 12;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_41921 === 5) {
                                        var inst_41890 = state_41920[7];
                                        var state_41920__$1 = state_41920;
                                        var statearr_41938_41970 = state_41920__$1;
                                        statearr_41938_41970[2] = inst_41890;
                                        statearr_41938_41970[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_41921 === 14) {
                                          var inst_41902 = state_41920[9];
                                          var inst_41902__$1 = cljs.core.deref.call(null, redditv.components.player.player_instance);
                                          var state_41920__$1 = function() {
                                            var statearr_41939 = state_41920;
                                            statearr_41939[9] = inst_41902__$1;
                                            return statearr_41939;
                                          }();
                                          if (cljs.core.truth_(inst_41902__$1)) {
                                            var statearr_41940_41971 = state_41920__$1;
                                            statearr_41940_41971[1] = 17;
                                          } else {
                                            var statearr_41941_41972 = state_41920__$1;
                                            statearr_41941_41972[1] = 18;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_41921 === 16) {
                                            var inst_41910 = state_41920[2];
                                            var state_41920__$1 = state_41920;
                                            var statearr_41942_41973 = state_41920__$1;
                                            statearr_41942_41973[2] = inst_41910;
                                            statearr_41942_41973[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_41921 === 10) {
                                              var inst_41915 = state_41920[2];
                                              var state_41920__$1 = function() {
                                                var statearr_41943 = state_41920;
                                                statearr_41943[10] = inst_41915;
                                                return statearr_41943;
                                              }();
                                              var statearr_41944_41974 = state_41920__$1;
                                              statearr_41944_41974[2] = null;
                                              statearr_41944_41974[1] = 2;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_41921 === 18) {
                                                var state_41920__$1 = state_41920;
                                                var statearr_41945_41975 = state_41920__$1;
                                                statearr_41945_41975[2] = null;
                                                statearr_41945_41975[1] = 19;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_41921 === 8) {
                                                  var inst_41897 = redditv.playlist.select_next.call(null, app_state);
                                                  var state_41920__$1 = state_41920;
                                                  var statearr_41946_41976 = state_41920__$1;
                                                  statearr_41946_41976[2] = inst_41897;
                                                  statearr_41946_41976[1] = 10;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  return null;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__36538__auto___41954, event_channel, app_state, fullscreen);
        return function(switch__36426__auto__, c__36538__auto___41954, event_channel, app_state, fullscreen) {
          return function() {
            var redditv$components$player$state_machine__36427__auto__ = null;
            var redditv$components$player$state_machine__36427__auto____0 = function() {
              var statearr_41950 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_41950[0] = redditv$components$player$state_machine__36427__auto__;
              statearr_41950[1] = 1;
              return statearr_41950;
            };
            var redditv$components$player$state_machine__36427__auto____1 = function(state_41920) {
              while (true) {
                var ret_value__36428__auto__ = function() {
                  try {
                    while (true) {
                      var result__36429__auto__ = switch__36426__auto__.call(null, state_41920);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__36429__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__36429__auto__;
                      }
                      break;
                    }
                  } catch (e41951) {
                    if (e41951 instanceof Object) {
                      var ex__36430__auto__ = e41951;
                      var statearr_41952_41977 = state_41920;
                      statearr_41952_41977[5] = ex__36430__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_41920);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e41951;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__36428__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__41978 = state_41920;
                  state_41920 = G__41978;
                  continue;
                } else {
                  return ret_value__36428__auto__;
                }
                break;
              }
            };
            redditv$components$player$state_machine__36427__auto__ = function(state_41920) {
              switch(arguments.length) {
                case 0:
                  return redditv$components$player$state_machine__36427__auto____0.call(this);
                case 1:
                  return redditv$components$player$state_machine__36427__auto____1.call(this, state_41920);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            redditv$components$player$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$0 = redditv$components$player$state_machine__36427__auto____0;
            redditv$components$player$state_machine__36427__auto__.cljs$core$IFn$_invoke$arity$1 = redditv$components$player$state_machine__36427__auto____1;
            return redditv$components$player$state_machine__36427__auto__;
          }();
        }(switch__36426__auto__, c__36538__auto___41954, event_channel, app_state, fullscreen);
      }();
      var state__36540__auto__ = function() {
        var statearr_41953 = f__36539__auto__.call(null);
        statearr_41953[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__36538__auto___41954;
        return statearr_41953;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__36540__auto__);
    };
  }(c__36538__auto___41954, event_channel, app_state, fullscreen));
  return cljs.core.assoc.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, state, new cljs.core.Keyword("redditv.components.player", "event-channel", "redditv.components.player/event-channel", -2083706849), event_channel), new cljs.core.Keyword("redditv.components.player", "player-instance", "redditv.components.player/player-instance", 1377113206), redditv.player.create_nullplayer.call(null)), new cljs.core.Keyword("redditv.components.player", "current-item", "redditv.components.player/current-item", 
  1398232857), redditv.playlist.get_selected.call(null, app_state));
}, new cljs.core.Keyword(null, "will-update", "will-update", 328062998), function(state) {
  var app_state = cljs.core.first.call(null, (new cljs.core.Keyword("rum", "args", "rum/args", 1315791754)).cljs$core$IFn$_invoke$arity$1(state));
  var event_channel = (new cljs.core.Keyword("redditv.components.player", "event-channel", "redditv.components.player/event-channel", -2083706849)).cljs$core$IFn$_invoke$arity$1(state);
  var current_item = redditv.playlist.get_selected.call(null, app_state);
  var old_item = (new cljs.core.Keyword("redditv.components.player", "current-item", "redditv.components.player/current-item", 1398232857)).cljs$core$IFn$_invoke$arity$1(state);
  if (cljs.core.not_EQ_.call(null, current_item, old_item)) {
    var _ = cljs.core.truth_((new cljs.core.Keyword("redditv.components.player", "player-instance", "redditv.components.player/player-instance", 1377113206)).cljs$core$IFn$_invoke$arity$1(state)) ? redditv.player.dispose.call(null, (new cljs.core.Keyword("redditv.components.player", "player-instance", "redditv.components.player/player-instance", 1377113206)).cljs$core$IFn$_invoke$arity$1(state)) : null;
    var instance = redditv.components.player.generate_video_player.call(null, app_state, current_item, event_channel);
    cljs.core.reset_BANG_.call(null, redditv.components.player.player_instance, instance);
    return cljs.core.assoc.call(null, cljs.core.assoc.call(null, state, new cljs.core.Keyword("redditv.components.player", "player-instance", "redditv.components.player/player-instance", 1377113206), instance), new cljs.core.Keyword("redditv.components.player", "current-item", "redditv.components.player/current-item", 1398232857), current_item);
  } else {
    return state;
  }
}, new cljs.core.Keyword(null, "will-unmount", "will-unmount", -808051550), function(state) {
  cljs.core.reset_BANG_.call(null, redditv.components.player.player_instance, null);
  return cljs.core.dissoc.call(null, cljs.core.dissoc.call(null, cljs.core.dissoc.call(null, state, new cljs.core.Keyword("redditv.components.player", "event-channel", "redditv.components.player/event-channel", -2083706849)), new cljs.core.Keyword("redditv.components.player", "player-instance", "redditv.components.player/player-instance", 1377113206)), new cljs.core.Keyword("redditv.components.player", "current-item", "redditv.components.player/current-item", 1398232857));
}], null);
redditv.components.player.c_player = rum.core.build_defcs.call(null, function(state, app_state, initial_load_QMARK_, playlist_index, show_playlist, fullscreen) {
  var initial_load_QMARK___$1 = rum.core.react.call(null, initial_load_QMARK_);
  var index = rum.core.react.call(null, playlist_index);
  var show_playlist__$1 = rum.core.react.call(null, show_playlist);
  var fullscreen__$1 = rum.core.react.call(null, fullscreen);
  return sablono.interpreter.interpret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [redditv.utils.app_css_class_layout.call(null, app_state, new cljs.core.Keyword(null, "#redditv-player-container", "#redditv-player-container", -146250158)), React.createElement("div", {"id":"redditv-player"})], null));
}, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive, redditv.components.player.mixin_player_handler], null), "c-player");
goog.provide("redditv.components.fullscreen_controls");
goog.require("cljs.core");
goog.require("rum.core");
goog.require("redditv.playlist");
goog.require("redditv.utils");
goog.require("redditv.components.mdl");
redditv.components.fullscreen_controls.c_fullscreen_controls = rum.core.build_defcs.call(null, function(state, app_state) {
  var map__41983 = rum.core.react.call(null, app_state);
  var map__41983__$1 = (!(map__41983 == null) ? map__41983.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41983.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41983) : map__41983;
  var fullscreen = cljs.core.get.call(null, map__41983__$1, new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054));
  return sablono.interpreter.interpret.call(null, cljs.core.truth_(fullscreen) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".redditv-fullscreen-controls", ".redditv-fullscreen-controls", 663933541), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "skip_next", new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button-fullscreen noselect", 
  new cljs.core.Keyword(null, "title", "title", 636505583), "Play Next Video", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41983, map__41983__$1, fullscreen) {
    return function() {
      return redditv.playlist.select_next.call(null, app_state);
    };
  }(map__41983, map__41983__$1, fullscreen)], null)), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "skip_previous", new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button-fullscreen noselect", new cljs.core.Keyword(null, "title", "title", 636505583), "Play Previous Video", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41983, map__41983__$1, fullscreen) {
    return function() {
      return redditv.playlist.select_prev.call(null, app_state);
    };
  }(map__41983, map__41983__$1, fullscreen)], null)), redditv.components.mdl.icon.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1843675177), "fullscreen_exit", new cljs.core.Keyword(null, "className", "className", -1983287057), "redditv-button-fullscreen noselect", new cljs.core.Keyword(null, "title", "title", 636505583), "Exit Fullscreen", new cljs.core.Keyword(null, "onClick", "onClick", -1991238530), function(map__41983, map__41983__$1, fullscreen) {
    return function() {
      return cljs.core.swap_BANG_.call(null, app_state, cljs.core.assoc, new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054), false);
    };
  }(map__41983, map__41983__$1, fullscreen)], null))], null) : null);
}, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.reactive], null), "c-fullscreen-controls");
goog.provide("redditv.storage");
goog.require("cljs.core");
redditv.storage.enabled_QMARK_ = false;
redditv.storage.has_local_storage_QMARK_ = function() {
  var and__30084__auto__ = redditv.storage.enabled_QMARK_;
  if (cljs.core.truth_(and__30084__auto__)) {
    return localStorage instanceof Storage;
  } else {
    return and__30084__auto__;
  }
}();
redditv.storage.app_state_key = "redditv-app-state";
redditv.storage.stringify = function redditv$storage$stringify(x) {
  var s = cljs.core.clj__GT_js.call(null, x);
  return JSON.stringify(s);
};
redditv.storage.parse = function redditv$storage$parse(x) {
  var x__$1 = JSON.parse(x);
  return cljs.core.js__GT_clj.call(null, x__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
};
redditv.storage.save_app_state_BANG_ = function redditv$storage$save_app_state_BANG_(state) {
  if (cljs.core.truth_(redditv.storage.has_local_storage_QMARK_)) {
    return localStorage.setItem(redditv.storage.app_state_key, redditv.storage.stringify.call(null, state));
  } else {
    return null;
  }
};
redditv.storage.load_app_state = function redditv$storage$load_app_state() {
  if (cljs.core.truth_(redditv.storage.has_local_storage_QMARK_)) {
    return redditv.storage.parse.call(null, localStorage.getItem(redditv.storage.app_state_key));
  } else {
    return null;
  }
};
goog.provide("redditv.core");
goog.require("cljs.core");
goog.require("secretary.core");
goog.require("redditv.youtube");
goog.require("redditv.player");
goog.require("redditv.reddit");
goog.require("goog.history.EventType");
goog.require("rum.core");
goog.require("cljs.core.async");
goog.require("redditv.playlist");
goog.require("redditv.components.playlist");
goog.require("goog.History");
goog.require("redditv.events");
goog.require("redditv.components.sidepane");
goog.require("redditv.components.header");
goog.require("redditv.icons");
goog.require("redditv.utils");
goog.require("redditv.components.player");
goog.require("goog.events");
goog.require("redditv.components.fullscreen_controls");
goog.require("redditv.storage");
cljs.core.enable_console_print_BANG_.call(null);
if (typeof redditv.core.app_state !== "undefined") {
} else {
  redditv.core.app_state = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "playlist", "playlist", 1952276871), new cljs.core.Keyword(null, "loading?", "loading?", 1905707049), new cljs.core.Keyword(null, "show-search", "show-search", 266138187), new cljs.core.Keyword(null, "show-settings", "show-settings", 680287246), new cljs.core.Keyword(null, "settings-show-nsfw", "settings-show-nsfw", -1673123951), new cljs.core.Keyword(null, "fullscreen", "fullscreen", 
  -4371054), new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518), new cljs.core.Keyword(null, "playlist-selected-id", "playlist-selected-id", -1342487694), new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692), new cljs.core.Keyword(null, "show-playlist", "show-playlist", -1969029604), new cljs.core.Keyword(null, "initial-load?", "initial-load?", 2130265181), new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754), 
  new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961)], [cljs.core.PersistentVector.EMPTY, true, false, false, true, false, "hot", null, 100, true, 0, "videos", 0]));
}
if (typeof redditv.core.initial_load_QMARK_ !== "undefined") {
} else {
  redditv.core.initial_load_QMARK_ = rum.core.cursor_in.call(null, redditv.core.app_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "initial-load?", "initial-load?", 2130265181)], null));
}
if (typeof redditv.core.playlist_index !== "undefined") {
} else {
  redditv.core.playlist_index = rum.core.cursor_in.call(null, redditv.core.app_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961)], null));
}
if (typeof redditv.core.show_playlist !== "undefined") {
} else {
  redditv.core.show_playlist = rum.core.cursor_in.call(null, redditv.core.app_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "show-playlist", "show-playlist", -1969029604)], null));
}
if (typeof redditv.core.fullscreen !== "undefined") {
} else {
  redditv.core.fullscreen = rum.core.cursor_in.call(null, redditv.core.app_state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054)], null));
}
secretary.core.set_config_BANG_.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), "#");
var action__41705__auto___41995 = function(params__41706__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__41706__auto__)) {
    var map__41989 = params__41706__auto__;
    var map__41989__$1 = (!(map__41989 == null) ? map__41989.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41989.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41989) : map__41989;
    var subreddit = cljs.core.get.call(null, map__41989__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
    var query_params = cljs.core.get.call(null, map__41989__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    cljs.core.swap_BANG_.call(null, redditv.core.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754), subreddit, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518), cljs.core.get.call(null, query_params, new cljs.core.Keyword(null, "sort", "sort", 953465918), "hot"), new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692), redditv.utils.parse_int.call(null, cljs.core.get.call(null, 
    query_params, new cljs.core.Keyword(null, "count", "count", 2139924085), "100")));
    redditv.utils.force_app_reload_BANG_.call(null, redditv.core.app_state);
    return redditv.storage.save_app_state_BANG_.call(null, cljs.core.deref.call(null, redditv.core.app_state));
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__41706__auto__)) {
      var vec__41991 = params__41706__auto__;
      var subreddit = cljs.core.nth.call(null, vec__41991, 0, null);
      var query_params = cljs.core.nth.call(null, vec__41991, 1, null);
      cljs.core.swap_BANG_.call(null, redditv.core.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754), subreddit, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518), cljs.core.get.call(null, query_params, new cljs.core.Keyword(null, "sort", "sort", 953465918), "hot"), new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692), redditv.utils.parse_int.call(null, cljs.core.get.call(null, 
      query_params, new cljs.core.Keyword(null, "count", "count", 2139924085), "100")));
      redditv.utils.force_app_reload_BANG_.call(null, redditv.core.app_state);
      return redditv.storage.save_app_state_BANG_.call(null, cljs.core.deref.call(null, redditv.core.app_state));
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "/r/:subreddit", action__41705__auto___41995);
redditv.core.subreddit_path = function(action__41705__auto___41995) {
  return function redditv$core$subreddit_path(var_args) {
    var args__31211__auto__ = [];
    var len__31204__auto___41996 = arguments.length;
    var i__31205__auto___41997 = 0;
    while (true) {
      if (i__31205__auto___41997 < len__31204__auto___41996) {
        args__31211__auto__.push(arguments[i__31205__auto___41997]);
        var G__41998 = i__31205__auto___41997 + 1;
        i__31205__auto___41997 = G__41998;
        continue;
      } else {
      }
      break;
    }
    var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
    return redditv.core.subreddit_path.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
  };
}(action__41705__auto___41995);
redditv.core.subreddit_path.cljs$core$IFn$_invoke$arity$variadic = function(action__41705__auto___41995) {
  return function(args__41704__auto__) {
    return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/r/:subreddit", args__41704__auto__);
  };
}(action__41705__auto___41995);
redditv.core.subreddit_path.cljs$lang$maxFixedArity = 0;
redditv.core.subreddit_path.cljs$lang$applyTo = function(action__41705__auto___41995) {
  return function(seq41994) {
    return redditv.core.subreddit_path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq41994));
  };
}(action__41705__auto___41995);
var action__41705__auto___42005 = function(params__41706__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__41706__auto__)) {
    var map__41999 = params__41706__auto__;
    var map__41999__$1 = (!(map__41999 == null) ? map__41999.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__41999.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__41999) : map__41999;
    var subreddit = cljs.core.get.call(null, map__41999__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
    var index = cljs.core.get.call(null, map__41999__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
    var query_params = cljs.core.get.call(null, map__41999__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    cljs.core.swap_BANG_.call(null, redditv.core.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754), subreddit, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), redditv.utils.parse_int.call(null, index), new cljs.core.Keyword(null, "playlist-selected-id", "playlist-selected-id", -1342487694), null, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518), cljs.core.get_in.call(null, 
    query_params, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "sort", "sort", 953465918)], null), "hot"), new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692), redditv.utils.parse_int.call(null, cljs.core.get_in.call(null, query_params, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "count", "count", 2139924085)], null), "100")), new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054), redditv.utils.parse_bool.call(null, cljs.core.get_in.call(null, query_params, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054)], null), "false")));
    redditv.utils.force_app_reload_BANG_.call(null, redditv.core.app_state);
    return redditv.storage.save_app_state_BANG_.call(null, cljs.core.deref.call(null, redditv.core.app_state));
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__41706__auto__)) {
      var vec__42001 = params__41706__auto__;
      var subreddit = cljs.core.nth.call(null, vec__42001, 0, null);
      var index = cljs.core.nth.call(null, vec__42001, 1, null);
      var query_params = cljs.core.nth.call(null, vec__42001, 2, null);
      cljs.core.swap_BANG_.call(null, redditv.core.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754), subreddit, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), redditv.utils.parse_int.call(null, index), new cljs.core.Keyword(null, "playlist-selected-id", "playlist-selected-id", -1342487694), null, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518), cljs.core.get_in.call(null, 
      query_params, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "sort", "sort", 953465918)], null), "hot"), new cljs.core.Keyword(null, "settings-video-count", "settings-video-count", 1798809692), redditv.utils.parse_int.call(null, cljs.core.get_in.call(null, query_params, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
      "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "count", "count", 2139924085)], null), "100")), new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054), redditv.utils.parse_bool.call(null, cljs.core.get_in.call(null, query_params, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054)], null), 
      "false")));
      redditv.utils.force_app_reload_BANG_.call(null, redditv.core.app_state);
      return redditv.storage.save_app_state_BANG_.call(null, cljs.core.deref.call(null, redditv.core.app_state));
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, /\/r\/([\w\d]+)\/(\d+)/, action__41705__auto___42005);
redditv.core.subreddit_path_with_index = function(action__41705__auto___42005) {
  return function redditv$core$subreddit_path_with_index(var_args) {
    var args__31211__auto__ = [];
    var len__31204__auto___42006 = arguments.length;
    var i__31205__auto___42007 = 0;
    while (true) {
      if (i__31205__auto___42007 < len__31204__auto___42006) {
        args__31211__auto__.push(arguments[i__31205__auto___42007]);
        var G__42008 = i__31205__auto___42007 + 1;
        i__31205__auto___42007 = G__42008;
        continue;
      } else {
      }
      break;
    }
    var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
    return redditv.core.subreddit_path_with_index.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
  };
}(action__41705__auto___42005);
redditv.core.subreddit_path_with_index.cljs$core$IFn$_invoke$arity$variadic = function(action__41705__auto___42005) {
  return function(args__41704__auto__) {
    return cljs.core.apply.call(null, secretary.core.render_route_STAR_, /\/r\/([\w\d]+)\/(\d+)/, args__41704__auto__);
  };
}(action__41705__auto___42005);
redditv.core.subreddit_path_with_index.cljs$lang$maxFixedArity = 0;
redditv.core.subreddit_path_with_index.cljs$lang$applyTo = function(action__41705__auto___42005) {
  return function(seq42004) {
    return redditv.core.subreddit_path_with_index.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq42004));
  };
}(action__41705__auto___42005);
var action__41705__auto___42015 = function(params__41706__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__41706__auto__)) {
    var map__42009 = params__41706__auto__;
    var map__42009__$1 = (!(map__42009 == null) ? map__42009.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__42009.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__42009) : map__42009;
    var subreddit = cljs.core.get.call(null, map__42009__$1, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754));
    var index = cljs.core.get.call(null, map__42009__$1, new cljs.core.Keyword(null, "index", "index", -1531685915));
    var id = cljs.core.get.call(null, map__42009__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
    var query_params = cljs.core.get.call(null, map__42009__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    cljs.core.swap_BANG_.call(null, redditv.core.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754), subreddit, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), redditv.utils.parse_int.call(null, index), new cljs.core.Keyword(null, "playlist-selected-id", "playlist-selected-id", -1342487694), id, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518), cljs.core.get_in.call(null, 
    query_params, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "sort", "sort", 953465918)], null), "hot"));
    redditv.utils.force_app_reload_BANG_.call(null, redditv.core.app_state);
    return redditv.storage.save_app_state_BANG_.call(null, cljs.core.deref.call(null, redditv.core.app_state));
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__41706__auto__)) {
      var vec__42011 = params__41706__auto__;
      var subreddit = cljs.core.nth.call(null, vec__42011, 0, null);
      var index = cljs.core.nth.call(null, vec__42011, 1, null);
      var id = cljs.core.nth.call(null, vec__42011, 2, null);
      var query_params = cljs.core.nth.call(null, vec__42011, 3, null);
      cljs.core.swap_BANG_.call(null, redditv.core.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "subreddit", "subreddit", -670654754), subreddit, new cljs.core.Keyword(null, "playlist-selected-index", "playlist-selected-index", -1037896961), redditv.utils.parse_int.call(null, index), new cljs.core.Keyword(null, "playlist-selected-id", "playlist-selected-id", -1342487694), id, new cljs.core.Keyword(null, "settings-video-category", "settings-video-category", -1875669518), cljs.core.get_in.call(null, 
      query_params, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), new cljs.core.Keyword(null, "sort", "sort", 953465918)], null), "hot"));
      redditv.utils.force_app_reload_BANG_.call(null, redditv.core.app_state);
      return redditv.storage.save_app_state_BANG_.call(null, cljs.core.deref.call(null, redditv.core.app_state));
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, /\/r\/([\w\d]+)\/(\d)\/([\w\d]+)/, action__41705__auto___42015);
redditv.core.subreddit_path_with_search = function(action__41705__auto___42015) {
  return function redditv$core$subreddit_path_with_search(var_args) {
    var args__31211__auto__ = [];
    var len__31204__auto___42016 = arguments.length;
    var i__31205__auto___42017 = 0;
    while (true) {
      if (i__31205__auto___42017 < len__31204__auto___42016) {
        args__31211__auto__.push(arguments[i__31205__auto___42017]);
        var G__42018 = i__31205__auto___42017 + 1;
        i__31205__auto___42017 = G__42018;
        continue;
      } else {
      }
      break;
    }
    var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
    return redditv.core.subreddit_path_with_search.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
  };
}(action__41705__auto___42015);
redditv.core.subreddit_path_with_search.cljs$core$IFn$_invoke$arity$variadic = function(action__41705__auto___42015) {
  return function(args__41704__auto__) {
    return cljs.core.apply.call(null, secretary.core.render_route_STAR_, /\/r\/([\w\d]+)\/(\d)\/([\w\d]+)/, args__41704__auto__);
  };
}(action__41705__auto___42015);
redditv.core.subreddit_path_with_search.cljs$lang$maxFixedArity = 0;
redditv.core.subreddit_path_with_search.cljs$lang$applyTo = function(action__41705__auto___42015) {
  return function(seq42014) {
    return redditv.core.subreddit_path_with_search.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq42014));
  };
}(action__41705__auto___42015);
var action__41705__auto___42025 = function(params__41706__auto__) {
  if (cljs.core.map_QMARK_.call(null, params__41706__auto__)) {
    var map__42019 = params__41706__auto__;
    var map__42019__$1 = (!(map__42019 == null) ? map__42019.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__42019.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__42019) : map__42019;
    var temp__4655__auto___42026 = redditv.storage.load_app_state.call(null);
    if (cljs.core.truth_(temp__4655__auto___42026)) {
      var state_42027 = temp__4655__auto___42026;
      cljs.core.reset_BANG_.call(null, redditv.core.app_state, state_42027);
    } else {
      redditv.playlist.reload.call(null, redditv.core.app_state);
    }
    return redditv.utils.force_app_reload_BANG_.call(null, redditv.core.app_state);
  } else {
    if (cljs.core.vector_QMARK_.call(null, params__41706__auto__)) {
      var vec__42021 = params__41706__auto__;
      var temp__4655__auto___42028 = redditv.storage.load_app_state.call(null);
      if (cljs.core.truth_(temp__4655__auto___42028)) {
        var state_42029 = temp__4655__auto___42028;
        cljs.core.reset_BANG_.call(null, redditv.core.app_state, state_42029);
      } else {
        redditv.playlist.reload.call(null, redditv.core.app_state);
      }
      return redditv.utils.force_app_reload_BANG_.call(null, redditv.core.app_state);
    } else {
      return null;
    }
  }
};
secretary.core.add_route_BANG_.call(null, "*", action__41705__auto___42025);
redditv.core.default_route = function(action__41705__auto___42025) {
  return function redditv$core$default_route(var_args) {
    var args__31211__auto__ = [];
    var len__31204__auto___42030 = arguments.length;
    var i__31205__auto___42031 = 0;
    while (true) {
      if (i__31205__auto___42031 < len__31204__auto___42030) {
        args__31211__auto__.push(arguments[i__31205__auto___42031]);
        var G__42032 = i__31205__auto___42031 + 1;
        i__31205__auto___42031 = G__42032;
        continue;
      } else {
      }
      break;
    }
    var argseq__31212__auto__ = 0 < args__31211__auto__.length ? new cljs.core.IndexedSeq(args__31211__auto__.slice(0), 0, null) : null;
    return redditv.core.default_route.cljs$core$IFn$_invoke$arity$variadic(argseq__31212__auto__);
  };
}(action__41705__auto___42025);
redditv.core.default_route.cljs$core$IFn$_invoke$arity$variadic = function(action__41705__auto___42025) {
  return function(args__41704__auto__) {
    return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "*", args__41704__auto__);
  };
}(action__41705__auto___42025);
redditv.core.default_route.cljs$lang$maxFixedArity = 0;
redditv.core.default_route.cljs$lang$applyTo = function(action__41705__auto___42025) {
  return function(seq42024) {
    return redditv.core.default_route.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq42024));
  };
}(action__41705__auto___42025);
var h_42035 = new goog.History;
goog.events.listen(h_42035, goog.history.EventType.NAVIGATE, function(h_42035) {
  return function(p1__42033_SHARP_) {
    return secretary.core.dispatch_BANG_.call(null, p1__42033_SHARP_.token);
  };
}(h_42035));
var G__42034_42036 = h_42035;
G__42034_42036.setEnabled(true);
redditv.core.mixin_keyboard_controls = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "did-mount", "did-mount", 918232960), function(state) {
  return window.addEventListener("keydown", function(e) {
    if (cljs.core.truth_(redditv.utils.query_in_focus_QMARK_.call(null, "#input-search-bar"))) {
      return null;
    } else {
      var keycode = e.keyCode;
      var G__42037 = keycode;
      switch(G__42037) {
        case 27:
          return cljs.core.swap_BANG_.call(null, redditv.core.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "fullscreen", "fullscreen", -4371054), false);
          break;
        case 37:
          return redditv.playlist.select_prev.call(null, redditv.core.app_state);
          break;
        case 39:
          return redditv.playlist.select_next.call(null, redditv.core.app_state);
          break;
        case 83:
          return cljs.core.swap_BANG_.call(null, redditv.core.app_state, cljs.core.assoc, new cljs.core.Keyword(null, "show-search", "show-search", 266138187), true);
          break;
        case 67:
          return redditv.playlist.open_current_video_comments.call(null, redditv.core.app_state);
          break;
        default:
          return null;
      }
    }
  });
}], null);
redditv.core.app = rum.core.build_defc.call(null, function() {
  var attrs42039 = redditv.components.header.c_header.call(null, redditv.core.app_state);
  return cljs.core.apply.call(null, React.createElement, "div", cljs.core.map_QMARK_.call(null, attrs42039) ? sablono.interpreter.attributes.call(null, sablono.normalize.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["redditv-main"], null)], null), attrs42039)) : {"className":"redditv-main"}, cljs.core.map_QMARK_.call(null, attrs42039) ? 
  new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, redditv.components.sidepane.c_sidepane.call(null, redditv.core.app_state)), sablono.interpreter.interpret.call(null, redditv.components.player.c_player.call(null, redditv.core.app_state, redditv.core.initial_load_QMARK_, redditv.core.playlist_index, redditv.core.show_playlist, redditv.core.fullscreen)), sablono.interpreter.interpret.call(null, redditv.components.playlist.c_playlist.call(null, 
  redditv.core.app_state)), sablono.interpreter.interpret.call(null, redditv.components.fullscreen_controls.c_fullscreen_controls.call(null, redditv.core.app_state))], null) : new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [sablono.interpreter.interpret.call(null, attrs42039), sablono.interpreter.interpret.call(null, redditv.components.sidepane.c_sidepane.call(null, redditv.core.app_state)), sablono.interpreter.interpret.call(null, redditv.components.player.c_player.call(null, 
  redditv.core.app_state, redditv.core.initial_load_QMARK_, redditv.core.playlist_index, redditv.core.show_playlist, redditv.core.fullscreen)), sablono.interpreter.interpret.call(null, redditv.components.playlist.c_playlist.call(null, redditv.core.app_state)), sablono.interpreter.interpret.call(null, redditv.components.fullscreen_controls.c_fullscreen_controls.call(null, redditv.core.app_state))], null));
}, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [redditv.core.mixin_keyboard_controls], null), "app");
redditv.playlist.reload.call(null, redditv.core.app_state, new cljs.core.Keyword(null, "reload?", "reload?", -1559406964), true);
rum.core.mount.call(null, redditv.core.app.call(null), document.querySelector("#app"));
goog.provide("redditv.embedly");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("redditv.player");
goog.require("redditv.events");
redditv.embedly.regex_liveleak_url = /https?:\/\/www.liveleak.com\/view?i=([a-zA-Z0-9_-]+)&?.*/;
redditv.embedly.ex_liveleak_url = "https://www.liveleak.com/view?i\x3dbe4_1486363147";
redditv.embedly.video_url__GT_video_id = function redditv$embedly$video_url__GT_video_id(url) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, redditv.embedly.regex_liveleak_url, url))) {
    return cljs.core.second.call(null, cljs.core.re_matches.call(null, redditv.embedly.regex_liveleak_url, url));
  } else {
    return null;
  }
};
redditv.embedly.is_liveleak_url_QMARK_ = function redditv$embedly$is_liveleak_url_QMARK_(url) {
  return cljs.core.boolean$.call(null, cljs.core.re_matches.call(null, redditv.embedly.regex_liveleak_url, url));
};
